{
    "item.pixelmon.fossil_machine_tank": "Fossil Machine Tank",
    "item.pixelmon.fossil_machine_tank.tooltip": "The center piece of a Fossil machine and one of the four components required to craft one.",
    "item.pixelmon.fossil_machine_display": "Fossil Machine Display",
    "item.pixelmon.fossil_machine_display.tooltip": "The Fossil machine's display screen and one of the four components required to craft one.",
    "item.pixelmon.fossil_machine_top": "Fossil Machine Top",
    "item.pixelmon.fossil_machine_top.tooltip": "The top piece of a Fossil machine and one of the four components required to craft one.",
    "item.pixelmon.fossil_machine_base": "Fossil Machine Base",
    "item.pixelmon.fossil_machine_base.tooltip": "The bottom piece of a Fossil machine and one of four components required to craft one.",
    "item.pixelmon.green_tank": "Green Tank",
    "item.pixelmon.green_tank.tooltip": "One of the components of the Cloning Machine",
    "item.pixelmon.orange_tank": "Orange Tank",
    "item.pixelmon.orange_tank.tooltip": "One of the components of the Cloning Machine",
    "item.pixelmon.cloner_cord": "Cloner Cord",
    "item.pixelmon.cloner_cord.tooltip": "One of the components of the Cloning Machine",
    "item.pixelmon.hidden_iron_door_item": "Hidden Iron Door",
    "item.pixelmon.hidden_wooden_door_item": "Hidden Wooden Door",
    "item.pixelmon.pokedex": "Pokédex",
    "item.pixelmon.wood_hammer": "Wood Hammer",
    "item.pixelmon.stone_hammer": "Stone Hammer",
    "item.pixelmon.iron_hammer": "Iron Hammer",
    "item.pixelmon.gold_hammer": "Gold Hammer",
    "item.pixelmon.diamond_hammer": "Diamond Hammer",
    "item.pixelmon.beef_hammer": "Daniel N's Hammer",
    "item.pixelmon.aluminium_hammer": "Aluminum Hammer",
    "item.pixelmon.aluminium_axe": "Aluminum Axe",
    "item.pixelmon.aluminium_shovel": "Aluminum Shovel",
    "item.pixelmon.aluminium_spade": "Aluminum Shovel",
    "item.pixelmon.aluminium_pickaxe": "Aluminum Pickaxe",
    "item.pixelmon.aluminium_hoe": "Aluminum Hoe",
    "item.pixelmon.wailmer_pail": "Wailmer Pail",
    "item.pixelmon.pokemon_editor": "Pokémon Editor",
    "item.pixelmon.trainer_editor": "NPC Editor",
    "item.pixelmon.quest_editor": "Quest Editor",
    "item.pixelmon.quest_editor.tooltip": "Left click an entity to copy it's UUID. Right click to open the Quest Editor.",
    "item.quest_editor.copy": "Copied UUID to clipboard!",
    "item.quest_editor.cantuse": "You need to enable external quest JSONs in order to use this item!",
    "item.pixelmon.aluminium_sword": "Aluminum Sword",
    "item.pixelmon.aluminium_helmet": "Aluminum Helmet",
    "item.pixelmon.aluminium_chestplate": "Aluminum Chestplate",
    "item.pixelmon.aluminium_leggings": "Aluminum Leggings",
    "item.pixelmon.aluminium_boots": "Aluminum Boots",
    "item.pixelmon.new_running_boots": "New Running Boots",
    "item.pixelmon.old_running_boots": "Old Running Boots",
    "item.pixelmon.aluminium_ingot": "Aluminum Ingot",
    "item.pixelmon.aluminium_plate": "Aluminum Plate",
    "item.pixelmon.tumblestone": "Tumblestone",
    "item.pixelmon.sky_tumblestone": "Sky Tumblestone",
    "item.pixelmon.black_tumblestone": "Black Tumblestone",
    "item.pixelmon.raw_tumblestone": "Raw Tumblestone",
    "item.pixelmon.raw_sky_tumblestone": "Raw Sky Tumblestone",
    "item.pixelmon.raw_black_tumblestone": "Raw Black Tumblestone",
    "item.pixelmon.black_augurite": "Black Augurite",
    "item.pixelmon.fishing_log": "Fishing Log",
    "item.pixelmon.old_rod": "Old Rod",
    "item.pixelmon.good_rod": "Good Rod",
    "item.pixelmon.super_rod": "Super Rod",
    "item.pixelmon.oas_rod": "Oa10712's Fishing Rod",
    "item.pixelmon.oas_rod.tooltip": "The best Old Rod.",
    "item.pixelmon.oldrod.quality_0": "Standard Old Rod",
    "item.pixelmon.oldrod.quality_1": "So-So Old Rod",
    "item.pixelmon.oldrod.quality_2": "Good Old Rod",
    "item.pixelmon.oldrod.quality_3": "Great Old Rod",
    "item.pixelmon.oldrod.quality_4": "Rare Old Rod",
    "item.pixelmon.oldrod.quality_5": "Pro's Old Rod",
    "item.pixelmon.oldrod.quality_6": "Supreme Old Rod",
    "item.pixelmon.goodrod.quality_0": "Standard Good Rod",
    "item.pixelmon.goodrod.quality_1": "So-So Good Rod",
    "item.pixelmon.goodrod.quality_2": "Good Good Rod",
    "item.pixelmon.goodrod.quality_3": "Great Good Rod",
    "item.pixelmon.goodrod.quality_4": "Rare Good Rod",
    "item.pixelmon.goodrod.quality_5": "Pro's Good Rod",
    "item.pixelmon.goodrod.quality_6": "Supreme Good Rod",
    "item.pixelmon.superrod.quality_0": "Standard Super Rod",
    "item.pixelmon.superrod.quality_1": "So-So Super Rod",
    "item.pixelmon.superrod.quality_2": "Good Super Rod",
    "item.pixelmon.superrod.quality_3": "Great Super Rod",
    "item.pixelmon.superrod.quality_4": "Rare Super Rod",
    "item.pixelmon.superrod.quality_5": "Pro's Super Rod",
    "item.pixelmon.superrod.quality_6": "Supreme Super Rod",
    "item.pixelmon.trade_monitor": "Trade Monitor",
    "item.pixelmon.trade_monitor.tooltip": "A trade panel is the head piece of a trade machine and one of four components required to craft one.",
    "item.pixelmon.trade_holder_right": "Trade Holder Right",
    "item.pixelmon.trade_holder_right.tooltip": "A trade panel is the right piece of a trade machine and one of four components required to craft one.",
    "item.pixelmon.trade_holder_left": "Trade Holder Left",
    "item.pixelmon.trade_holder_left.tooltip": "A trade panel is the left piece of a trade machine and one of four components required to craft one.",
    "item.pixelmon.trade_panel": "Trade Panel",
    "item.pixelmon.trade_panel.tooltip": "A trade panel is the core piece of a trade machine and one of four components required to craft one.",
    "item.pixelmon.mystery_dungeon_map": "Mystery Dungeon Map",
    "item.pixelmon.uno_orb": "Orb of Frozen Souls",
    "item.pixelmon.uno_orb.tooltip": "",
    "item.pixelmon.dos_orb": "Orb of Static Souls",
    "item.pixelmon.tres_orb": "Orb of Fiery Souls",
    "item.pixelmon.orb": "Orb",
    "item.pixelmon.item_finder": "Item Finder",
    "item.pixelmon.zygarde_cube": "Zygarde Cube",
    "item.pixelmon.gaebolg": "Gáe Bolg",
    "item.pixelmon.gaebolg.tooltip": "If found, please return to Cú Chulainn",
    "item.pixelmon.ui_element": "UI Element",
    "item.pixelmon.den_spawner": "Max Raid Den Spawner",
    "item.pixelmon.armorite_ore": "Armorite Ore",
    "item.pixelmon.dynite_ore": "Dynite Ore",
    "item.pixelmon.wishing_piece": "Wishing Piece",
    "item.pixelmon.wishing_piece.tooltip": "Throw into a Den to call forth a Dynamax Pokémon.",
    "item.pixelmon.waterdude_wishing_piece": "§bWaterdude's Wishing Piece",
    "item.pixelmon.waterdude_wishing_piece.tooltip": "Throw into a Den to call forth a Legendary Dynamax Pokémon.",

    "item.pixelmon.poke_ball": "Poké Ball",
    "item.pixelmon.poke_ball.tooltip": "Can be used to catch Pokémon.",
    "item.pixelmon.dream_ball": "Dream Ball",
    "item.pixelmon.dream_ball.tooltip": "Can be used to catch Pokémon. 4x catch rate on Sleeping Pokémon.",
    "item.pixelmon.great_ball": "Great Ball",
    "item.pixelmon.great_ball.tooltip": "Can be used to catch Pokémon. 1.5x catch rate.",
    "item.pixelmon.ultra_ball": "Ultra Ball",
    "item.pixelmon.ultra_ball.tooltip": "Can be used to catch Pokémon. 2x catch rate.",
    "item.pixelmon.master_ball": "Master Ball",
    "item.pixelmon.master_ball.tooltip": "Can be used to catch Pokémon. Will never fail.",
    "item.pixelmon.level_ball": "Level Ball",
    "item.pixelmon.level_ball.tooltip": "Can be used to catch Pokémon. Increased catch rate the lower the wild Pokémon's level is compared to the player's active Pokémon.",
    "item.pixelmon.moon_ball": "Moon Ball",
    "item.pixelmon.moon_ball.tooltip": "Can be used to catch Pokémon. 4x catch rate if the Pokémon's evolution line involves a moon stone.",
    "item.pixelmon.friend_ball": "Friend Ball",
    "item.pixelmon.friend_ball.tooltip": "Can be used to catch Pokémon. Greatly boosts the captured Pokémon's happiness.",
    "item.pixelmon.love_ball": "Love Ball",
    "item.pixelmon.love_ball.tooltip": "Can be used to catch Pokémon. 8x catch rate if the Pokémon is the same species and opposite gender of the trainer's active Pokémon.",
    "item.pixelmon.safari_ball": "Safari Ball",
    "item.pixelmon.safari_ball.tooltip": "Can be used to catch Pokémon. 1.5x catch rate in Plains.",
    "item.pixelmon.heavy_ball": "Heavy Ball",
    "item.pixelmon.heavy_ball.tooltip": "Can be used to catch Pokémon. Increased catch rate on heavy Pokémon.",
    "item.pixelmon.fast_ball": "Fast Ball",
    "item.pixelmon.fast_ball.tooltip": "Can be used to catch Pokémon. Increased catch rate on fast Pokémon.",
    "item.pixelmon.repeat_ball": "Repeat Ball",
    "item.pixelmon.repeat_ball.tooltip": "Can be used to catch Pokémon. 3x catch rate on species the trainer has already caught.",
    "item.pixelmon.timer_ball": "Timer Ball",
    "item.pixelmon.timer_ball.tooltip": "Can be used to catch Pokémon. Increased catch rate based on battle duration.",
    "item.pixelmon.nest_ball": "Nest Ball",
    "item.pixelmon.nest_ball.tooltip": "Can be used to catch Pokémon. Increased catch rate on low-leveled Pokémon.",
    "item.pixelmon.net_ball": "Net Ball",
    "item.pixelmon.net_ball.tooltip": "Can be used to catch Pokémon. 3x catch rate on Bug- and Water-type Pokémon.",
    "item.pixelmon.dive_ball": "Dive Ball",
    "item.pixelmon.dive_ball.tooltip": "Can be used to catch Pokémon. 3.5x catch rate if the Pokémon is in water.",
    "item.pixelmon.luxury_ball": "Luxury Ball",
    "item.pixelmon.luxury_ball.tooltip": "Can be used to catch Pokémon. Causes captured Pokémon to gain happiness faster.",
    "item.pixelmon.heal_ball": "Heal Ball",
    "item.pixelmon.heal_ball.tooltip": "Can be used to catch Pokémon. Fully heals HP and status of captured Pokémon.",
    "item.pixelmon.dusk_ball": "Dusk Ball",
    "item.pixelmon.dusk_ball.tooltip": "Can be used to catch Pokémon. 3.0x catch rate in dark places.",
    "item.pixelmon.park_ball": "Park Ball",
    "item.pixelmon.park_ball.tooltip": "Can be used to catch Pokémon. Will never fail.",
    "item.pixelmon.quick_ball": "Quick Ball",
    "item.pixelmon.quick_ball.tooltip": "Can be used to catch Pokémon. 5x catch rate if used on the first turn of battle. Standard rate if thrown outside of battle.",
    "item.pixelmon.lure_ball": "Lure Ball",
    "item.pixelmon.lure_ball.tooltip": "Can be used to catch Pokémon. 5x catch rate on Pokémon encountered by fishing",
    "item.pixelmon.sport_ball": "Sport Ball",
    "item.pixelmon.sport_ball.tooltip": "Can be used to catch Pokémon. 1.5x catch rate on Bug-type Pokémon.",
    "item.pixelmon.cherish_ball": "Cherish Ball",
    "item.pixelmon.cherish_ball.tooltip": "Can be used to catch Pokémon.",
    "item.pixelmon.premier_ball": "Premier Ball",
    "item.pixelmon.premier_ball.tooltip": "Can be used to catch Pokémon. Captured Pokémon emit a red particle effect when sent out.",
    "item.pixelmon.gs_ball": "GS Ball",
    "item.pixelmon.gs_ball.tooltip": "Can be used to catch Pokémon.",
    "item.pixelmon.beast_ball": "Beast Ball",
    "item.pixelmon.beast_ball.tooltip": "Can be used to catch Pokémon. 5x catch rate when used on Ultra Beasts. 0.1x catch rate for everything else.",
    "item.pixelmon.ancient_poke_ball": "Ancient Poké Ball",
    "item.pixelmon.ancient_poke_ball.tooltip": "Can be used to catch Pokémon.",
    "item.pixelmon.ancient_great_ball": "Ancient Great Ball",
    "item.pixelmon.ancient_great_ball.tooltip": "Can be used to catch Pokémon. 1.5x catch rate.",
    "item.pixelmon.ancient_ultra_ball": "Ancient Ultra Ball",
    "item.pixelmon.ancient_ultra_ball.tooltip": "Can be used to catch Pokémon. 2x catch rate.",
    "item.pixelmon.strange_ball": "Strange Ball",
    "item.pixelmon.strange_ball.tooltip": "Can be used to catch Pokémon.",

    "item.pixelmon.poke_ball_lid": "Poké Ball Lid",
    "item.pixelmon.dream_ball_lid": "Dream Ball Lid",
    "item.pixelmon.great_ball_lid": "Great Ball Lid",
    "item.pixelmon.ultra_ball_lid": "Ultra Ball Lid",
    "item.pixelmon.master_ball_lid": "Master Ball Lid",
    "item.pixelmon.level_ball_lid": "Level Ball Lid",
    "item.pixelmon.moon_ball_lid": "Moon Ball Lid",
    "item.pixelmon.friend_ball_lid": "Friend Ball Lid",
    "item.pixelmon.love_ball_lid": "Love Ball Lid",
    "item.pixelmon.safari_ball_lid": "Safari Ball Lid",
    "item.pixelmon.heavy_ball_lid": "Heavy Ball Lid",
    "item.pixelmon.fast_ball_lid": "Fast Ball Lid",
    "item.pixelmon.repeat_ball_lid": "Repeat Ball Lid",
    "item.pixelmon.timer_ball_lid": "Timer Ball Lid",
    "item.pixelmon.nest_ball_lid": "Nest Ball Lid",
    "item.pixelmon.net_ball_lid": "Net Ball Lid",
    "item.pixelmon.park_ball_lid": "Park Ball Lid",
    "item.pixelmon.platinum_disc": "Platinum Disc",
    "item.pixelmon.platinum_base": "Platinum Base",
    "item.pixelmon.dive_ball_lid": "Dive Ball Lid",
    "item.pixelmon.luxury_ball_lid": "Luxury Ball Lid",
    "item.pixelmon.heal_ball_lid": "Heal Ball Lid",
    "item.pixelmon.dusk_ball_lid": "Dusk Ball Lid",
    "item.pixelmon.cherish_ball_lid": "Cherish Ball Lid",
    "item.pixelmon.premier_ball_lid": "Premier Ball Lid",
    "item.pixelmon.gs_ball_lid": "GS Ball Lid",
    "item.pixelmon.beast_ball_lid": "Beast Ball Lid",
    "item.pixelmon.quick_ball_lid": "Quick Ball Lid",
    "item.pixelmon.lure_ball_lid": "Lure Ball Lid",
    "item.pixelmon.sport_ball_lid": "Sport Ball Lid",
    "item.pixelmon.ancient_poke_ball_lid": "Ancient Poké Ball Lid",
    "item.pixelmon.ancient_great_ball_lid": "Ancient Great Ball Lid",
    "item.pixelmon.ancient_ultra_ball_lid": "Ancient Ultra Ball Lid",
    "item.pixelmon.strange_ball_lid": "Strange Ball Lid",

    "item.pixelmon.iron_disc": "Iron Disc",
    "item.pixelmon.iron_base": "Iron Base",
    "item.pixelmon.silver_base": "Silver Base",
    "item.pixelmon.aluminum_disc": "Aluminum Disc",
    "item.pixelmon.aluminum_base": "Aluminum Base",

    "item.pixelmon.ancient_heavy_ball": "Ancient Heavy Ball",
    "item.pixelmon.ancient_heavy_ball_lid": "Ancient Heavy Ball Lid",
    "item.pixelmon.origin_ball": "Origin Ball",
    "item.pixelmon.origin_ball_lid": "Origin Ball Lid",
    "item.pixelmon.leaden_ball": "Leaden Ball",
    "item.pixelmon.leaden_ball_lid": "Leaden Ball Lid",
    "item.pixelmon.jet_ball": "Jet Ball",
    "item.pixelmon.jet_ball_lid": "Jet Ball Lid",
    "item.pixelmon.wing_ball": "Wing Ball",
    "item.pixelmon.wing_ball_lid": "Wing Ball Lid",
    "item.pixelmon.feather_ball": "Feather Ball",
    "item.pixelmon.feather_ball_lid": "Feather Ball Lid",
    "item.pixelmon.gigaton_ball": "Gigaton Ball",
    "item.pixelmon.gigaton_ball_lid": "Gigaton Ball Lid",

    "item.pixelmon.balance_badge": "Balance Badge",
    "item.pixelmon.beacon_badge": "Beacon Badge",
    "item.pixelmon.boulder_badge": "Boulder Badge",
    "item.pixelmon.cascade_badge": "Cascade Badge",
    "item.pixelmon.coal_badge": "Coal Badge",
    "item.pixelmon.cobble_badge": "Cobble Badge",
    "item.pixelmon.dynamo_badge": "Dynamo Badge",
    "item.pixelmon.earth_badge": "Earth Badge",
    "item.pixelmon.feather_badge": "Feather Badge",
    "item.pixelmon.fen_badge": "Fen Badge",
    "item.pixelmon.fog_badge": "Fog Badge",
    "item.pixelmon.forest_badge": "Forest Badge",
    "item.pixelmon.glacier_badge": "Glacier Badge",
    "item.pixelmon.heat_badge": "Heat Badge",
    "item.pixelmon.hive_badge": "Hive Badge",
    "item.pixelmon.icicle_badge": "Icicle Badge",
    "item.pixelmon.knuckle_badge": "Knuckle Badge",
    "item.pixelmon.marsh_badge": "Marsh Badge",
    "item.pixelmon.mind_badge": "Mind Badge",
    "item.pixelmon.mine_badge": "Mine Badge",
    "item.pixelmon.mineral_badge": "Mineral Badge",
    "item.pixelmon.plain_badge": "Plain Badge",
    "item.pixelmon.rainbow_badge": "Rainbow Badge",
    "item.pixelmon.rain_badge": "Rain Badge",
    "item.pixelmon.relic_badge": "Relic Badge",
    "item.pixelmon.rising_badge": "Rising Badge",
    "item.pixelmon.soul_badge": "Soul Badge",
    "item.pixelmon.stone_badge": "Stone Badge",
    "item.pixelmon.storm_badge": "Storm Badge",
    "item.pixelmon.thunder_badge": "Thunder Badge",
    "item.pixelmon.volcano_badge": "Volcano Badge",
    "item.pixelmon.zephyr_badge": "Zephyr Badge",
    "item.pixelmon.legend_badge": "Legend Badge",
    "item.pixelmon.bolt_badge": "Bolt Badge",
    "item.pixelmon.toxic_badge": "Toxic Badge",
    "item.pixelmon.insect_badge": "Insect Badge",
    "item.pixelmon.jet_badge": "Jet Badge",
    "item.pixelmon.wave_badge": "Wave Badge",
    "item.pixelmon.quake_badge": "Quake Badge",
    "item.pixelmon.freeze_badge": "Freeze Badge",
    "item.pixelmon.basic_badge": "Basic Badge",
    "item.pixelmon.trio_badge": "Trio Badge",
    "item.pixelmon.bug_badge": "Bug Badge",
    "item.pixelmon.cliff_badge": "Cliff Badge",
    "item.pixelmon.rumble_badge": "Rumble Badge",
    "item.pixelmon.plant_badge": "Plant Badge",
    "item.pixelmon.voltage_badge": "Voltage Badge",
    "item.pixelmon.fairy_badge": "Fairy Badge",
    "item.pixelmon.psychic_badge": "Psychic Badge",
    "item.pixelmon.iceberg_badge": "Iceberg Badge",
    "item.pixelmon.dark_badge": "Dark Badge",
    "item.pixelmon.dragon_badge": "Dragon Badge",
    "item.pixelmon.fairy_badge_galar": "Fairy Badge",
    "item.pixelmon.fight_badge": "Fight Badge",
    "item.pixelmon.fire_badge": "Fire Badge",
    "item.pixelmon.ghost_badge": "Ghost Badge",
    "item.pixelmon.grass_badge": "Grass Badge",
    "item.pixelmon.ice_badge": "Ice Badge",
    "item.pixelmon.rock_badge": "Rock Badge",
    "item.pixelmon.water_badge": "Water Badge",
    "item.pixelmon.aisu_badge": "Aisu Badge",
    "item.pixelmon.bagu_badge": "Bagu Badge",
    "item.pixelmon.coraleye_badge": "Coraleye Badge",
    "item.pixelmon.dendo_badge": "Dendo Badge",
    "item.pixelmon.doku_badge": "Doku Badge",
    "item.pixelmon.doragon_badge": "Doragon Badge",
    "item.pixelmon.gosuto_badge": "Gosuto Badge",
    "item.pixelmon.iwa_badge": "Iwa Badge",
    "item.pixelmon.jadestar_badge": "Jadestar Badge",
    "item.pixelmon.jimen_badge": "Jimen Badge",
    "item.pixelmon.kasai_badge": "Kasai Badge",
    "item.pixelmon.kurai_badge": "Kurai Badge",
    "item.pixelmon.kusa_badge": "Kusa Badge",
    "item.pixelmon.mizu_badge": "Mizu Badge",
    "item.pixelmon.nomaru_badge": "Nomaru Badge",
    "item.pixelmon.searuby_badge": "Searuby Badge",
    "item.pixelmon.seishin_badge": "Seishin Badge",
    "item.pixelmon.sento_badge": "Sento Badge",
    "item.pixelmon.spikeshell_badge": "Spikeshell Badge",
    "item.pixelmon.suchiru_badge": "Suchiru Badge",
    "item.pixelmon.tobu_badge": "Tobu Badge",
    "item.pixelmon.yosei_badge": "Yosei Badge",
    "item.pixelmon.badge.tooltip": "Achievement for defeating Gym Leaders.",
    "item.pixelmon.galactic_badge": "Team Galactic Badge",
    "item.pixelmon.plasma_badge": "Team Plasma Badge",

    "item.pixelmon.gold_knowledge_symbol": "Gold Knowledge Symbol",
    "item.pixelmon.gold_guts_symbol": "Gold Guts Symbol",
    "item.pixelmon.gold_tactics_symbol": "Gold Tactics Symbol",
    "item.pixelmon.gold_luck_symbol": "Gold Luck Symbol",
    "item.pixelmon.gold_spirits_symbol": "Gold Spirits Symbol",
    "item.pixelmon.gold_brave_symbol": "Gold Brave Symbol",
    "item.pixelmon.gold_ability_symbol": "Gold Ability Symbol",
    "item.pixelmon.silver_knowledge_symbol": "Silver Knowledge Symbol",
    "item.pixelmon.silver_guts_symbol": "Silver Guts Symbol",
    "item.pixelmon.silver_tactics_symbol": "Silver Tactics Symbol",
    "item.pixelmon.silver_luck_symbol": "Silver Luck Symbol",
    "item.pixelmon.silver_spirits_symbol": "Silver Spirits Symbol",
    "item.pixelmon.silver_brave_symbol": "Silver Brave Symbol",
    "item.pixelmon.silver_ability_symbol": "Silver Ability Symbol",
    "item.pixelmon.symbol.tooltip": "Achievement for defeating Frontier Brains.",

    "item.pixelmon.curry_dex": "Curry Dex",
    "item.pixelmon.curry.used": "You shared a %s with %s.",
    "item.pixelmon.curry.tooltip": "%s Class",
    "item.pixelmon.curry_toast": "Toast",
    "item.pixelmon.curry_pasta": "Pasta",
    "item.pixelmon.curry_fried_food": "Fried Food",
    "item.pixelmon.curry_instant_noodle": "Instant Noodles",
    "item.pixelmon.curry_burger": "Precooked Burger",
    "item.pixelmon.curry_sausage": "Sausages",
    "item.pixelmon.curry_beans": "Tin of Beans",
    "item.pixelmon.curry_mushroom": "Mixed Mushrooms",
    "item.pixelmon.curry_potato": "Pack of Potatoes",
    "item.pixelmon.curry_salad": "Salad",
    "item.pixelmon.curry_seasoned": "Spice Mix",
    "item.pixelmon.curry_juicy": "Bob's Tin",
    "item.pixelmon.curry_rich": "Bach's Tin",
    "item.pixelmon.curry_bone": "Brittle Bones",
    "item.pixelmon.curry_herb": "Pungent Root",
    "item.pixelmon.curry_cream": "Fresh Cream",
    "item.pixelmon.curry_decorative": "Packaged Curry",
    "item.pixelmon.curry_coconut": "Coconut Milk",
    "item.pixelmon.curry_smoke_poke": "Smoke-Poke Tail",
    "item.pixelmon.curry_leek": "Large Leek",
    "item.pixelmon.curry_apple": "Fancy Apple",
    "item.pixelmon.curry_boiled_egg": "Boiled Egg",
    "item.pixelmon.curry_tropical": "Fruit Bunch",
    "item.pixelmon.curry_cheese": "Moomoo Cheese",
    "item.pixelmon.curry_gigantamix": "Gigantamix",
    "item.pixelmon.dish_curry_plain": "Curry",
    "item.pixelmon.dish_curry_sausage": "Sausage Curry",
    "item.pixelmon.dish_curry_juicy": "Juicy Curry",
    "item.pixelmon.dish_curry_rich": "Rich Curry",
    "item.pixelmon.dish_curry_beans": "Bean Medley Curry",
    "item.pixelmon.dish_curry_toast": "Toast Curry",
    "item.pixelmon.dish_curry_pasta": "Pasta Curry",
    "item.pixelmon.dish_curry_mushroom": "Mushroom Medley Curry",
    "item.pixelmon.dish_curry_smoke_poke": "Smoked-Tail Curry",
    "item.pixelmon.dish_curry_leek": "Leek Curry",
    "item.pixelmon.dish_curry_apple": "Apple Curry",
    "item.pixelmon.dish_curry_bone": "Bone Curry",
    "item.pixelmon.dish_curry_potato": "Plenty-of-Potato Curry",
    "item.pixelmon.dish_curry_herb": "Herb Medley Curry",
    "item.pixelmon.dish_curry_salad": "Salad Curry",
    "item.pixelmon.dish_curry_fried_food": "Fried-Food Curry",
    "item.pixelmon.dish_curry_boiled_egg": "Boiled-Egg Curry",
    "item.pixelmon.dish_curry_tropical": "Tropical Curry",
    "item.pixelmon.dish_curry_cheese": "Cheese-Covered Curry",
    "item.pixelmon.dish_curry_seasoned": "Seasoned Curry",
    "item.pixelmon.dish_curry_cream": "Whipped-Cream Curry",
    "item.pixelmon.dish_curry_decorative": "Decorative Curry",
    "item.pixelmon.dish_curry_coconut": "Coconut Curry",
    "item.pixelmon.dish_curry_instant_noodle": "Instant-Noodle Curry",
    "item.pixelmon.dish_curry_burger": "Burger-Steak Curry",
    "item.pixelmon.dish_curry_gigantamix": "Gigantamax Curry",

    "item.pixelmon.heavy_duty_boots": "Heavy-Duty Boots",
    "item.pixelmon.heavy_duty_boots.tooltip": "These boots prevent the effects of traps set on the battlefield.",
    "item.pixelmon.room_service": "Room Service",
    "item.pixelmon.room_service.tooltip": "An item to be held by a Pokémon. Lowers Speed when Trick Room takes effect.",
    "item.pixelmon.throat_spray": "Throat Spray",
    "item.pixelmon.throat_spray.tooltip": "Raises Sp. Atk when a Pokémon uses a sound-based move.",
    "item.pixelmon.cracked_pot": "Cracked Pot",
    "item.pixelmon.cracked_pot.tooltip": "A peculiar teapot that can make a certain species of Pokémon evolve. It may be cracked, but tea poured from it is delicious.",
    "item.pixelmon.chipped_pot": "Chipped Pot",
    "item.pixelmon.chipped_pot.tooltip": "A peculiar teapot that can make a certain species of Pokémon evolve. It may be chipped, but tea poured from it is delicious.",
    "item.pixelmon.sweet_apple": "Sweet Apple",
    "item.pixelmon.sweet_apple.tooltip": "A peculiar apple that can make a certain species of Pokémon evolve. It's exceptionally sweet.",
    "item.pixelmon.tart_apple": "Tart Apple",
    "item.pixelmon.tart_apple.tooltip": "A peculiar apple that can make a certain species of Pokémon evolve. It's exceptionally tart.",
    "item.pixelmon.sweet_berry": "Berry Sweet",
    "item.pixelmon.sweet_berry.tooltip": "A berry-shaped sweet. When a Milcery holds this, it spins around happily.",
    "item.pixelmon.sweet_clover": "Clover Sweet",
    "item.pixelmon.sweet_clover.tooltip": "A clover-shaped sweet. When a Milcery holds this, it spins around happily.",
    "item.pixelmon.sweet_flower": "Flower Sweet",
    "item.pixelmon.sweet_flower.tooltip": "A flower-shaped sweet. When a Milcery holds this, it spins around happily.",
    "item.pixelmon.sweet_love": "Love Sweet",
    "item.pixelmon.sweet_love.tooltip": "A heart-shaped sweet. When a Milcery holds this, it spins around happily.",
    "item.pixelmon.sweet_ribbon": "Ribbon Sweet",
    "item.pixelmon.sweet_ribbon.tooltip": "A ribbon-shaped sweet. When a Milcery holds this, it spins around happily.",
    "item.pixelmon.sweet_star": "Star Sweet",
    "item.pixelmon.sweet_star.tooltip": "A star-shaped sweet. When a Milcery holds this, it spins around happily.",
    "item.pixelmon.sweet_strawberry": "Strawberry Sweet",
    "item.pixelmon.sweet_strawberry.tooltip": "A strawberry-shaped sweet. When a Milcery holds this, it will spin around happily.",
    "item.pixelmon.galarica_twig": "Galarica Twig",
    "item.pixelmon.galarica_twig.tooltip": "A twig from a species of tree called Galarica that grows in certain areas around the Galar region. It's a material for an accessory for a certain Pokémon.",
    "block.pixelmon.galarica_cuff": "Galarica Cuff",
    "item.pixelmon.galarica_cuff.tooltip": "A cuff made from woven-together Galarica Twigs. Giving it to Galarian Slowpoke makes the Pokémon very happy.",
    "item.pixelmon.galarica_wreath": "Galarica Wreath",
    "item.pixelmon.galarica_wreath.tooltip": "A wreath made from woven-together Galarica Twigs. Placing it on the head of a Galarian Slowpoke makes the Pokémon very happy.",

    "item.pixelmon.rare_candy": "Rare Candy",
    "item.pixelmon.rare_candy.tooltip": "A candy that is packed with energy. When consumed, it will instantly raise the level of a single Pokémon by one.",
    "item.pixelmon.xs_exp_candy": "Exp. Candy XS",
    "item.pixelmon.xs_exp_candy.tooltip": "A candy that is packed with energy. When consumed, it will grant a single Pokémon a very small amount of Exp. Points.",
    "item.pixelmon.s_exp_candy": "Exp. Candy S",
    "item.pixelmon.s_exp_candy.tooltip": "A candy that is packed with energy. When consumed, it will grant a single Pokémon a very small amount of Exp. Points.",
    "item.pixelmon.m_exp_candy": "Exp. Candy M",
    "item.pixelmon.m_exp_candy.tooltip": "A candy that is packed with energy. When consumed, it will grant a single Pokémon a moderate amount of Exp. Points.",
    "item.pixelmon.l_exp_candy": "Exp. Candy L",
    "item.pixelmon.l_exp_candy.tooltip": "A candy that is packed with energy. When consumed, it will grant a single Pokémon a large amount of Exp. Points.",
    "item.pixelmon.xl_exp_candy": "Exp. Candy XL",
    "item.pixelmon.xl_exp_candy.tooltip": "A candy that is packed with energy. When consumed, it will grant a single Pokémon a very large amount of Exp. Points.",
    "item.pixelmon.dynamax_candy": "Dynamax Candy",
    "item.pixelmon.dynamax_candy.tooltip": "A candy that is packed with energy. When consumed, it will raise the Dynamax Level of a single Pokémon by one. A higher level means higher HP when Dynamaxed.",
    "item.pixelmon.max_soup": "Max Soup",
    "item.pixelmon.max_soup.tooltip": "A soup that causes the Gigantamax Factor to manifest in certain Pokémon when eaten.",
    "item.pixelmon.potion": "Potion",
    "item.pixelmon.potion.tooltip": "Restores 20 HP.",
    "item.pixelmon.super_potion": "Super Potion",
    "item.pixelmon.super_potion.tooltip": "Restores 60 HP.",
    "item.pixelmon.hyper_potion": "Hyper Potion",
    "item.pixelmon.hyper_potion.tooltip": "Restores 120 HP.",
    "item.pixelmon.full_restore": "Full Restore",
    "item.pixelmon.full_restore.tooltip": "Fully restores HP & cures status effects.",
    "item.pixelmon.fresh_water": "Fresh Water",
    "item.pixelmon.fresh_water.tooltip": "Restores 30 HP.",
    "item.pixelmon.soda_pop": "Soda Pop",
    "item.pixelmon.soda_pop.tooltip": "Restores 50 HP.",
    "item.pixelmon.lemonade": "Lemonade",
    "item.pixelmon.lemonade.tooltip": "Restores 70 HP.",
    "item.pixelmon.moomoo_milk": "Moomoo Milk",
    "item.pixelmon.moomoo_milk.tooltip": "Restores 100 HP.",
    "item.pixelmon.revive": "Revive",
    "item.pixelmon.revive.tooltip": "Restores a fainted Pokémon to 50%% HP.",
    "item.pixelmon.max_revive": "Max Revive",
    "item.pixelmon.max_revive.tooltip": "Restores a fainted Pokémon to full HP.",
    "item.pixelmon.max_potion": "Max Potion",
    "item.pixelmon.max_potion.tooltip": "Fully restores HP.",
    "item.pixelmon.ether": "Ether",
    "item.pixelmon.ether.tooltip": "Restores 10 PP of one move.",
    "item.pixelmon.max_ether": "Max Ether",
    "item.pixelmon.max_ether.tooltip": "Fully restores PP of one move.",
    "item.pixelmon.elixir": "Elixir",
    "item.pixelmon.elixir.tooltip": "Restores 10 PP of all moves.",
    "item.pixelmon.max_elixir": "Max Elixir",
    "item.pixelmon.max_elixir.tooltip": "Fully restores PP of all moves.",
    "item.pixelmon.antidote": "Antidote",
    "item.pixelmon.antidote.tooltip": "Cures poison.",
    "item.pixelmon.paralyze_heal": "Paralyze Heal",
    "item.pixelmon.paralyze_heal.tooltip": "Cures paralysis.",
    "item.pixelmon.awakening": "Awakening",
    "item.pixelmon.awakening.tooltip": "Cures sleep.",
    "item.pixelmon.burn_heal": "Burn Heal",
    "item.pixelmon.burn_heal.tooltip": "Cures burn.",
    "item.pixelmon.ice_heal": "Ice Heal",
    "item.pixelmon.ice_heal.tooltip": "Cures freeze.",
    "item.pixelmon.full_heal": "Full Heal",
    "item.pixelmon.full_heal.tooltip": "Cures status effects.",
    "item.pixelmon.blue_flute": "Blue Flute",
    "item.pixelmon.blue_flute.tooltip": "A flute made from blue glass that awakens sleeping Pokémon.",
    "item.pixelmon.yellow_flute": "Yellow Flute",
    "item.pixelmon.yellow_flute.tooltip": "A flute made from yellow glass that snaps Pokémon out of confusion.",
    "item.pixelmon.red_flute": "Red Flute",
    "item.pixelmon.red_flute.tooltip": "A flute made from red glass that snaps Pokémon out of infatuation.",
    "item.pixelmon.green_flute": "Green Flute",
    "item.pixelmon.green_flute.tooltip": "A flute made from green glass that restores 20 HP.",
    "item.pixelmon.white_flute": "White Flute",
    "item.pixelmon.white_flute.tooltip": "A flute made from white glass. It makes it easier to encounter weak Pokémon in the place you use it.",
    "item.pixelmon.black_flute": "Black Flute",
    "item.pixelmon.black_flute.tooltip": "A flute made from black glass. It makes it easier to encounter strong Pokémon in the place you use it.",

    "item.pixelmon.hp_up": "HP Up",
    "item.pixelmon.hp_up.tooltip": "Boosts a Pokémon's HP EVs by 10. Can be obtained by infusing a Health Wing with 10 Sitrus Berries.",
    "item.pixelmon.pp_up": "PP Up",
    "item.pixelmon.pp_max": "PP Max",
    "item.pixelmon.protein": "Protein",
    "item.pixelmon.protein.tooltip": "Boosts a Pokémon's Attack EVs by 10. Can be obtained by infusing a Muscle Wing with 10 Liechi Berries.",
    "item.pixelmon.iron": "Iron",
    "item.pixelmon.iron.tooltip": "Boosts a Pokémon's Defense EVs by 10. Can be obtained by infusing a Resist Wing with 10 Ganlon Berries.",
    "item.pixelmon.calcium": "Calcium",
    "item.pixelmon.calcium.tooltip": "Boosts a Pokémon's Special Attack EVs by 10. Can be obtained by infusing a Genius Wing with 10 Petaya Berries.",
    "item.pixelmon.zinc": "Zinc",
    "item.pixelmon.zinc.tooltip": "Boosts a Pokémon's Special Defense EVs by 10. Can be obtained by infusing a Clever Wing with 10 Apicot Berries.",
    "item.pixelmon.carbos": "Carbos",
    "item.pixelmon.carbos.tooltip": "Boosts a Pokémon's Speed EVs by 10. Can be obtained by infusing a Swift Wing with 10 Salac Berries.",
    "item.pixelmon.health_wing": "Health Wing",
    "item.pixelmon.health_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.muscle_wing": "Muscle Wing",
    "item.pixelmon.muscle_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.resist_wing": "Resist Wing",
    "item.pixelmon.resist_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.genius_wing": "Genius Wing",
    "item.pixelmon.genius_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.clever_wing": "Clever Wing",
    "item.pixelmon.clever_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.swift_wing": "Swift Wing",
    "item.pixelmon.swift_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.pretty_wing": "Pretty Wing",
    "item.pixelmon.pretty_wing.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.silver_wing": "Silver Wing",
    "item.pixelmon.rainbow_wing": "Rainbow Wing",
    "item.pixelmon.rainbow_wing.tooltip": "Can be used to turn certain Pokémon into their rainbow forms.",
    "item.pixelmon.health_feather": "Health Feather",
    "item.pixelmon.health_feather.tooltip": "Increases the HP EV of a Pokémon by 1. Can be infused with 10 Sitrus Berries to create an HP Up.",
    "item.pixelmon.muscle_feather": "Muscle Feather",
    "item.pixelmon.muscle_feather.tooltip": "Increases the Attack EV of a Pokémon by 1. Can be infused with 10 Liechi Berries to create a Protein.",
    "item.pixelmon.resist_feather": "Resist Feather",
    "item.pixelmon.resist_feather.tooltip": "Increases the Defense EV of a Pokémon by 1. Can be infused with 10 Ganlon Berries to create an Iron.",
    "item.pixelmon.genius_feather": "Genius Feather",
    "item.pixelmon.genius_feather.tooltip": "Increases the Special Attack EV of a Pokémon by 1. Can be infused with 10 Petaya Berries to create a Calcium.",
    "item.pixelmon.clever_feather": "Clever Feather",
    "item.pixelmon.clever_feather.tooltip": "Increases the Special Defense EV of a Pokémon by 1. Can be infused with 10 Apicot Berries to create a Zinc.",
    "item.pixelmon.swift_feather": "Swift Feather",
    "item.pixelmon.swift_feather.tooltip": "Increases the Speed EV of a Pokémon by 1. Can be infused with 10 Salac Berries to create a Carbos.",
    "item.pixelmon.pretty_feather": "Pretty Feather",
    "item.pixelmon.pretty_feather.tooltip": "Can be sold to shopkeepers.",

    "item.pixelmon.balm_mushroom": "Balm Mushroom",
    "item.pixelmon.balm_mushroom.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.big_mushroom": "Big Mushroom",
    "item.pixelmon.big_mushroom.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.big_nugget": "Big Nugget",
    "item.pixelmon.big_nugget.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.big_pearl": "Big Pearl",
    "item.pixelmon.big_pearl.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.comet_shard": "Comet Shard",
    "item.pixelmon.comet_shard.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.nugget": "Nugget",
    "item.pixelmon.nugget.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.pearl": "Pearl",
    "item.pixelmon.pearl.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.pearl_string": "Pearl String",
    "item.pixelmon.pearl_string.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.rare_bone": "Rare Bone",
    "item.pixelmon.rare_bone.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.relic_copper": "Relic Copper",
    "item.pixelmon.relic_copper.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.relic_gold": "Relic Gold",
    "item.pixelmon.relic_gold.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.relic_silver": "Relic Silver",
    "item.pixelmon.relic_silver.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.shoal_salt": "Shoal Salt",
    "item.pixelmon.shoal_salt.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.shoal_shell": "Shoal Shell",
    "item.pixelmon.shoal_shell.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.slowpoke_tail": "Slowpoke Tail",
    "item.pixelmon.slowpoke_tail.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.stardust": "Stardust",
    "item.pixelmon.stardust.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.star_piece": "Star Piece",
    "item.pixelmon.star_piece.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.strange_souvenier": "Strange Souvenier",
    "item.pixelmon.strange_souvenier.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.tiny_mushroom": "Tiny Mushroom",
    "item.pixelmon.tiny_mushroom.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.gold_leaf": "Gold Leaf",
    "item.pixelmon.gold_leaf.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.silver_leaf": "Silver Leaf",
    "item.pixelmon.silver_leaf.tooltip": "Can be sold to shopkeepers.",
    "item.pixelmon.honey": "Honey",
    "item.pixelmon.red_shard": "Red Shard",
    "item.pixelmon.blue_shard": "Blue Shard",
    "item.pixelmon.green_shard": "Green Shard",
    "item.pixelmon.yellow_shard": "Yellow Shard",
    "item.pixelmon.white_shard": "White Shard",
    "item.pixelmon.black_shard": "Black Shard",

    "item.pixelmon.pinap_berry": "Pinap Berry",
    "item.pixelmon.bluk_berry": "Bluk Berry",
    "item.pixelmon.wepear_berry": "Wepear Berry",
    "item.pixelmon.strib_berry": "Strib Berry",
    "item.pixelmon.nutpea_berry": "Nutpea Berry",
    "item.pixelmon.kuo_berry": "Kuo Berry",
    "item.pixelmon.niniku_berry": "Niniku Berry",
    "item.pixelmon.topo_berry": "Topo Berry",
    "item.pixelmon.mickle_berry": "Mickle Berry",
    "item.pixelmon.razz_berry": "Razz Berry",
    "item.pixelmon.nanab_berry": "Nanab Berry",
    "item.pixelmon.pomeg_berry": "Pomeg Berry",
    "item.pixelmon.pomeg_berry.tooltip": "Lowers Max HP and increases Happiness",
    "item.pixelmon.kelpsy_berry": "Kelpsy Berry",
    "item.pixelmon.kelpsy_berry.tooltip": "Lowers Attack and increases Happiness",
    "item.pixelmon.qualot_berry": "Qualot Berry",
    "item.pixelmon.qualot_berry.tooltip": "Lowers Defense and increases Happiness",
    "item.pixelmon.hondew_berry": "Hondew Berry",
    "item.pixelmon.hondew_berry.tooltip": "Lowers Sp. Attack and increases Happiness",
    "item.pixelmon.grepa_berry": "Grepa Berry",
    "item.pixelmon.grepa_berry.tooltip": "Lowers Sp. Defense and increases Happiness",
    "item.pixelmon.tamato_berry": "Tamato Berry",
    "item.pixelmon.tamato_berry.tooltip": "Lowers Speed and increases Happiness",
    "item.pixelmon.oran_berry": "Oran Berry",
    "item.pixelmon.oran_berry.tooltip": "Restores 10 HP",
    "item.pixelmon.rawst_berry": "Rawst Berry",
    "item.pixelmon.rawst_berry.tooltip": "Cures Burn",
    "item.pixelmon.leppa_berry": "Leppa Berry",
    "item.pixelmon.leppa_berry.tooltip": "Restores 10 PP",
    "item.pixelmon.cheri_berry": "Cheri Berry",
    "item.pixelmon.cheri_berry.tooltip": "Cures Paralysis",
    "item.pixelmon.chesto_berry": "Chesto Berry",
    "item.pixelmon.chesto_berry.tooltip": "Cures Sleep",
    "item.pixelmon.pecha_berry": "Pecha Berry",
    "item.pixelmon.pecha_berry.tooltip": "Cures Poison",
    "item.pixelmon.aspear_berry": "Aspear Berry",
    "item.pixelmon.aspear_berry.tooltip": "Cures freeze",
    "item.pixelmon.persim_berry": "Persim Berry",
    "item.pixelmon.persim_berry.tooltip": "Cures confusion",
    "item.pixelmon.lum_berry": "Lum Berry",
    "item.pixelmon.lum_berry.tooltip": "Cures paralysis, poison, burn, sleep, freeze, confusion, or infatuation",
    "item.pixelmon.sitrus_berry": "Sitrus Berry",
    "item.pixelmon.sitrus_berry.tooltip": "Restores 25%% of Max HP. 10x infused into a Health Wing will create an HP Up.",
    "item.pixelmon.berry_juice": "Berry Juice",
    "item.pixelmon.pumkin_berry": "Pumkin Berry",
    "item.pixelmon.pumkin_berry.tooltip": "Cures freeze",
    "item.pixelmon.drash_berry": "Drash Berry",
    "item.pixelmon.drash_berry.tooltip": "Cures Poison",
    "item.pixelmon.eggant_berry": "Eggant Berry",
    "item.pixelmon.eggant_berry.tooltip": "Cures infatuation",
    "item.pixelmon.yago_berry": "Yago Berry",
    "item.pixelmon.yago_berry.tooltip": "Cures Burn",
    "item.pixelmon.touga_berry": "Touga Berry",
    "item.pixelmon.touga_berry.tooltip": "Cures Confusion",
    "item.pixelmon.apicot_berry": "Apicot Berry",
    "item.pixelmon.apicot_berry.tooltip": "Raises Sp. Defense in a pinch. 10x infused into a Clever Wing will create a Zinc.",
    "item.pixelmon.liechi_berry": "Liechi Berry",
    "item.pixelmon.liechi_berry.tooltip": "Raises Attack in a pinch. 10x infused into a Muscle Wing will create a Protein.",
    "item.pixelmon.ganlon_berry": "Ganlon Berry",
    "item.pixelmon.ganlon_berry.tooltip": "Raises Defense in a pinch. 10x infused into a Resist Wing will create an Iron.",
    "item.pixelmon.salac_berry": "Salac Berry",
    "item.pixelmon.salac_berry.tooltip": "Raises Speed in a pinch. 10x infused into a Swift Wing will create a Carbos.",
    "item.pixelmon.petaya_berry": "Petaya Berry",
    "item.pixelmon.petaya_berry.tooltip": "Raises Sp. Attack in a pinch. 10x infused into a Genius Wing will create a Calcium.",
    "item.pixelmon.lansat_berry": "Lansat Berry",
    "item.pixelmon.lansat_berry.tooltip": "Sharply Raises Critical Hit Ratio in a pinch",
    "item.pixelmon.starf_berry": "Starf Berry",
    "item.pixelmon.starf_berry.tooltip": "Sharply raises a random stat in a pinch",
    "item.pixelmon.custap_berry": "Custap Berry",
    "item.pixelmon.custap_berry.tooltip": "Lets the holder move first once in a pinch",
    "item.pixelmon.aguav_berry": "Aguav Berry",
    "item.pixelmon.aguav_berry.tooltip": "Restores 12.5%% of maximum HP, confuses Pokémon with Special Defense-lowering Natures.",
    "item.pixelmon.figy_berry": "Figy Berry",
    "item.pixelmon.figy_berry.tooltip": "Restores 12.5%% of maximum HP, confuses Pokémon with Attack-lowering Natures.",
    "item.pixelmon.iapapa_berry": "Iapapa Berry",
    "item.pixelmon.iapapa_berry.tooltip": "Restores 12.5%% of maximum HP, confuses Pokémon with Defense-lowering Natures.",
    "item.pixelmon.mago_berry": "Mago Berry",
    "item.pixelmon.mago_berry.tooltip": "Restores 12.5%% of maximum HP, confuses Pokémon with Speed-lowering Natures.",
    "item.pixelmon.wiki_berry": "Wiki Berry",
    "item.pixelmon.wiki_berry.tooltip": "Restores 12.5%% of maximum HP, confuses Pokémon with Special Attack-lowering Natures.",
    "item.pixelmon.occa_berry": "Occa Berry",
    "item.pixelmon.occa_berry.tooltip": "Reduces the effect of a super-effective Fire move by 50%%. Can be infused into a Crystal Block to make a Fire Gem.",
    "item.pixelmon.passho_berry": "Passho Berry",
    "item.pixelmon.passho_berry.tooltip": "Reduces the effect of a super-effective Water move by 50%%. Can be infused into a Crystal Block to make a Water Gem.",
    "item.pixelmon.wacan_berry": "Wacan Berry",
    "item.pixelmon.wacan_berry.tooltip": "Reduces the effect of a super-effective Electric move by 50%%. Can be infused into a Crystal Block to make a Electric Gem.",
    "item.pixelmon.rindo_berry": "Rindo Berry",
    "item.pixelmon.rindo_berry.tooltip": "Reduces the effect of a super-effective Grass move by 50%%. Can be infused into a Crystal Block to make a Grass Gem.",
    "item.pixelmon.yache_berry": "Yache Berry",
    "item.pixelmon.yache_berry.tooltip": "Reduces the effect of a super-effective Ice move by 50%%. Can be infused into a Crystal Block to make a Ice Gem.",
    "item.pixelmon.chople_berry": "Chople Berry",
    "item.pixelmon.chople_berry.tooltip": "Reduces the effect of a super-effective Fighting move by 50%%. Can be infused into a Crystal Block to make a Fighting Gem.",
    "item.pixelmon.kebia_berry": "Kebia Berry",
    "item.pixelmon.kebia_berry.tooltip": "Reduces the effect of a super-effective Poison move by 50%%. Can be infused into a Crystal Block to make a Poison Gem.",
    "item.pixelmon.shuca_berry": "Shuca Berry",
    "item.pixelmon.shuca_berry.tooltip": "Reduces the effect of a super-effective Ground move by 50%%. Can be infused into a Crystal Block to make a Ground Gem.",
    "item.pixelmon.coba_berry": "Coba Berry",
    "item.pixelmon.coba_berry.tooltip": "Reduces the effect of a super-effective Flying move by 50%%. Can be infused into a Crystal Block to make a Flying Gem.",
    "item.pixelmon.payapa_berry": "Payapa Berry",
    "item.pixelmon.payapa_berry.tooltip": "Reduces the effect of a super-effective Psychic move by 50%%. Can be infused into a Crystal Block to make a Psychic Gem.",
    "item.pixelmon.tanga_berry": "Tanga Berry",
    "item.pixelmon.tanga_berry.tooltip": "Reduces the effect of a super-effective Bug move by 50%%. Can be infused into a Crystal Block to make a Bug Gem.",
    "item.pixelmon.charti_berry": "Charti Berry",
    "item.pixelmon.charti_berry.tooltip": "Reduces the effect of a super-effective Rock move by 50%%. Can be infused into a Crystal Block to make a Rock Gem.",
    "item.pixelmon.kasib_berry": "Kasib Berry",
    "item.pixelmon.kasib_berry.tooltip": "Reduces the effect of a super-effective Ghost move by 50%%. Can be infused into a Crystal Block to make a Ghost Gem.",
    "item.pixelmon.haban_berry": "Haban Berry",
    "item.pixelmon.haban_berry.tooltip": "Reduces the effect of a super-effective Dragon move by 50%%. Can be infused into a Crystal Block to make a Dragon Gem.",
    "item.pixelmon.colbur_berry": "Colbur Berry",
    "item.pixelmon.colbur_berry.tooltip": "Reduces the effect of a super-effective Dark move by 50%%. Can be infused into a Crystal Block to make a Dark Gem.",
    "item.pixelmon.babiri_berry": "Babiri Berry",
    "item.pixelmon.babiri_berry.tooltip": "Reduces the effect of a super-effective Steel move by 50%%. Can be infused into a Crystal Block to make a Steel Gem.",
    "item.pixelmon.chilan_berry": "Chilan Berry",
    "item.pixelmon.chilan_berry.tooltip": "Reduces the effect of a Normal move by 50%%. Can be infused into a Crystal Block to make a Normal Gem.",
    "item.pixelmon.ginema_berry": "Ginema Berry",
    "item.pixelmon.ginema_berry.tooltip": "Cures stat drops",
    "item.pixelmon.jaboca_berry": "Jaboca Berry",
    "item.pixelmon.jaboca_berry.tooltip": "When hit by a physical attack, the attacker will lose 1/8 of its max HP.",
    "item.pixelmon.rowap_berry": "Rowap Berry",
    "item.pixelmon.rowap_berry.tooltip": "When hit by a special attack, the attacker will lose 1/8 of its max HP.",
    "item.pixelmon.enigma_berry": "Enigma Berry",
    "item.pixelmon.enigma_berry.tooltip": "Restores 25%% of maximum HP when hit by a super effective attack.",
    "item.pixelmon.kee_berry": "Kee Berry",
    "item.pixelmon.kee_berry.tooltip": "Increase Defense when hit with a Physical Move",
    "item.pixelmon.maranga_berry": "Maranga Berry",
    "item.pixelmon.maranga_berry.tooltip": "Increase Sp. Defense when hit with a Special Move",
    "item.pixelmon.roseli_berry": "Roseli Berry",
    "item.pixelmon.roseli_berry.tooltip": "Reduces the effect of a super-effective Fairy move by 50%%. Can be infused into a Crystal Block to make a Fairy Gem.",
    "item.pixelmon.micle_berry": "Micle Berry",
    "item.pixelmon.micle_berry.tooltip": "Raises the next move's accuracy by 20%% in a pinch",
    "item.pixelmon.cornn_berry": "Cornn Berry",
    "item.pixelmon.cornn_berry.tooltip": "Infuse 3x into an Incense Burner to make a Lax Incense.",
    "item.pixelmon.magost_berry": "Magost Berry",
    "item.pixelmon.magost_berry.tooltip": "Infuse 3x into an Incense Burner to make a Wave Incense.",
    "item.pixelmon.rabuta_berry": "Rabuta Berry",
    "item.pixelmon.rabuta_berry.tooltip": "Infuse 3x into an Incense Burner to make a Rose Incense.",
    "item.pixelmon.nomel_berry": "Nomel Berry",
    "item.pixelmon.nomel_berry.tooltip": "Infuse 3x into an Incense Burner to make a Pure Incense.",
    "item.pixelmon.spelon_berry": "Spelon Berry",
    "item.pixelmon.spelon_berry.tooltip": "Infuse 3x into an Incense Burner to make a Rock Incense.",
    "item.pixelmon.pamtre_berry": "Pamtre Berry",
    "item.pixelmon.pamtre_berry.tooltip": "Infuse 3x into an Incense Burner to make a Luck Incense.",
    "item.pixelmon.watmel_berry": "Watmel Berry",
    "item.pixelmon.watmel_berry.tooltip": "Infuse 3x into an Incense Burner to make a Sea Incense.",
    "item.pixelmon.durin_berry": "Durin Berry",
    "item.pixelmon.durin_berry.tooltip": "Infuse 3x into an Incense Burner to make a Full Incense.",
    "item.pixelmon.belue_berry": "Belue Berry",
    "item.pixelmon.belue_berry.tooltip": "Infuse 3x into an Incense Burner to make an Odd Incense.",

    "item.pixelmon.komala_coffee": "Komala Coffee",
    "item.pixelmon.komala_coffee.tooltip": "Restores 100 HP.",
    "item.pixelmon.tapu_cocoa": "Tapu Cocoa",
    "item.pixelmon.tapu_cocoa.tooltip": "Restores 150 HP.",
    "item.pixelmon.pinap_juice": "Pinap Juice",
    "item.pixelmon.pinap_juice.tooltip": "Restores 100 HP",
    "item.pixelmon.roserade_tea": "Roserade Tea",
    "item.pixelmon.roserade_tea.tooltip": "Restores 100 HP.",
    "item.pixelmon.skitty_smoothie": "Skitty Smoothie",
    "item.pixelmon.skitty_smoothie.tooltip": "Restores 150 HP.",
    "item.pixelmon.rare_soda": "Rare Soda",
    "item.pixelmon.rare_soda.tooltip": "Levels up a Pokémon by 2 levels.",
    "item.pixelmon.ultra_rare_soda": "Ultra Rare Soda",
    "item.pixelmon.ultra_rare_soda.tooltip": "Levels up a Pokémon by 4 levels.",
    "item.pixelmon.blue_juice": "Blue Juice",
    "item.pixelmon.blue_juice.tooltip": "Increases a Pokémon's Special Attack EVs.",
    "item.pixelmon.red_juice": "Red Juice",
    "item.pixelmon.red_juice.tooltip": "Increases a Pokémon's Attack EVs.",
    "item.pixelmon.pink_juice": "Pink Juice",
    "item.pixelmon.pink_juice.tooltip": "Increases a Pokémon's Speed EVs.",
    "item.pixelmon.purple_juice": "Purple Juice",
    "item.pixelmon.purple_juice.tooltip": "Increases a Pokémon's HP EVs.",
    "item.pixelmon.yellow_juice": "Yellow Juice",
    "item.pixelmon.yellow_juice.tooltip": "Increases a Pokémon's Defense EVs.",
    "item.pixelmon.green_juice": "Green Juice",
    "item.pixelmon.green_juice.tooltip": "Increases a Pokémon's Special Defense EVs.",
    "item.pixelmon.colorful_shake": "Colorful Shake",
    "item.pixelmon.colorful_shake.tooltip": "Increase a Pokémon's Friendship.",
    "item.pixelmon.perilous_soup": "Perilous Soup",
    "item.pixelmon.perilous_soup.tooltip": "Reset a Pokémons EVs.",
    "item.pixelmon.sweet_heart": "Sweet Heart",
    "item.pixelmon.sweet_heart.tooltip": "Restores 20 HP.",

    "item.pixelmon.heal_powder": "Heal Powder",
    "item.pixelmon.heal_powder.tooltip": "A very bitter medicinal powder. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.energy_powder": "Energy Powder",
    "item.pixelmon.energy_powder.tooltip": "A very bitter medicinal powder. It can be used to restore 60 HP to a single Pokémon.",
    "item.pixelmon.energy_root": "Energy Root",
    "item.pixelmon.energy_root.tooltip": "An extremely bitter medicinal root. It can be used to restore 120 HP to a single Pokémon.",
    "item.pixelmon.revival_herb": "Revival Herb",
    "item.pixelmon.revival_herb.tooltip": "A terribly bitter medicinal herb. It revives a fainted Pokémon and fully restores its max HP.",

    "item.pixelmon.grotto_spawner": "Grotto Spawner",
    "item.pixelmon.black_apricorn": "Black Apricorn",
    "item.pixelmon.white_apricorn": "White Apricorn",
    "item.pixelmon.pink_apricorn": "Pink Apricorn",
    "item.pixelmon.green_apricorn": "Green Apricorn",
    "item.pixelmon.blue_apricorn": "Blue Apricorn",
    "item.pixelmon.yellow_apricorn": "Yellow Apricorn",
    "item.pixelmon.red_apricorn": "Red Apricorn",
    "item.pixelmon.cooked_black_apricorn": "Cooked Black Apricorn",
    "item.pixelmon.cooked_white_apricorn": "Cooked White Apricorn",
    "item.pixelmon.cooked_green_apricorn": "Cooked Green Apricorn",
    "item.pixelmon.cooked_blue_apricorn": "Cooked Blue Apricorn",
    "item.pixelmon.cooked_yellow_apricorn": "Cooked Yellow Apricorn",
    "item.pixelmon.cooked_pink_apricorn": "Cooked Pink Apricorn",
    "item.pixelmon.cooked_red_apricorn": "Cooked Red Apricorn",
    "item.pixelmon.helix_fossil": "Helix Fossil",
    "item.pixelmon.dome_fossil": "Dome Fossil",
    "item.pixelmon.old_amber": "Old Amber",
    "item.pixelmon.root_fossil": "Root Fossil",
    "item.pixelmon.claw_fossil": "Claw Fossil",
    "item.pixelmon.skull_fossil": "Skull Fossil",
    "item.pixelmon.armor_fossil": "Armor Fossil",
    "item.pixelmon.cover_fossil": "Cover Fossil",
    "item.pixelmon.plume_fossil": "Plume Fossil",
    "item.pixelmon.jaw_fossil": "Jaw Fossil",
    "item.pixelmon.sail_fossil": "Sail Fossil",
    "item.pixelmon.bird_fossil": "Bird Fossil",
    "item.pixelmon.dino_fossil": "Dino Fossil",
    "item.pixelmon.fish_fossil": "Fish Fossil",
    "item.pixelmon.drake_fossil": "Drake Fossil",
    "item.pixelmon.covered_fossil_0": "Covered Fossil",
    "item.pixelmon.covered_fossil_1": "Covered Fossil",
    "item.pixelmon.covered_fossil_2": "Covered Fossil",
    "item.pixelmon.covered_fossil_3": "Covered Fossil",
    "item.pixelmon.covered_fossil_4": "Covered Fossil",
    "item.pixelmon.covered_fossil_5": "Covered Fossil",
    "item.pixelmon.covered_fossil_6": "Covered Fossil",
    "item.pixelmon.covered_fossil_7": "Covered Fossil",
    "item.pixelmon.covered_fossil_8": "Covered Fossil",
    "item.pixelmon.covered_fossil_9": "Covered Fossil",
    "item.pixelmon.covered_fossil_10": "Covered Fossil",
    "item.pixelmon.covered_fossil_11": "Covered Fossil",
    "item.pixelmon.covered_fossil_12": "Covered Fossil",
    "item.pixelmon.covered_fossil_13": "Covered Fossil",
    "item.pixelmon.covered_fossil_14": "Covered Fossil",
    "item.pixelmon.sun_stone": "Sun Stone",
    "item.pixelmon.sun_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It burns as red as the evening sun.",
    "item.pixelmon.fire_stone": "Fire Stone",
    "item.pixelmon.fire_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. The stone has a fiery orange heart.",
    "item.pixelmon.water_stone": "Water Stone",
    "item.pixelmon.water_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It is the blue of a pool of clear water.",
    "item.pixelmon.moon_stone": "Moon Stone",
    "item.pixelmon.moon_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It is as black as the night sky.",
    "item.pixelmon.thunder_stone": "Thunder Stone",
    "item.pixelmon.thunder_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It has a distinct thunderbolt pattern.",
    "item.pixelmon.leaf_stone": "Leaf Stone",
    "item.pixelmon.leaf_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It has an unmistakable leaf pattern.",
    "item.pixelmon.dawn_stone": "Dawn Stone",
    "item.pixelmon.dawn_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It sparkles like a glittering eye.",
    "item.pixelmon.dusk_stone": "Dusk Stone",
    "item.pixelmon.dusk_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It holds shadows as dark as can be.",
    "item.pixelmon.shiny_stone": "Shiny Stone",
    "item.pixelmon.shiny_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It shines with a dazzling light.",
    "item.pixelmon.ice_stone": "Ice Stone",
    "item.pixelmon.ice_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It has an unmistakable snowflake pattern.",
    "item.pixelmon.thunder_stone_shard": "Thunder Stone Shard",
    "item.pixelmon.leaf_stone_shard": "Leaf Stone Shard",
    "item.pixelmon.water_stone_shard": "Water Stone Shard",
    "item.pixelmon.fire_stone_shard": "Fire Stone Shard",
    "item.pixelmon.sun_stone_shard": "Sun Stone Shard",
    "item.pixelmon.moon_stone_shard": "Moon Stone Shard",
    "item.pixelmon.dusk_stone_shard": "Dusk Stone Shard",
    "item.pixelmon.dawn_stone_shard": "Dawn Stone Shard",
    "item.pixelmon.shiny_stone_shard": "Shiny Stone Shard",
    "item.pixelmon.ice_stone_shard": "Ice Stone Shard",
    "item.pixelmon.ever_stone": "Everstone",
    "item.pixelmon.ever_stone.tooltip": "An item to be held by a Pokémon. A Pokémon holding this peculiar stone is prevented from evolving.",
    "item.pixelmon.lucky_egg": "Lucky Egg",
    "item.pixelmon.lucky_egg.tooltip": "An item to be held by a Pokémon. It's an egg filled with happiness that earns extra Exp. Points in battle.",
    "item.pixelmon.exp_share": "Exp. Share",
    "item.pixelmon.exp_share.tooltip": "An item to be held by a Pokémon. The holder gets a share of a battle's Exp. Points without battling.",
    "item.pixelmon.exp_all": "Exp. All",
    "item.pixelmon.exp_all.tooltip": "Turning on this special device will allow all the Pokémon on your team to receive Exp. Points from battles.",
    "item.pixelmon.choice_band": "Choice Band",
    "item.pixelmon.choice_band.tooltip": "An item to be held by a Pokémon. This curious headband boosts Attack but only allows the use of one move.",
    "item.pixelmon.choice_scarf": "Choice Scarf",
    "item.pixelmon.choice_scarf.tooltip": "An item to be held by a Pokémon. This curious scarf boosts Speed but only allows the use of one move.",
    "item.pixelmon.choice_specs": "Choice Specs",
    "item.pixelmon.choice_specs.tooltip": "An item to be held by a Pokémon. These curious glasses boost Sp. Atk but only allow the use of one move.",
    "item.pixelmon.muscle_band": "Muscle Band",
    "item.pixelmon.muscle_band.tooltip": "An item to be held by a Pokémon. This headband exudes strength, slightly boosting the power of physical moves.",
    "item.pixelmon.macho_brace": "Macho Brace",
    "item.pixelmon.macho_brace.tooltip": "An item to be held by a Pokémon. This stiff, heavy brace helps Pokémon grow strong but cuts Speed in battle.",
    "item.pixelmon.power_weight": "Power Weight",
    "item.pixelmon.power_weight.tooltip": "An item to be held by a Pokémon. It reduces Speed but allows the holder's max HP to grow more after battling.",
    "item.pixelmon.power_bracer": "Power Bracer",
    "item.pixelmon.power_bracer.tooltip": "An item to be held by a Pokémon. It reduces Speed but allows the holder's Attack stat to grow more after battling.",
    "item.pixelmon.power_belt": "Power Belt",
    "item.pixelmon.power_belt.tooltip": "An item to be held by a Pokémon. It reduces Speed but allows the holder's Defense stat to grow more after battling.",
    "item.pixelmon.power_lens": "Power Lens",
    "item.pixelmon.power_lens.tooltip": "An item to be held by a Pokémon. It reduces Speed but allows the holder's Sp. Atk stat to grow more after battling.",
    "item.pixelmon.power_band": "Power Band",
    "item.pixelmon.power_band.tooltip": "An item to be held by a Pokémon. It reduces Speed but allows the holder's Sp. Def stat to grow more after battling.",
    "item.pixelmon.power_anklet": "Power Anklet",
    "item.pixelmon.power_anklet.tooltip": "An item to be held by a Pokémon. It reduces Speed but allows the holder's Speed stat to grow more after battling.",
    "item.pixelmon.soothe_bell": "Soothe Bell",
    "item.pixelmon.soothe_bell.tooltip": "An item to be held by a Pokémon. The comforting chime of this bell calms the holder, making it friendly.",
    "item.pixelmon.smoke_ball": "Smoke Ball",
    "item.pixelmon.smoke_ball.tooltip": "An item to be held by a Pokémon. It enables the holder to flee from any wild Pokémon encounter without fail.",
    "item.pixelmon.wide_lens": "Wide Lens",
    "item.pixelmon.wide_lens.tooltip": "An item to be held by a Pokémon. It's a magnifying lens that slightly boosts the accuracy of moves.",
    "item.pixelmon.leftovers": "Leftovers",
    "item.pixelmon.leftovers.tooltip": "An item to be held by a Pokémon. The holder's HP is slowly but steadily restored throughout every battle.",
    "item.pixelmon.shell_bell": "Shell Bell",
    "item.pixelmon.shell_bell.tooltip": "An item to be held by a Pokémon. The holder restores a little HP every time it inflicts damage on others.",
    "item.pixelmon.cell_battery": "Cell Battery",
    "item.pixelmon.cell_battery.tooltip": "An item to be held by a Pokémon. It boosts Attack if the holder is hit with an Electric-type attack.",
    "item.pixelmon.metronome": "Metronome",
    "item.pixelmon.metronome.tooltip": "An item to be held by a Pokémon. It boosts moves used consecutively but only until a different move is used.",
    "item.pixelmon.dubious_disc": "Dubious Disc",
    "item.pixelmon.dubious_disc.tooltip": "A transparent device overflowing with dubious data. Its producer is unknown.",
    "item.pixelmon.electirizer": "Electirizer",
    "item.pixelmon.electirizer.tooltip": "A box packed with a tremendous amount of electric energy. It's loved by a certain Pokémon.",
    "item.pixelmon.magmarizer": "Magmarizer",
    "item.pixelmon.magmarizer.tooltip": "A box packed with a tremendous amount of magma energy. It's loved by a certain Pokémon.",
    "item.pixelmon.kings_rock": "King's Rock",
    "item.pixelmon.kings_rock.tooltip": "An item to be held by a Pokémon. When the holder successfully inflicts damage, the target may also flinch.",
    "item.pixelmon.protector": "Protector",
    "item.pixelmon.protector.tooltip": "A protective item of some sort. It is extremely stiff and heavy. It's loved by a certain Pokémon.",
    "item.pixelmon.reaper_cloth": "Reaper Cloth",
    "item.pixelmon.reaper_cloth.tooltip": "A cloth imbued with horrifyingly strong spiritual energy. It's loved by a certain Pokémon.",
    "item.pixelmon.deep_sea_scale": "Deep Sea Scale",
    "item.pixelmon.deep_sea_scale.tooltip": "An item to be held by Clamperl. This scale shines with a faint pink and raises the holder's Sp. Def stat.",
    "item.pixelmon.deep_sea_tooth": "Deep Sea Tooth",
    "item.pixelmon.deep_sea_tooth.tooltip": "An item to be held by Clamperl. This fang gleams a sharp silver and raises the holder's Sp. Atk stat.",
    "item.pixelmon.oval_stone": "Oval Stone",
    "item.pixelmon.oval_stone.tooltip": "A peculiar stone that can make certain species of Pokémon evolve. It's as round as a Pokémon Egg.",
    "item.pixelmon.soul_dew": "Soul Dew",
    "item.pixelmon.soul_dew.tooltip": "A wondrous orb to be held by either Latios or Latias. It raises the power of Psychic- and Dragon-type moves.",
    "item.pixelmon.up_grade": "Up-Grade",
    "item.pixelmon.up_grade.tooltip": "A transparent device somehow filled with all sorts of data. It was produced by Silph Co.",
    "item.pixelmon.razor_fang": "Razor Fang",
    "item.pixelmon.razor_fang.tooltip": "An item to be held by a Pokémon. When the holder successfully inflicts damage, the target may also flinch.",
    "item.pixelmon.dragon_scale": "Dragon Scale",
    "item.pixelmon.dragon_scale.tooltip": "A very tough and inflexible scale. Dragon-type Pokémon may be holding this item when caught.",
    "item.pixelmon.razor_claw": "Razor Claw",
    "item.pixelmon.razor_claw.tooltip": "An item to be held by a Pokémon. This sharply hooked claw increases the holder's critical-hit ratio.",
    "item.pixelmon.sachet": "Sachet",
    "item.pixelmon.sachet.tooltip": "A sachet filled with fragrant perfumes that are just slightly too overwhelming. Yet it's loved by a certain Pokémon.",
    "item.pixelmon.whipped_dream": "Whipped Dream",
    "item.pixelmon.whipped_dream.tooltip": "A soft and sweet treat made of fluffy, puffy, whipped and whirled cream. It's loved by a certain Pokémon.",
    "item.pixelmon.absorb_bulb": "Absorb Bulb",
    "item.pixelmon.absorb_bulb.tooltip": "An item to be held by a Pokémon. It boosts Sp. Atk if the holder is hit with a Water-type attack.",
    "item.pixelmon.life_orb": "Life Orb",
    "item.pixelmon.life_orb.tooltip": "An item to be held by a Pokémon. It boosts the power of moves but at the cost of some HP on each hit.",
    "item.pixelmon.focus_sash": "Focus Sash",
    "item.pixelmon.focus_sash.tooltip": "An item to be held by a Pokémon. If the holder has full HP, it will endure a potential KO attack with 1 HP.",
    "item.pixelmon.focus_band": "Focus Band",
    "item.pixelmon.focus_band.tooltip": "An item to be held by a Pokémon. The holder may endure a potential KO attack, leaving it with just 1 HP.",
    "item.pixelmon.toxic_orb": "Toxic Orb",
    "item.pixelmon.toxic_orb.tooltip": "An item to be held by a Pokémon. It's a bizarre orb that will badly poison the holder during battle.",
    "item.pixelmon.flame_orb": "Flame Orb",
    "item.pixelmon.flame_orb.tooltip": "An item to be held by a Pokémon. It's a bizarre orb that will afflict the holder with a burn during battle.",
    "item.pixelmon.black_sludge": "Black Sludge",
    "item.pixelmon.black_sludge.tooltip": "An item to be held by a Pokémon. It gradually restores HP to Poison-type Pokémon. It damages any other type.",
    "item.pixelmon.scope_lens": "Scope Lens",
    "item.pixelmon.scope_lens.tooltip": "An item to be held by a Pokémon. It's a lens for scoping out weak points. It boosts the holder's critical-hit ratio.",
    "item.pixelmon.air_balloon": "Air Balloon",
    "item.pixelmon.air_balloon.tooltip": "An item to be held by a Pokémon. The holder will float in the air until hit. Once the holder is hit, this item will burst.",
    "item.pixelmon.rocky_helmet": "Rocky Helmet",
    "item.pixelmon.rocky_helmet.tooltip": "An item to be held by a Pokémon. If the holder is hit, the attacker will also be damaged upon contact.",
    "item.pixelmon.shed_shell": "Shed Shell",
    "item.pixelmon.shed_shell.tooltip": "An item to be held by a Pokémon. This discarded carapace enables the holder to switch out of battle without fail.",
    "item.pixelmon.damp_rock": "Damp Rock",
    "item.pixelmon.damp_rock.tooltip": "An item to be held by a Pokémon. It extends the duration of the move Rain Dance when used by the holder.",
    "item.pixelmon.heat_rock": "Heat Rock",
    "item.pixelmon.heat_rock.tooltip": "An item to be held by a Pokémon. It extends the duration of the move Sunny Day when used by the holder.",
    "item.pixelmon.icy_rock": "Icy Rock",
    "item.pixelmon.icy_rock.tooltip": "An item to be held by a Pokémon. It extends the duration of the move Hail when used by the holder.",
    "item.pixelmon.smooth_rock": "Smooth Rock",
    "item.pixelmon.smooth_rock.tooltip": "An item to be held by a Pokémon. It extends the duration of the move Sandstorm when used by the holder.",
    "item.pixelmon.eviolite": "Eviolite",
    "item.pixelmon.eviolite.tooltip": "A mysterious evolutionary lump. When held by a Pokémon that can still evolve, it raises both Defense and Sp. Def.",
    "item.pixelmon.light_ball": "Light Ball",
    "item.pixelmon.light_ball.tooltip": "An item to be held by Pikachu. It's a puzzling orb that boosts its Attack and Sp. Atk stats.",
    "item.pixelmon.lucky_punch": "Lucky Punch",
    "item.pixelmon.lucky_punch.tooltip": "An item to be held by Chansey. This pair of lucky boxing gloves will boost Chansey's critical-hit ratio.",
    "item.pixelmon.metal_powder": "Metal Powder",
    "item.pixelmon.metal_powder.tooltip": "An item to be held by Ditto. Extremely fine yet hard, this odd powder boosts the Defense stat.",
    "item.pixelmon.quick_powder": "Quick Powder",
    "item.pixelmon.quick_powder.tooltip": "An item to be held by Ditto. Extremely fine yet hard, this odd powder boosts the Speed stat.",
    "item.pixelmon.leek": "Leek",
    "item.pixelmon.leek.tooltip": "An item to be held by Farfetch'd. This very long and stiff stalk of leek boosts its critical-hit ratio.",
    "item.pixelmon.thick_club": "Thick Club",
    "item.pixelmon.thick_club.tooltip": "An item to be held by Cubone or Marowak. It's a hard bone of some sort that boosts the Attack stat.",
    "item.pixelmon.power_herb": "Power Herb",
    "item.pixelmon.power_herb.tooltip": "A single-use item to be held by a Pokémon. It allows the holder to immediately use a move that normally requires a turn to charge.",
    "item.pixelmon.red_card": "Red Card",
    "item.pixelmon.red_card.tooltip": "An item to be held by a Pokémon. When the holder is hit by an attack, the attacker is removed from battle.",
    "item.pixelmon.expert_belt": "Expert Belt",
    "item.pixelmon.expert_belt.tooltip": "An item to be held by a Pokémon. It's a well-worn belt that slightly boosts the power of supereffective moves.",
    "item.pixelmon.light_clay": "Light Clay",
    "item.pixelmon.light_clay.tooltip": "An item to be held by a Pokémon. Protective moves like Light Screen and Reflect will be effective longer.",
    "item.pixelmon.mental_herb": "Mental Herb",
    "item.pixelmon.mental_herb.tooltip": "An item to be held by a Pokémon. The holder shakes off move-binding effects to move freely.",
    "item.pixelmon.sticky_barb": "Sticky Barb",
    "item.pixelmon.sticky_barb.tooltip": "An item to be held by a Pokémon. It damages the holder every turn and may latch on to Pokémon that touch the holder.",
    "item.pixelmon.quick_claw": "Quick Claw",
    "item.pixelmon.quick_claw.tooltip": "An item to be held by a Pokémon. This light, sharp claw lets the bearer move first occasionally.",
    "item.pixelmon.white_herb": "White Herb",
    "item.pixelmon.white_herb.tooltip": "An item to be held by a Pokémon. It will restore any lowered stat in battle.",
    "item.pixelmon.big_root": "Big Root",
    "item.pixelmon.big_root.tooltip": "An item to be held by a Pokémon. It boosts the amount of HP the holder restores from HP-stealing moves.",
    "item.pixelmon.zoom_lens": "Zoom Lens",
    "item.pixelmon.zoom_lens.tooltip": "An item to be held by a Pokémon. If the holder moves after its target moves, its accuracy will be boosted.",
    "item.pixelmon.bright_powder": "Bright Powder",
    "item.pixelmon.bright_powder.tooltip": "An item to be held by a Pokémon. It casts a tricky glare that lowers the opposing Pokémon's accuracy.",
    "item.pixelmon.lagging_tail": "Lagging Tail",
    "item.pixelmon.lagging_tail.tooltip": "An item to be held by a Pokémon. It is tremendously heavy and makes the holder move slower than usual.",
    "item.pixelmon.wise_glasses": "Wise Glasses",
    "item.pixelmon.wise_glasses.tooltip": "An item to be held by a Pokémon. This thick pair of glasses slightly boosts the power of special moves.",
    "item.pixelmon.eject_button": "Eject Button",
    "item.pixelmon.eject_button.tooltip": "An item to be held by a Pokémon. If the holder is hit by an attack, it will be switched out of battle.",
    "item.pixelmon.binding_band": "Binding Band",
    "item.pixelmon.binding_band.tooltip": "An item to be held by a Pokémon. It's a band that increases the power of binding moves used by the holder.",
    "item.pixelmon.iron_ball": "Iron Ball",
    "item.pixelmon.iron_ball.tooltip": "An item to be held by a Pokémon that lowers Speed and allows Ground-type moves to hit Flying types and holders that are levitating.",
    "item.pixelmon.grip_claw": "Grip Claw",
    "item.pixelmon.grip_claw.tooltip": "An item to be held by a Pokémon that extends the duration of multi-turn attacks, such as Bind and Wrap.",
    "item.pixelmon.float_stone": "Float Stone",
    "item.pixelmon.float_stone.tooltip": "An item to be held by a Pokémon. This very light stone reduces the weight of a Pokémon when held.",
    "item.pixelmon.ring_target": "Ring Target",
    "item.pixelmon.ring_target.tooltip": "An item to be held by a Pokémon. Moves that normally have no effect will land on a Pokémon holding it.",
    "item.pixelmon.amulet_coin": "Amulet Coin",
    "item.pixelmon.amulet_coin.tooltip": "An item to be held by a Pokémon that increases any prize money received if the holding Pokémon joins a battle.",
    "item.pixelmon.ability_capsule": "Ability Capsule",
    "item.pixelmon.ability_capsule.tooltip": "A capsule that allows a Pokémon with two Abilities to switch between these Abilities when it is used.",
    "item.pixelmon.assault_vest": "Assault Vest",
    "item.pixelmon.assault_vest.tooltip": "An item to be held by a Pokémon. This offensive vest raises Sp. Def but prevents the use of status moves.",
    "item.pixelmon.electric_seed": "Electric Seed",
    "item.pixelmon.electric_seed.tooltip": "An item to be held by a Pokémon that boosts Defense on Electric Terrain.",
    "item.pixelmon.grassy_seed": "Grassy Seed",
    "item.pixelmon.grassy_seed.tooltip": "An item to be held by a Pokémon that boosts Defense on Grassy Terrain.",
    "item.pixelmon.misty_seed": "Misty Seed",
    "item.pixelmon.misty_seed.tooltip": "An item to be held by a Pokémon that boosts Sp. Defense on Misty Terrain.",
    "item.pixelmon.psychic_seed": "Psychic Seed",
    "item.pixelmon.psychic_seed.tooltip": "An item to be held by a Pokémon that boosts Sp. Def on Psychic Terrain.",
    "item.pixelmon.cleanse_tag": "Cleanse Tag",
    "item.pixelmon.cleanse_tag.tooltip": "An item to be held by a Pokémon that helps keep wild Pokémon away if the holder is the head of the party.",
    "item.pixelmon.ability_patch": "Ability Patch",
    "item.pixelmon.ability_patch.tooltip": "A patch that allows a Pokémon with a regular Ability to have its Hidden Ability.",
    "item.pixelmon.heart_scale": "Heart Scale",
    "item.pixelmon.heart_scale.tooltip": "A pretty, heart-shaped scale that is extremely rare. Some people are happy to receive one.",
    "item.pixelmon.terrain_extender": "Terrain Extender",
    "item.pixelmon.terrain_extender.tooltip": "An item to be held by a Pokémon that extends the duration of the terrain caused by the holder's move or Ability.",
    "item.pixelmon.fluffy_tail": "Fluffy Tail",
    "item.pixelmon.fluffy_tail.tooltip": "A toy that attracts the attention of a Pokémon. It guarantees escape from any battle with wild Pokémon.",
    "item.pixelmon.linking_cord": "Linking Cord",
    "item.pixelmon.linking_cord.tooltip": "A string exuding a mysterious energy that makes you feel a strange sense of connection. It’s loved by certain Pokémon.",

    "item.pixelmon.mach_bike": "Mach Bike",
    "item.pixelmon.mach_bike_frame": "Mach Bike Frame",
    "item.pixelmon.acro_bike": "Acro Bike",
    "item.pixelmon.acro_bike_frame": "Acro Bike Frame",
    "item.pixelmon.wheel": "Wheel",
    "item.pixelmon.handles": "Handles",

    "item.pixelmon.meadow_plate": "Meadow Plate",
    "item.pixelmon.meadow_plate.tooltip": "A held item that raises the power of the holder's Grass-type moves by 20%%.",
    "item.pixelmon.flame_plate": "Flame Plate",
    "item.pixelmon.flame_plate.tooltip": "A held item that raises the power of the holder's Fire-type moves by 20%%.",
    "item.pixelmon.splash_plate": "Splash Plate",
    "item.pixelmon.splash_plate.tooltip": "A held item that raises the power of the holder's Water-type moves by 20%%.",
    "item.pixelmon.sky_plate": "Sky Plate",
    "item.pixelmon.sky_plate.tooltip": "A held item that raises the power of the holder's Flying-type moves by 20%%.",
    "item.pixelmon.insect_plate": "Insect Plate",
    "item.pixelmon.insect_plate.tooltip": "A held item that raises the power of the holder's Bug-type moves by 20%%.",
    "item.pixelmon.toxic_plate": "Toxic Plate",
    "item.pixelmon.toxic_plate.tooltip": "A held item that raises the power of the holder's Poison-type moves by 20%%.",
    "item.pixelmon.zap_plate": "Zap Plate",
    "item.pixelmon.zap_plate.tooltip": "A held item that raises the power of the holder's Electric-type moves by 20%%.",
    "item.pixelmon.mind_plate": "Mind Plate",
    "item.pixelmon.mind_plate.tooltip": "A held item that raises the power of the holder's Psychic-type moves by 20%%.",
    "item.pixelmon.stone_plate": "Stone Plate",
    "item.pixelmon.stone_plate.tooltip": "A held item that raises the power of the holder's Rock-type moves by 20%%.",
    "item.pixelmon.earth_plate": "Earth Plate",
    "item.pixelmon.earth_plate.tooltip": "A held item that raises the power of the holder's Ground-type moves by 20%%.",
    "item.pixelmon.dread_plate": "Dread Plate",
    "item.pixelmon.dread_plate.tooltip": "A held item that raises the power of the holder's Dark-type moves by 20%%.",
    "item.pixelmon.spooky_plate": "Spooky Plate",
    "item.pixelmon.spooky_plate.tooltip": "A held item that raises the power of the holder's Ghost-type moves by 20%%.",
    "item.pixelmon.iron_plate": "Iron Plate",
    "item.pixelmon.iron_plate.tooltip": "A held item that raises the power of the holder's Steel-type moves by 20%%.",
    "item.pixelmon.fist_plate": "Fist Plate",
    "item.pixelmon.fist_plate.tooltip": "A held item that raises the power of the holder's Fighting-type moves by 20%%.",
    "item.pixelmon.icicle_plate": "Icicle Plate",
    "item.pixelmon.icicle_plate.tooltip": "A held item that raises the power of the holder's Ice-type moves by 20%%.",
    "item.pixelmon.draco_plate": "Draco Plate",
    "item.pixelmon.draco_plate.tooltip": "A held item that raises the power of the holder's Dragon-type moves by 20%%.",
    "item.pixelmon.pixie_plate": "Pixie Plate",
    "item.pixelmon.pixie_plate.tooltip": "A held item that raises the power of the holder's Fairy-type moves by 20%%.",

    "item.pixelmon.luminous_moss": "Luminous Moss",
    "item.pixelmon.luminous_moss.tooltip": "A held item that boosts Sp. Def if hit with a Water-type attack.",
    "item.pixelmon.safety_goggles": "Safety Goggles",
    "item.pixelmon.safety_goggles.tooltip": "A held item that protect the holder from both weather-related damage and powder. Can also be worn to reduce heavy fog.",
    "item.pixelmon.snowball": "Snowball",
    "item.pixelmon.snowball.tooltip": "A held item that boosts Attack if hit with an Ice-type attack.",
    "item.pixelmon.weakness_policy": "Weakness Policy",
    "item.pixelmon.weakness_policy.tooltip": "A held item that causes Attack and Sp. Atk to sharply increase if the holder is hit with a move it's weak to.",
    "item.pixelmon.blunder_policy": "Blunder Policy",
    "item.pixelmon.blunder_policy.tooltip": "A held item that raises Speed sharply when a Pokémon misses with a move because of accuracy.",
    "item.pixelmon.protective_pads": "Protective Pads",
    "item.pixelmon.protective_pads.tooltip": "A held item that protect the holder from effects caused by making direct contact with the target.",
    "item.pixelmon.adamant_orb": "Adamant Orb",
    "item.pixelmon.adamant_orb.tooltip": "A brightly gleaming orb to be held by Dialga. It boosts the power of Dragon- and Steel-type moves when it is held.",
    "item.pixelmon.lustrous_orb": "Lustrous Orb",
    "item.pixelmon.lustrous_orb.tooltip": "A beautifully glowing orb to be held by Palkia. It boosts the power of Dragon- and Water-type moves when it is held.",
    "item.pixelmon.griseous_orb": "Griseous Orb",
    "item.pixelmon.griseous_orb.tooltip": "A glowing orb to be held by Giratina. It boosts the power of Dragon- and Ghost-type moves when it is held.",

    "item.pixelmon.full_incense": "Full Incense",
    "item.pixelmon.full_incense.tooltip": "A Full Incense is a type of incense that causes the Pokémon holding it to move last in battle. This will not occur if the opponent uses a move of lower priority than the user's move. If a Full Incense is held by a Snorlax that is breeding, the resulting Egg will contain a Munchlax instead of another Snorlax.",
    "item.pixelmon.lax_incense": "Lax Incense",
    "item.pixelmon.lax_incense.tooltip": "A Lax Incense is a held item that increases the holder's evasion by 10%%. If held by a Wobbuffet that is breeding, the resulting Egg will hatch into a Wynaut instead of another Wobbuffet.",
    "item.pixelmon.luck_incense": "Luck Incense",
    "item.pixelmon.luck_incense.tooltip": "A Luck Incense is a type of incense that doubles the amount of PokéDollars received after defeating an NPC Trainer if held by a Pokémon who participated in the battle. It can also be held by a Chansey or a Blissey when breeding to produce a Happiny Egg; without a Luck Incense, a Chansey Egg will be produced instead.",
    "item.pixelmon.odd_incense": "Odd Incense",
    "item.pixelmon.odd_incense.tooltip": "An Odd Incense is a held item that increases the power of the holder's Psychic-type moves by 20%%. An Odd Incense can also be held by a Mr. Mime that is breeding in order to produce a Mime Jr. Egg; otherwise, a Mr. Mime Egg will be produced instead.",
    "item.pixelmon.pure_incense": "Pure Incense",
    "item.pixelmon.pure_incense.tooltip": "A Pure Incense is a held item that can be held by a Chimecho to produce a Chingling Egg when breeding; without a Pure Incense, a Chimecho Egg will be produced instead.",
    "item.pixelmon.rock_incense": "Rock Incense",
    "item.pixelmon.rock_incense.tooltip": "A Rock Incense is a held item that boosts the power of the holder's Rock-type moves by 20%%. It can also be held by a Sudowoodo that is breeding in order to produce a Bonsly Egg; otherwise, a Sudowoodo Egg will be produced instead.",
    "item.pixelmon.rose_incense": "Rose Incense",
    "item.pixelmon.rose_incense.tooltip": "A Rose Incense is a held item that increases the power of the holder's Grass-type moves by 20%%. It can also be held by a Roselia or a Roserade to obtain a Budew Egg when breeding; without a Rose Incense, a Roselia Egg will be created instead.",
    "item.pixelmon.sea_incense": "Sea Incense",
    "item.pixelmon.sea_incense.tooltip": "A Sea Incense is a type of incense that can be held by a Pokémon to raise the power of the holder's Water-type moves by 20%%. It also must be held by a breeding Marill or Azumarill to produce an Azurill Egg; otherwise, the Egg will hatch into a Marill.",
    "item.pixelmon.wave_incense": "Wave Incense",
    "item.pixelmon.wave_incense.tooltip": "A Wave Incense is a held item that raises the power of the holder's Water-type moves by 20%%. If a Mantine holds a Wave Incense while it breeds, it will produce a Mantyke Egg.",
    "item.pixelmon.incense_burner": "Incense Burner",
    "item.pixelmon.incense_burner.tooltip": "Used in the Infuser to create various Incenses",

    "item.pixelmon.peat_block": "Peat Block",
    "item.pixelmon.bug_gem": "Bug Gem",
    "item.pixelmon.bug_gem.tooltip": "A held item that boosts the power of a single Bug-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Tanga Berry.",
    "item.pixelmon.dark_gem": "Dark Gem",
    "item.pixelmon.dark_gem.tooltip": "A held item that boosts the power of a single Dark-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Colbur Berry.",
    "item.pixelmon.dragon_gem": "Dragon Gem",
    "item.pixelmon.dragon_gem.tooltip": "A held item that boosts the power of a single Dragon-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Haban Berry.",
    "item.pixelmon.electric_gem": "Electric Gem",
    "item.pixelmon.electric_gem.tooltip": "A held item that boosts the power of a single Electric-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Wacan Berry.",
    "item.pixelmon.fighting_gem": "Fighting Gem",
    "item.pixelmon.fighting_gem.tooltip": "A held item that boosts the power of a single Fighting-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Chople Berry.",
    "item.pixelmon.fairy_gem": "Fairy Gem",
    "item.pixelmon.fairy_gem.tooltip": "A held item that boosts the power of a single Fairy-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Roseli Berry.",
    "item.pixelmon.fire_gem": "Fire Gem",
    "item.pixelmon.fire_gem.tooltip": "A held item that boosts the power of a single Fire-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Occa Berry.",
    "item.pixelmon.flying_gem": "Flying Gem",
    "item.pixelmon.flying_gem.tooltip": "A held item that boosts the power of a single Flying-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Coba Berry.",
    "item.pixelmon.ghost_gem": "Ghost Gem",
    "item.pixelmon.ghost_gem.tooltip": "A held item that boosts the power of a single Ghost-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Kasib Berry.",
    "item.pixelmon.grass_gem": "Grass Gem",
    "item.pixelmon.grass_gem.tooltip": "A held item that boosts the power of a single Grass-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Rindo Berry.",
    "item.pixelmon.ground_gem": "Ground Gem",
    "item.pixelmon.ground_gem.tooltip": "A held item that boosts the power of a single Ground-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Shuca Berry.",
    "item.pixelmon.ice_gem": "Ice Gem",
    "item.pixelmon.ice_gem.tooltip": "A held item that boosts the power of a single Ice-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Yache Berry.",
    "item.pixelmon.normal_gem": "Normal Gem",
    "item.pixelmon.normal_gem.tooltip": "A held item that boosts the power of a single Normal-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Chilan Berry.",
    "item.pixelmon.poison_gem": "Poison Gem",
    "item.pixelmon.poison_gem.tooltip": "A held item that boosts the power of a single Poison-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Kebia Berry.",
    "item.pixelmon.psychic_gem": "Psychic Gem",
    "item.pixelmon.psychic_gem.tooltip": "A held item that boosts the power of a single Psychic-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Payapa Berry.",
    "item.pixelmon.rock_gem": "Rock Gem",
    "item.pixelmon.rock_gem.tooltip": "A held item that boosts the power of a single Rock-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Charti Berry.",
    "item.pixelmon.steel_gem": "Steel Gem",
    "item.pixelmon.steel_gem.tooltip": "A held item that boosts the power of a single Steel-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Babiri Berry.",
    "item.pixelmon.water_gem": "Water Gem",
    "item.pixelmon.water_gem.tooltip": "A held item that boosts the power of a single Water-type move by 1.3×, being consumed upon use. Created by infusing a Crystal Block with a Passho Berry.",

    "item.pixelmon.bug_gem.special": "Hallowed Bug Gem",
    "item.pixelmon.dark_gem.special": "Hallowed Dark Gem",
    "item.pixelmon.dragon_gem.special": "Hallowed Dragon Gem",
    "item.pixelmon.electric_gem.special": "Hallowed Electric Gem",
    "item.pixelmon.fighting_gem.special": "Hallowed Fighting Gem",
    "item.pixelmon.fire_gem.special": "Hallowed Fire Gem",
    "item.pixelmon.flying_gem.special": "Hallowed Flying Gem",
    "item.pixelmon.ghost_gem.special": "Hallowed Ghost Gem",
    "item.pixelmon.grass_gem.special": "Hallowed Grass Gem",
    "item.pixelmon.ground_gem.special": "Hallowed Ground Gem",
    "item.pixelmon.ice_gem.special": "Hallowed Ice Gem",
    "item.pixelmon.normal_gem.special": "Hallowed Normal Gem",
    "item.pixelmon.poison_gem.special": "Hallowed Poison Gem",
    "item.pixelmon.psychic_gem.special": "Hallowed Psychic Gem",
    "item.pixelmon.rock_gem.special": "Hallowed Rock Gem",
    "item.pixelmon.steel_gem.special": "Hallowed Steel Gem",
    "item.pixelmon.water_gem.special": "Hallowed Water Gem",
    "item.pixelmon.fairy_gem.special": "Hallowed Fairy Gem",

    "item.pixelmon.black_belt": "Black Belt",
    "item.pixelmon.black_belt.tooltip": "An item to be held by a Pokémon. This belt helps the wearer to focus and boosts the power of Fighting-type moves.",
    "item.pixelmon.black_glasses": "Black Glasses",
    "item.pixelmon.black_glasses.tooltip": "An item to be held by a Pokémon. It's a pair of shady-looking glasses that boost the power of Dark-type moves.",
    "item.pixelmon.charcoal": "Charcoal",
    "item.pixelmon.charcoal.tooltip": "An item to be held by a Pokémon. It's a combustible fuel that boosts the power of Fire-type moves.",
    "item.pixelmon.dragon_fang": "Dragon Fang",
    "item.pixelmon.dragon_fang.tooltip": "An item to be held by a Pokémon. This hard and sharp fang boosts the power of Dragon-type moves.",
    "item.pixelmon.hard_stone": "Hard Stone",
    "item.pixelmon.hard_stone.tooltip": "An item to be held by a Pokémon. It's a durable stone that boosts the power of Rock-type moves.",
    "item.pixelmon.magnet": "Magnet",
    "item.pixelmon.magnet.tooltip": "An item to be held by a Pokémon. It's a powerful magnet that boosts the power of Electric-type moves.",
    "item.pixelmon.metal_coat": "Metal Coat",
    "item.pixelmon.metal_coat.tooltip": "An item to be held by a Pokémon. It's a special metallic film that can boost the power of Steel-type moves.",
    "item.pixelmon.prism_scale": "Prism Scale",
    "item.pixelmon.prism_scale.tooltip": "A mysterious scale that causes a certain Pokémon to evolve. It shines in rainbow colors.",
    "item.pixelmon.miracle_seed": "Miracle Seed",
    "item.pixelmon.miracle_seed.tooltip": "An item to be held by a Pokémon. It's a seed imbued with life-force that boosts the power of Grass-type moves.",
    "item.pixelmon.mystic_water": "Mystic Water",
    "item.pixelmon.mystic_water.tooltip": "An item to be held by a Pokémon. This teardrop-shaped gem boosts the power of Water-type moves.",
    "item.pixelmon.fairy_wand": "Fairy Wand",
    "item.pixelmon.fairy_wand.tooltip": "An item to be held by a Pokémon. This delicate, shining wand boosts the power of Fairy-type moves.",
    "item.pixelmon.never_melt_ice": "Never-Melt Ice",
    "item.pixelmon.never_melt_ice.tooltip": "An item to be held by a Pokémon. It's a heat-repelling piece of ice that boosts the power of Ice-type moves.",
    "item.pixelmon.poison_barb": "Poison Barb",
    "item.pixelmon.poison_barb.tooltip": "An item to be held by a Pokémon. This small, poisonous barb boosts the power of Poison-type moves.",
    "item.pixelmon.sharp_beak": "Sharp Beak",
    "item.pixelmon.sharp_beak.tooltip": "An item to be held by a Pokémon. It's a long, sharp beak that boosts the power of Flying-type moves.",
    "item.pixelmon.silk_scarf": "Silk Scarf",
    "item.pixelmon.silk_scarf.tooltip": "An item to be held by a Pokémon. It's a sumptuous scarf that boosts the power of Normal-type moves.",
    "item.pixelmon.silver_powder": "Silver Powder",
    "item.pixelmon.silver_powder.tooltip": "An item to be held by a Pokémon. It's a shiny silver powder that will boost the power of Bug-type moves.",
    "item.pixelmon.soft_sand": "Soft Sand",
    "item.pixelmon.soft_sand.tooltip": "An item to be held by a Pokémon. It's a loose, silky sand that boosts the power of Ground-type moves.",
    "item.pixelmon.spell_tag": "Spell Tag",
    "item.pixelmon.spell_tag.tooltip": "An item to be held by a Pokémon. It's a sinister, eerie tag that boosts the power of Ghost-type moves.",
    "item.pixelmon.twisted_spoon": "Twisted Spoon",
    "item.pixelmon.twisted_spoon.tooltip": "An item to be held by a Pokémon. This spoon is imbued with telekinetic power and boosts Psychic-type moves.",
    "item.pixelmon.destiny_knot": "Destiny Knot",
    "item.pixelmon.destiny_knot.tooltip": "An item to be held by a Pokémon. If the holder becomes infatuated, the opposing Pokémon will be, too.",
    "item.pixelmon.x_attack": "X Attack",
    "item.pixelmon.x_attack.tooltip": "An item that sharply boosts the Attack stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.",
    "item.pixelmon.x_defense": "X Defense",
    "item.pixelmon.x_defense.tooltip": "An item that sharply boosts the Defense stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.",
    "item.pixelmon.x_special_attack": "X Sp. Atk",
    "item.pixelmon.x_special_attack.tooltip": "An item that sharply boosts the Sp. Atk stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.",
    "item.pixelmon.x_special_defense": "X Sp. Def",
    "item.pixelmon.x_special_defense.tooltip": "An item that sharply boosts the Sp. Def stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.",
    "item.pixelmon.x_speed": "X Speed",
    "item.pixelmon.x_speed.tooltip": "An item that sharply boosts the Speed stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.",
    "item.pixelmon.x_accuracy": "X Accuracy",
    "item.pixelmon.x_accuracy.tooltip": "An item that sharply boosts the accuracy of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.",
    "item.pixelmon.dire_hit": "Dire Hit",
    "item.pixelmon.dire_hit.tooltip": "An item that greatly raises the critical-hit ratio of a Pokémon during a battle. It can be used only once and wears off if the Pokémon is withdrawn.",
    "item.pixelmon.guard_spec": "Guard Spec.",
    "item.pixelmon.guard_spec.tooltip": "An item that prevents stat reduction among the Trainer's party Pokémon for five turns after it is used in battle.",
    "item.pixelmon.max_mushroom": "Max Mushrooms",
    "block.pixelmon.max_mushroom_block": "Max Mushrooms Block",
    "item.pixelmon.adrenaline_orb": "Adrenaline Orb",
    "item.pixelmon.adrenaline_orb.tooltip": "If held by a Pokémon, it boosts Speed when intimidated.",

    "item.pixelmon.chisel": "Chisel",
    "item.pixelmon.chisel.tooltip": "A chisel is an item that creates Pokémon statues and allows them to be customized. These statues are completely cosmetic. Statues can be removed by left-clicking them with a chisel.",
    "item.pixelmon.lens_gold": "Ras' Golden Lens",
    "item.pixelmon.lens_gold.tooltip": "An item that shows the Ability, Nature, Ivs and Gender of a Pokémon when you right click the Pokémon with the item in hand. Can be used 4 times.",
    "item.pixelmon.lens_silver": "Ras' Silver Lens",
    "item.pixelmon.lens_silver.tooltip": "An item that shows the Ability, Nature, Ivs and Gender of a Pokémon when you right click the Pokémon with the item in hand. Can be used 1 times.",
    "item.pixelmon.lens.used": "The %s had its attributes revealed!",
    "item.pixelmon.pixelmon_sprite": "Photo",
    "item.pixelmon.PixelmonSprite": "Photo",
    "item.pixelmon.entity_pixelmon_painting_item": "Pokémon Painting",
    "item.pixelmon.painting": "Pokémon Painting",
    "item.pixelmon.camera": "Camera",
    "item.pixelmon.film": "Film",

    "item.pixelmon.whitebadgecase": "White Badgecase",
    "item.pixelmon.blackbadgecase": "Black Badgecase",
    "item.pixelmon.greenbadgecase": "Green Badgecase",
    "item.pixelmon.pinkbadgecase": "Pink Badgecase",
    "item.pixelmon.bluebadgecase": "Blue Badgecase",
    "item.pixelmon.redbadgecase": "Red Badgecase",
    "item.pixelmon.yellowbadgecase": "Yellow Badgecase",
    "item.pixelmon.badgecase.tooltip": "Holds a variety of different badges. Register a Badgecase by clicking the register button on the top of the GUI when you first craft it.",

    "item.pixelmon.rage_candy_bar": "Rage Candy Bar",
    "item.pixelmon.rage_candy_bar.tooltip": "Mahogany Town's famous candy. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.lava_cookie": "Lava Cookie",
    "item.pixelmon.lava_cookie.tooltip": "Lavaridge Town's local specialty. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.old_gateau": "Old Gateau",
    "item.pixelmon.old_gateau.tooltip": "The Old Chateau's hidden specialty. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.casteliacone": "Casteliacone",
    "item.pixelmon.casteliacone.tooltip": "Castelia City's specialty, soft-serve ice cream. It can be used once to heal all the status conditions of a Pokémon",
    "item.pixelmon.lumiose_galette": "Lumiose Galette",
    "item.pixelmon.lumiose_galette.tooltip": "A popular treat in Lumiose City. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.shalour_sable": "Shalour Sable",
    "item.pixelmon.shalour_sable.tooltip": "Shalour City's famous shortbread. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.big_malasada": "Big Malasada",
    "item.pixelmon.big_malasada.tooltip": "The Alola region's local specialty—fried bread. It can be used once to heal all the status conditions of a Pokémon.",
    "item.pixelmon.omega_shard": "Omega Shard",
    "item.pixelmon.alpha_shard": "Alpha Shard",
    "item.pixelmon.delta_shard": "Delta Shard",
    "item.pixelmon.azure_flute": "Azure Flute",
    "item.pixelmon.azure_flute.tooltip": "A flute that puts out echoing sounds that do not seem to be of this world. No one knows who made it.",
    "item.pixelmon.red_orb": "Red Orb",
    "item.pixelmon.red_orb.tooltip": "A shiny red orb that is said to have a legend tied to it. It's known to have a deep connection with the Hoenn region.",
    "item.pixelmon.blue_orb": "Blue Orb",
    "item.pixelmon.blue_orb.tooltip": "A shiny blue orb that is said to have a legend tied to it. It's known to have a deep connection with the Hoenn region.",
    "item.pixelmon.jade_orb": "Jade Orb",
    "item.pixelmon.jade_orb.tooltip": "A shiny jade orb that is said to have a legend tied to it. It's known to have a deep connection with the Hoenn region.",
    "item.pixelmon.sacredash": "Sacred Ash",
    "item.pixelmon.sacredash.tooltip": "This rare ash can revive all fainted Pokémon in a party. In doing so, it also fully restores their max HP.",
    "item.pixelmon.gold_bottle_cap": "Gold Bottle Cap",
    "item.pixelmon.gold_bottle_cap.tooltip": "A beautiful bottle cap that gives off a golden gleam. Hyper Trains all the IVs of a Pokémon.",
    "item.pixelmon.silver_bottle_cap": "Silver Bottle Cap",
    "item.pixelmon.silver_bottle_cap.tooltip": "A beautiful bottle cap that gives off a silver gleam. Hyper Trains a single IV of a Pokémon.",

    "block.pixelmon.poke_chest": "Poké Chest",
    "block.pixelmon.ultra_chest": "Ultra Chest",
    "block.pixelmon.master_chest": "Master Chest",
    "block.pixelmon.beast_chest": "Beast Chest",

    "block.pixelmon.cooking_pot": "Cooking Pot",
    "block.pixelmon.cooking_pot.tooltip": "Toss in your berries and ignite with a Flint and Steel! Interact to fan and stir.",
    "block.pixelmon.bench": "Oak Bench",
    "block.pixelmon.dark_oak_bench": "Dark Oak Bench",
    "block.pixelmon.birch_bench": "Birch Bench",
    "block.pixelmon.spruce_bench": "Spruce Bench",
    "block.pixelmon.acacia_bench": "Acacia Bench",
    "block.pixelmon.jungle_bench": "Jungle Bench",

    "block.pixelmon.mug_base": "Mug",
    "block.pixelmon.mug_ball": "Poké Ball Mug",
    "block.pixelmon.mug_pika": "Pika Mug",

    "tm.movedata.tooltip": "Attack: %s | Power: %s | Accuracy: %s | PP: %s",
    "tm.blankdata.tooltip": "Move: %s | Progress: %s/%s",
    "tm.movedata.galaronly.tooltip": "§cThis will only work on Pokémon in Sword and Shield.",
    "tm.movedata.alolaonly.tooltip": "§cThis will not work on Pokémon from the Galar region.",

    "item.pixelmon.tm8_blank": "Blank Galarian TM",
    "item.pixelmon.tm8_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen8.0": "Galarian TM00: Mega Punch",
    "item.pixelmon.tm_gen8.1": "Galarian TM01: Mega Kick",
    "item.pixelmon.tm_gen8.2": "Galarian TM02: Pay Day",
    "item.pixelmon.tm_gen8.3": "Galarian TM03: Fire Punch",
    "item.pixelmon.tm_gen8.4": "Galarian TM04: Ice Punch",
    "item.pixelmon.tm_gen8.5": "Galarian TM05: Thunder Punch",
    "item.pixelmon.tm_gen8.6": "Galarian TM06: Fly",
    "item.pixelmon.tm_gen8.7": "Galarian TM07: Pin Missile",
    "item.pixelmon.tm_gen8.8": "Galarian TM08: Hyper Beam",
    "item.pixelmon.tm_gen8.9": "Galarian TM09: Giga Impact",
    "item.pixelmon.tm_gen8.10": "Galarian TM10: Magical Leaf",
    "item.pixelmon.tm_gen8.11": "Galarian TM11: Solar Beam",
    "item.pixelmon.tm_gen8.12": "Galarian TM12: Solar Blade",
    "item.pixelmon.tm_gen8.13": "Galarian TM13: Fire Spin",
    "item.pixelmon.tm_gen8.14": "Galarian TM14: Thunder Wave",
    "item.pixelmon.tm_gen8.15": "Galarian TM15: Dig",
    "item.pixelmon.tm_gen8.16": "Galarian TM16: Screech",
    "item.pixelmon.tm_gen8.17": "Galarian TM17: Light Screen",
    "item.pixelmon.tm_gen8.18": "Galarian TM18: Reflect",
    "item.pixelmon.tm_gen8.19": "Galarian TM19: Safeguard",
    "item.pixelmon.tm_gen8.20": "Galarian TM20: Self-Destruct",
    "item.pixelmon.tm_gen8.21": "Galarian TM21: Rest",
    "item.pixelmon.tm_gen8.22": "Galarian TM22: Rock Slide",
    "item.pixelmon.tm_gen8.23": "Galarian TM23: Thief",
    "item.pixelmon.tm_gen8.24": "Galarian TM24: Snore",
    "item.pixelmon.tm_gen8.25": "Galarian TM25: Protect",
    "item.pixelmon.tm_gen8.26": "Galarian TM26: Scary Face",
    "item.pixelmon.tm_gen8.27": "Galarian TM27: Icy Wind",
    "item.pixelmon.tm_gen8.28": "Galarian TM28: Giga Drain",
    "item.pixelmon.tm_gen8.29": "Galarian TM29: Charm",
    "item.pixelmon.tm_gen8.30": "Galarian TM30: Steel Wing",
    "item.pixelmon.tm_gen8.31": "Galarian TM31: Attract",
    "item.pixelmon.tm_gen8.32": "Galarian TM32: Sandstorm",
    "item.pixelmon.tm_gen8.33": "Galarian TM33: Rain Dance",
    "item.pixelmon.tm_gen8.34": "Galarian TM34: Sunny Day",
    "item.pixelmon.tm_gen8.35": "Galarian TM35: Hail",
    "item.pixelmon.tm_gen8.36": "Galarian TM36: Whirlpool",
    "item.pixelmon.tm_gen8.37": "Galarian TM37: Beat Up",
    "item.pixelmon.tm_gen8.38": "Galarian TM38: Will-O-Wisp",
    "item.pixelmon.tm_gen8.39": "Galarian TM39: Facade",
    "item.pixelmon.tm_gen8.40": "Galarian TM40: Swift",
    "item.pixelmon.tm_gen8.41": "Galarian TM41: Helping Hand",
    "item.pixelmon.tm_gen8.42": "Galarian TM42: Revenge",
    "item.pixelmon.tm_gen8.43": "Galarian TM43: Brick Break",
    "item.pixelmon.tm_gen8.44": "Galarian TM44: Imprison",
    "item.pixelmon.tm_gen8.45": "Galarian TM45: Dive",
    "item.pixelmon.tm_gen8.46": "Galarian TM46: Weather Ball",
    "item.pixelmon.tm_gen8.47": "Galarian TM47: Fake Tears",
    "item.pixelmon.tm_gen8.48": "Galarian TM48: Rock Tomb",
    "item.pixelmon.tm_gen8.49": "Galarian TM49: Sand Tomb",
    "item.pixelmon.tm_gen8.50": "Galarian TM50: Bullet Seed",
    "item.pixelmon.tm_gen8.51": "Galarian TM51: Icicle Spear",
    "item.pixelmon.tm_gen8.52": "Galarian TM52: Bounce",
    "item.pixelmon.tm_gen8.53": "Galarian TM53: Mud Shot",
    "item.pixelmon.tm_gen8.54": "Galarian TM54: Rock Blast",
    "item.pixelmon.tm_gen8.55": "Galarian TM55: Brine",
    "item.pixelmon.tm_gen8.56": "Galarian TM56: U-turn",
    "item.pixelmon.tm_gen8.57": "Galarian TM57: Payback",
    "item.pixelmon.tm_gen8.58": "Galarian TM58: Assurance",
    "item.pixelmon.tm_gen8.59": "Galarian TM59: Fling",
    "item.pixelmon.tm_gen8.60": "Galarian TM60: Power Swap",
    "item.pixelmon.tm_gen8.61": "Galarian TM61: Guard Swap",
    "item.pixelmon.tm_gen8.62": "Galarian TM62: Speed Swap",
    "item.pixelmon.tm_gen8.63": "Galarian TM63: Drain Punch",
    "item.pixelmon.tm_gen8.64": "Galarian TM64: Avalanche",
    "item.pixelmon.tm_gen8.65": "Galarian TM65: Shadow Claw",
    "item.pixelmon.tm_gen8.66": "Galarian TM66: Thunder Fang",
    "item.pixelmon.tm_gen8.67": "Galarian TM67: Ice Fang",
    "item.pixelmon.tm_gen8.68": "Galarian TM68: Fire Fang",
    "item.pixelmon.tm_gen8.69": "Galarian TM69: Psycho Cut",
    "item.pixelmon.tm_gen8.70": "Galarian TM70: Trick Room",
    "item.pixelmon.tm_gen8.71": "Galarian TM71: Wonder Room",
    "item.pixelmon.tm_gen8.72": "Galarian TM72: Magic Room",
    "item.pixelmon.tm_gen8.73": "Galarian TM73: Cross Poison",
    "item.pixelmon.tm_gen8.74": "Galarian TM74: Venoshock",
    "item.pixelmon.tm_gen8.75": "Galarian TM75: Low Sweep",
    "item.pixelmon.tm_gen8.76": "Galarian TM76: Round",
    "item.pixelmon.tm_gen8.77": "Galarian TM77: Hex",
    "item.pixelmon.tm_gen8.78": "Galarian TM78: Acrobatics",
    "item.pixelmon.tm_gen8.79": "Galarian TM79: Retaliate",
    "item.pixelmon.tm_gen8.80": "Galarian TM80: Volt Switch",
    "item.pixelmon.tm_gen8.81": "Galarian TM81: Bulldoze",
    "item.pixelmon.tm_gen8.82": "Galarian TM82: Electroweb",
    "item.pixelmon.tm_gen8.83": "Galarian TM83: Razor Shell",
    "item.pixelmon.tm_gen8.84": "Galarian TM84: Tail Slap",
    "item.pixelmon.tm_gen8.85": "Galarian TM85: Snarl",
    "item.pixelmon.tm_gen8.86": "Galarian TM86: Phantom Force",
    "item.pixelmon.tm_gen8.87": "Galarian TM87: Draining Kiss",
    "item.pixelmon.tm_gen8.88": "Galarian TM88: Grassy Terrain",
    "item.pixelmon.tm_gen8.89": "Galarian TM89: Misty Terrain",
    "item.pixelmon.tm_gen8.90": "Galarian TM90: Electric Terrain",
    "item.pixelmon.tm_gen8.91": "Galarian TM91: Psychic Terrain",
    "item.pixelmon.tm_gen8.92": "Galarian TM92: Mystical Fire",
    "item.pixelmon.tm_gen8.93": "Galarian TM93: Eerie Impulse",
    "item.pixelmon.tm_gen8.94": "Galarian TM94: False Swipe",
    "item.pixelmon.tm_gen8.95": "Galarian TM95: Air Slash",
    "item.pixelmon.tm_gen8.96": "Galarian TM96: Smart Strike",
    "item.pixelmon.tm_gen8.97": "Galarian TM97: Brutal Swing",
    "item.pixelmon.tm_gen8.98": "Galarian TM98: Stomping Tantrum",
    "item.pixelmon.tm_gen8.99": "Galarian TM99: Breaking Swipe",

    "item.pixelmon.tr8_blank": "Blank TR",
    "item.pixelmon.tr8_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tr_gen8.0": "TR00: Swords Dance",
    "item.pixelmon.tr_gen8.1": "TR01: Body Slam",
    "item.pixelmon.tr_gen8.2": "TR02: Flamethrower",
    "item.pixelmon.tr_gen8.3": "TR03: Hydro Pump",
    "item.pixelmon.tr_gen8.4": "TR04: Surf",
    "item.pixelmon.tr_gen8.5": "TR05: Ice Beam",
    "item.pixelmon.tr_gen8.6": "TR06: Blizzard",
    "item.pixelmon.tr_gen8.7": "TR07: Low Kick",
    "item.pixelmon.tr_gen8.8": "TR08: Thunderbolt",
    "item.pixelmon.tr_gen8.9": "TR09: Thunder",
    "item.pixelmon.tr_gen8.10": "TR10: Earthquake",
    "item.pixelmon.tr_gen8.11": "TR11: Psychic",
    "item.pixelmon.tr_gen8.12": "TR12: Agility",
    "item.pixelmon.tr_gen8.13": "TR13: Focus Energy",
    "item.pixelmon.tr_gen8.14": "TR14: Metronome",
    "item.pixelmon.tr_gen8.15": "TR15: Fire Blast",
    "item.pixelmon.tr_gen8.16": "TR16: Waterfall",
    "item.pixelmon.tr_gen8.17": "TR17: Amnesia",
    "item.pixelmon.tr_gen8.18": "TR18: Leech Life",
    "item.pixelmon.tr_gen8.19": "TR19: Tri Attack",
    "item.pixelmon.tr_gen8.20": "TR20: Substitute",
    "item.pixelmon.tr_gen8.21": "TR21: Reversal",
    "item.pixelmon.tr_gen8.22": "TR22: Sludge Bomb",
    "item.pixelmon.tr_gen8.23": "TR23: Spikes",
    "item.pixelmon.tr_gen8.24": "TR24: Outrage",
    "item.pixelmon.tr_gen8.25": "TR25: Psyshock",
    "item.pixelmon.tr_gen8.26": "TR26: Endure",
    "item.pixelmon.tr_gen8.27": "TR27: Sleep Talk",
    "item.pixelmon.tr_gen8.28": "TR28: Megahorn",
    "item.pixelmon.tr_gen8.29": "TR29: Baton Pass",
    "item.pixelmon.tr_gen8.30": "TR30: Encore",
    "item.pixelmon.tr_gen8.31": "TR31: Iron Tail",
    "item.pixelmon.tr_gen8.32": "TR32: Crunch",
    "item.pixelmon.tr_gen8.33": "TR33: Shadow Ball",
    "item.pixelmon.tr_gen8.34": "TR34: Future Sight",
    "item.pixelmon.tr_gen8.35": "TR35: Uproar",
    "item.pixelmon.tr_gen8.36": "TR36: Heat Wave",
    "item.pixelmon.tr_gen8.37": "TR37: Taunt",
    "item.pixelmon.tr_gen8.38": "TR38: Trick",
    "item.pixelmon.tr_gen8.39": "TR39: Superpower",
    "item.pixelmon.tr_gen8.40": "TR40: Skill Swap",
    "item.pixelmon.tr_gen8.41": "TR41: Blaze Kick",
    "item.pixelmon.tr_gen8.42": "TR42: Hyper Voice",
    "item.pixelmon.tr_gen8.43": "TR43: Overheat",
    "item.pixelmon.tr_gen8.44": "TR44: Cosmic Power",
    "item.pixelmon.tr_gen8.45": "TR45: Muddy Water",
    "item.pixelmon.tr_gen8.46": "TR46: Iron Defense",
    "item.pixelmon.tr_gen8.47": "TR47: Dragon Claw",
    "item.pixelmon.tr_gen8.48": "TR48: Bulk Up",
    "item.pixelmon.tr_gen8.49": "TR49: Calm Mind",
    "item.pixelmon.tr_gen8.50": "TR50: Leaf Blade",
    "item.pixelmon.tr_gen8.51": "TR51: Dragon Dance",
    "item.pixelmon.tr_gen8.52": "TR52: Gyro Ball",
    "item.pixelmon.tr_gen8.53": "TR53: Close Combat",
    "item.pixelmon.tr_gen8.54": "TR54: Toxic Spikes",
    "item.pixelmon.tr_gen8.55": "TR55: Flare Blitz",
    "item.pixelmon.tr_gen8.56": "TR56: Aura Sphere",
    "item.pixelmon.tr_gen8.57": "TR57: Poison Jab",
    "item.pixelmon.tr_gen8.58": "TR58: Dark Pulse",
    "item.pixelmon.tr_gen8.59": "TR59: Seed Bomb",
    "item.pixelmon.tr_gen8.60": "TR60: X-Scissor",
    "item.pixelmon.tr_gen8.61": "TR61: Bug Buzz",
    "item.pixelmon.tr_gen8.62": "TR62: Dragon Pulse",
    "item.pixelmon.tr_gen8.63": "TR63: Power Gem",
    "item.pixelmon.tr_gen8.64": "TR64: Focus Blast",
    "item.pixelmon.tr_gen8.65": "TR65: Energy Ball",
    "item.pixelmon.tr_gen8.66": "TR66: Brave Bird",
    "item.pixelmon.tr_gen8.67": "TR67: Earth Power",
    "item.pixelmon.tr_gen8.68": "TR68: Nasty Plot",
    "item.pixelmon.tr_gen8.69": "TR69: Zen Headbutt",
    "item.pixelmon.tr_gen8.70": "TR70: Flash Cannon",
    "item.pixelmon.tr_gen8.71": "TR71: Leaf Storm",
    "item.pixelmon.tr_gen8.72": "TR72: Power Whip",
    "item.pixelmon.tr_gen8.73": "TR73: Gunk Shot",
    "item.pixelmon.tr_gen8.74": "TR74: Iron Head",
    "item.pixelmon.tr_gen8.75": "TR75: Stone Edge",
    "item.pixelmon.tr_gen8.76": "TR76: Stealth Rock",
    "item.pixelmon.tr_gen8.77": "TR77: Grass Knot",
    "item.pixelmon.tr_gen8.78": "TR78: Sludge Wave",
    "item.pixelmon.tr_gen8.79": "TR79: Heavy Slam",
    "item.pixelmon.tr_gen8.80": "TR80: Electro Ball",
    "item.pixelmon.tr_gen8.81": "TR81: Foul Play",
    "item.pixelmon.tr_gen8.82": "TR82: Stored Power",
    "item.pixelmon.tr_gen8.83": "TR83: Ally Switch",
    "item.pixelmon.tr_gen8.84": "TR84: Scald",
    "item.pixelmon.tr_gen8.85": "TR85: Work Up",
    "item.pixelmon.tr_gen8.86": "TR86: Wild Charge",
    "item.pixelmon.tr_gen8.87": "TR87: Drill Run",
    "item.pixelmon.tr_gen8.88": "TR88: Heat Crash",
    "item.pixelmon.tr_gen8.89": "TR89: Hurricane",
    "item.pixelmon.tr_gen8.90": "TR90: Play Rough",
    "item.pixelmon.tr_gen8.91": "TR91: Venom Drench",
    "item.pixelmon.tr_gen8.92": "TR92: Dazzling Gleam",
    "item.pixelmon.tr_gen8.93": "TR93: Darkest Lariat",
    "item.pixelmon.tr_gen8.94": "TR94: High Horsepower",
    "item.pixelmon.tr_gen8.95": "TR95: Throat Chop",
    "item.pixelmon.tr_gen8.96": "TR96: Pollen Puff",
    "item.pixelmon.tr_gen8.97": "TR97: Psychic Fangs",
    "item.pixelmon.tr_gen8.98": "TR98: Liquidation",
    "item.pixelmon.tr_gen8.99": "TR99: Body Press",

    "item.pixelmon.tm_gen7_blank": "Blank Alola TM",
    "item.pixelmon.tm_gen7_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen6_blank": "Blank Kalos TM",
    "item.pixelmon.tm_gen6_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen5_blank": "Blank Unova TM",
    "item.pixelmon.tm_gen5_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen4_blank": "Blank Sinnoh TM",
    "item.pixelmon.tm_gen4_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen3_blank": "Blank Hoenn TM",
    "item.pixelmon.tm_gen3_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen2_blank": "Blank Johto TM",
    "item.pixelmon.tm_gen2_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen1_blank": "Blank Kanto TM",
    "item.pixelmon.tm_gen1_blank.tooltip": "Put this on your Pokémon to start imprinting a move.",
    "item.pixelmon.tm_gen7.1": "Alolan TM1: Work Up",
    "item.pixelmon.tm_gen7.2": "Alolan TM2: Dragon Claw",
    "item.pixelmon.tm_gen7.3": "Alolan TM3: Psyshock",
    "item.pixelmon.tm_gen7.4": "Alolan TM4: Calm Mind",
    "item.pixelmon.tm_gen7.5": "Alolan TM5: Roar",
    "item.pixelmon.tm_gen7.6": "Alolan TM6: Toxic",
    "item.pixelmon.tm_gen7.7": "Alolan TM7: Hail",
    "item.pixelmon.tm_gen7.8": "Alolan TM8: Bulk Up",
    "item.pixelmon.tm_gen7.9": "Alolan TM9: Venoshock",
    "item.pixelmon.tm_gen7.10": "Alolan TM10: Hidden Power",
    "item.pixelmon.tm_gen7.11": "Alolan TM11: Sunny Day",
    "item.pixelmon.tm_gen7.12": "Alolan TM12: Taunt",
    "item.pixelmon.tm_gen7.13": "Alolan TM13: Ice Beam",
    "item.pixelmon.tm_gen7.14": "Alolan TM14: Blizzard",
    "item.pixelmon.tm_gen7.15": "Alolan TM15: Hyper Beam",
    "item.pixelmon.tm_gen7.16": "Alolan TM16: Light Screen",
    "item.pixelmon.tm_gen7.17": "Alolan TM17: Protect",
    "item.pixelmon.tm_gen7.18": "Alolan TM18: Rain Dance",
    "item.pixelmon.tm_gen7.19": "Alolan TM19: Roost",
    "item.pixelmon.tm_gen7.20": "Alolan TM20: Safeguard",
    "item.pixelmon.tm_gen7.21": "Alolan TM21: Frustration",
    "item.pixelmon.tm_gen7.22": "Alolan TM22: Solar Beam",
    "item.pixelmon.tm_gen7.23": "Alolan TM23: Smack Down",
    "item.pixelmon.tm_gen7.24": "Alolan TM24: Thunderbolt",
    "item.pixelmon.tm_gen7.25": "Alolan TM25: Thunder",
    "item.pixelmon.tm_gen7.26": "Alolan TM26: Earthquake",
    "item.pixelmon.tm_gen7.27": "Alolan TM27: Return",
    "item.pixelmon.tm_gen7.28": "Alolan TM28: Leech Life",
    "item.pixelmon.tm_gen7.29": "Alolan TM29: Psychic",
    "item.pixelmon.tm_gen7.30": "Alolan TM30: Shadow Ball",
    "item.pixelmon.tm_gen7.31": "Alolan TM31: Brick Break",
    "item.pixelmon.tm_gen7.32": "Alolan TM32: Double Team",
    "item.pixelmon.tm_gen7.33": "Alolan TM33: Reflect",
    "item.pixelmon.tm_gen7.34": "Alolan TM34: Sludge Wave",
    "item.pixelmon.tm_gen7.35": "Alolan TM35: Flamethrower",
    "item.pixelmon.tm_gen7.36": "Alolan TM36: Sludge Bomb",
    "item.pixelmon.tm_gen7.37": "Alolan TM37: Sandstorm",
    "item.pixelmon.tm_gen7.38": "Alolan TM38: Fire Blast",
    "item.pixelmon.tm_gen7.39": "Alolan TM39: Rock Tomb",
    "item.pixelmon.tm_gen7.40": "Alolan TM40: Aerial Ace",
    "item.pixelmon.tm_gen7.41": "Alolan TM41: Torment",
    "item.pixelmon.tm_gen7.42": "Alolan TM42: Facade",
    "item.pixelmon.tm_gen7.43": "Alolan TM43: Flame Charge",
    "item.pixelmon.tm_gen7.44": "Alolan TM44: Rest",
    "item.pixelmon.tm_gen7.45": "Alolan TM45: Attract",
    "item.pixelmon.tm_gen7.46": "Alolan TM46: Thief",
    "item.pixelmon.tm_gen7.47": "Alolan TM47: Low Sweep",
    "item.pixelmon.tm_gen7.48": "Alolan TM48: Round",
    "item.pixelmon.tm_gen7.49": "Alolan TM49: Echoed Voice",
    "item.pixelmon.tm_gen7.50": "Alolan TM50: Overheat",
    "item.pixelmon.tm_gen7.51": "Alolan TM51: Steel Wing",
    "item.pixelmon.tm_gen7.52": "Alolan TM52: Focus Blast",
    "item.pixelmon.tm_gen7.53": "Alolan TM53: Energy Ball",
    "item.pixelmon.tm_gen7.54": "Alolan TM54: False Swipe",
    "item.pixelmon.tm_gen7.55": "Alolan TM55: Scald",
    "item.pixelmon.tm_gen7.56": "Alolan TM56: Fling",
    "item.pixelmon.tm_gen7.57": "Alolan TM57: Charge Beam",
    "item.pixelmon.tm_gen7.58": "Alolan TM58: Sky Drop",
    "item.pixelmon.tm_gen7.59": "Alolan TM59: Brutal Swing",
    "item.pixelmon.tm_gen7.60": "Alolan TM60: Quash",
    "item.pixelmon.tm_gen7.61": "Alolan TM61: Will-O-Wisp",
    "item.pixelmon.tm_gen7.62": "Alolan TM62: Acrobatics",
    "item.pixelmon.tm_gen7.63": "Alolan TM63: Embargo",
    "item.pixelmon.tm_gen7.64": "Alolan TM64: Explosion",
    "item.pixelmon.tm_gen7.65": "Alolan TM65: Shadow Claw",
    "item.pixelmon.tm_gen7.66": "Alolan TM66: Payback",
    "item.pixelmon.tm_gen7.67": "Alolan TM67: Smart Strike",
    "item.pixelmon.tm_gen7.68": "Alolan TM68: Giga Impact",
    "item.pixelmon.tm_gen7.69": "Alolan TM69: Rock Polish",
    "item.pixelmon.tm_gen7.70": "Alolan TM70: Aurora Veil",
    "item.pixelmon.tm_gen7.71": "Alolan TM71: Stone Edge",
    "item.pixelmon.tm_gen7.72": "Alolan TM72: Volt Switch",
    "item.pixelmon.tm_gen7.73": "Alolan TM73: Thunder Wave",
    "item.pixelmon.tm_gen7.74": "Alolan TM74: Gyro Ball",
    "item.pixelmon.tm_gen7.75": "Alolan TM75: Swords Dance",
    "item.pixelmon.tm_gen7.76": "Alolan TM76: Fly",
    "item.pixelmon.tm_gen7.77": "Alolan TM77: Psych Up",
    "item.pixelmon.tm_gen7.78": "Alolan TM78: Bulldoze",
    "item.pixelmon.tm_gen7.79": "Alolan TM79: Frost Breath",
    "item.pixelmon.tm_gen7.80": "Alolan TM80: Rock Slide",
    "item.pixelmon.tm_gen7.81": "Alolan TM81: X-Scissor",
    "item.pixelmon.tm_gen7.82": "Alolan TM82: Dragon Tail",
    "item.pixelmon.tm_gen7.83": "Alolan TM83: Infestation",
    "item.pixelmon.tm_gen7.84": "Alolan TM84: Poison Jab",
    "item.pixelmon.tm_gen7.85": "Alolan TM85: Dream Eater",
    "item.pixelmon.tm_gen7.86": "Alolan TM86: Grass Knot",
    "item.pixelmon.tm_gen7.87": "Alolan TM87: Swagger",
    "item.pixelmon.tm_gen7.88": "Alolan TM88: Sleep Talk",
    "item.pixelmon.tm_gen7.89": "Alolan TM89: U-turn",
    "item.pixelmon.tm_gen7.90": "Alolan TM90: Substitute",
    "item.pixelmon.tm_gen7.91": "Alolan TM91: Flash Cannon",
    "item.pixelmon.tm_gen7.92": "Alolan TM92: Trick Room",
    "item.pixelmon.tm_gen7.93": "Alolan TM93: Wild Charge",
    "item.pixelmon.tm_gen7.94": "Alolan TM94: Surf",
    "item.pixelmon.tm_gen7.95": "Alolan TM95: Snarl",
    "item.pixelmon.tm_gen7.96": "Alolan TM96: Nature Power",
    "item.pixelmon.tm_gen7.97": "Alolan TM97: Dark Pulse",
    "item.pixelmon.tm_gen7.98": "Alolan TM98: Waterfall",
    "item.pixelmon.tm_gen7.99": "Alolan TM99: Dazzling Gleam",
    "item.pixelmon.tm_gen7.100": "Alolan TM100: Confide",
    "item.pixelmon.tm_gen6.1": "Kalos TM1: Hone Claws",
    "item.pixelmon.tm_gen6.2": "Kalos TM2: Dragon Claw",
    "item.pixelmon.tm_gen6.3": "Kalos TM3: Psyshock",
    "item.pixelmon.tm_gen6.4": "Kalos TM4: Calm Mind",
    "item.pixelmon.tm_gen6.5": "Kalos TM5: Roar",
    "item.pixelmon.tm_gen6.6": "Kalos TM6: Toxic",
    "item.pixelmon.tm_gen6.7": "Kalos TM7: Hail",
    "item.pixelmon.tm_gen6.8": "Kalos TM8: Bulk Up",
    "item.pixelmon.tm_gen6.9": "Kalos TM9: Venoshock",
    "item.pixelmon.tm_gen6.10": "Kalos TM10: Hidden Power",
    "item.pixelmon.tm_gen6.11": "Kalos TM11: Sunny Day",
    "item.pixelmon.tm_gen6.12": "Kalos TM12: Taunt",
    "item.pixelmon.tm_gen6.13": "Kalos TM13: Ice Beam",
    "item.pixelmon.tm_gen6.14": "Kalos TM14: Blizzard",
    "item.pixelmon.tm_gen6.15": "Kalos TM15: Hyper Beam",
    "item.pixelmon.tm_gen6.16": "Kalos TM16: Light Screen",
    "item.pixelmon.tm_gen6.17": "Kalos TM17: Protect",
    "item.pixelmon.tm_gen6.18": "Kalos TM18: Rain Dance",
    "item.pixelmon.tm_gen6.19": "Kalos TM19: Roost",
    "item.pixelmon.tm_gen6.20": "Kalos TM20: Safeguard",
    "item.pixelmon.tm_gen6.21": "Kalos TM21: Frustration",
    "item.pixelmon.tm_gen6.22": "Kalos TM22: Solar Beam",
    "item.pixelmon.tm_gen6.23": "Kalos TM23: Smack Down",
    "item.pixelmon.tm_gen6.24": "Kalos TM24: Thunderbolt",
    "item.pixelmon.tm_gen6.25": "Kalos TM25: Thunder",
    "item.pixelmon.tm_gen6.26": "Kalos TM26: Earthquake",
    "item.pixelmon.tm_gen6.27": "Kalos TM27: Return",
    "item.pixelmon.tm_gen6.28": "Kalos TM28: Dig",
    "item.pixelmon.tm_gen6.29": "Kalos TM29: Psychic",
    "item.pixelmon.tm_gen6.30": "Kalos TM30: Shadow Ball",
    "item.pixelmon.tm_gen6.31": "Kalos TM31: Brick Break",
    "item.pixelmon.tm_gen6.32": "Kalos TM32: Double Team",
    "item.pixelmon.tm_gen6.33": "Kalos TM33: Reflect",
    "item.pixelmon.tm_gen6.34": "Kalos TM34: Sludge Wave",
    "item.pixelmon.tm_gen6.35": "Kalos TM35: Flamethrower",
    "item.pixelmon.tm_gen6.36": "Kalos TM36: Sludge Bomb",
    "item.pixelmon.tm_gen6.37": "Kalos TM37: Sandstorm",
    "item.pixelmon.tm_gen6.38": "Kalos TM38: Fire Blast",
    "item.pixelmon.tm_gen6.39": "Kalos TM39: Rock Tomb",
    "item.pixelmon.tm_gen6.40": "Kalos TM40: Aerial Ace",
    "item.pixelmon.tm_gen6.41": "Kalos TM41: Torment",
    "item.pixelmon.tm_gen6.42": "Kalos TM42: Facade",
    "item.pixelmon.tm_gen6.43": "Kalos TM43: Flame Charge",
    "item.pixelmon.tm_gen6.44": "Kalos TM44: Rest",
    "item.pixelmon.tm_gen6.45": "Kalos TM45: Attract",
    "item.pixelmon.tm_gen6.46": "Kalos TM46: Thief",
    "item.pixelmon.tm_gen6.47": "Kalos TM47: Low Sweep",
    "item.pixelmon.tm_gen6.48": "Kalos TM48: Round",
    "item.pixelmon.tm_gen6.49": "Kalos TM49: Echoed Voice",
    "item.pixelmon.tm_gen6.50": "Kalos TM50: Overheat",
    "item.pixelmon.tm_gen6.51": "Kalos TM51: Steel Wing",
    "item.pixelmon.tm_gen6.52": "Kalos TM52: Focus Blast",
    "item.pixelmon.tm_gen6.53": "Kalos TM53: Energy Ball",
    "item.pixelmon.tm_gen6.54": "Kalos TM54: False Swipe",
    "item.pixelmon.tm_gen6.55": "Kalos TM55: Scald",
    "item.pixelmon.tm_gen6.56": "Kalos TM56: Fling",
    "item.pixelmon.tm_gen6.57": "Kalos TM57: Charge Beam",
    "item.pixelmon.tm_gen6.58": "Kalos TM58: Sky Drop",
    "item.pixelmon.tm_gen6.59": "Kalos TM59: Incinerate",
    "item.pixelmon.tm_gen6.60": "Kalos TM60: Quash",
    "item.pixelmon.tm_gen6.61": "Kalos TM61: Will-O-Wisp",
    "item.pixelmon.tm_gen6.62": "Kalos TM62: Acrobatics",
    "item.pixelmon.tm_gen6.63": "Kalos TM63: Embargo",
    "item.pixelmon.tm_gen6.64": "Kalos TM64: Explosion",
    "item.pixelmon.tm_gen6.65": "Kalos TM65: Shadow Claw",
    "item.pixelmon.tm_gen6.66": "Kalos TM66: Payback",
    "item.pixelmon.tm_gen6.67": "Kalos TM67: Retaliate",
    "item.pixelmon.tm_gen6.68": "Kalos TM68: Giga Impact",
    "item.pixelmon.tm_gen6.69": "Kalos TM69: Rock Polish",
    "item.pixelmon.tm_gen6.70": "Kalos TM70: Flash",
    "item.pixelmon.tm_gen6.71": "Kalos TM71: Stone Edge",
    "item.pixelmon.tm_gen6.72": "Kalos TM72: Volt Switch",
    "item.pixelmon.tm_gen6.73": "Kalos TM73: Thunder Wave",
    "item.pixelmon.tm_gen6.74": "Kalos TM74: Gyro Ball",
    "item.pixelmon.tm_gen6.75": "Kalos TM75: Swords Dance",
    "item.pixelmon.tm_gen6.76": "Kalos TM76: Struggle Bug",
    "item.pixelmon.tm_gen6.77": "Kalos TM77: Psych Up",
    "item.pixelmon.tm_gen6.78": "Kalos TM78: Bulldoze",
    "item.pixelmon.tm_gen6.79": "Kalos TM79: Frost Breath",
    "item.pixelmon.tm_gen6.80": "Kalos TM80: Rock Slide",
    "item.pixelmon.tm_gen6.81": "Kalos TM81: X-Scissor",
    "item.pixelmon.tm_gen6.82": "Kalos TM82: Dragon Tail",
    "item.pixelmon.tm_gen6.83": "Kalos TM83: Infestation",
    "item.pixelmon.tm_gen6.84": "Kalos TM84: Poison Jab",
    "item.pixelmon.tm_gen6.85": "Kalos TM85: Dream Eater",
    "item.pixelmon.tm_gen6.86": "Kalos TM86: Grass Knot",
    "item.pixelmon.tm_gen6.87": "Kalos TM87: Swagger",
    "item.pixelmon.tm_gen6.88": "Kalos TM88: Sleep Talk",
    "item.pixelmon.tm_gen6.89": "Kalos TM89: U-turn",
    "item.pixelmon.tm_gen6.90": "Kalos TM90: Substitute",
    "item.pixelmon.tm_gen6.91": "Kalos TM91: Flash Cannon",
    "item.pixelmon.tm_gen6.92": "Kalos TM92: Trick Room",
    "item.pixelmon.tm_gen6.93": "Kalos TM93: Wild Charge",
    "item.pixelmon.tm_gen6.94": "Kalos TM94: Rock Smash",
    "item.pixelmon.tm_gen6.95": "Kalos TM95: Snarl",
    "item.pixelmon.tm_gen6.96": "Kalos TM96: Nature Power",
    "item.pixelmon.tm_gen6.97": "Kalos TM97: Dark Pulse",
    "item.pixelmon.tm_gen6.98": "Kalos TM98: Power-Up Punch",
    "item.pixelmon.tm_gen6.99": "Kalos TM99: Dazzling Gleam",
    "item.pixelmon.tm_gen6.100": "Kalos TM100: Confide",
    "item.pixelmon.tm_gen6.101": "Kalos TM101: Secret Power",
    "item.pixelmon.tm_gen5.1": "Unova TM1: Hone Claws",
    "item.pixelmon.tm_gen5.2": "Unova TM2: Dragon Claw",
    "item.pixelmon.tm_gen5.3": "Unova TM3: Psyshock",
    "item.pixelmon.tm_gen5.4": "Unova TM4: Calm Mind",
    "item.pixelmon.tm_gen5.5": "Unova TM5: Roar",
    "item.pixelmon.tm_gen5.6": "Unova TM6: Toxic",
    "item.pixelmon.tm_gen5.7": "Unova TM7: Hail",
    "item.pixelmon.tm_gen5.8": "Unova TM8: Bulk Up",
    "item.pixelmon.tm_gen5.9": "Unova TM9: Venoshock",
    "item.pixelmon.tm_gen5.10": "Unova TM10: Hidden Power",
    "item.pixelmon.tm_gen5.11": "Unova TM11: Sunny Day",
    "item.pixelmon.tm_gen5.12": "Unova TM12: Taunt",
    "item.pixelmon.tm_gen5.13": "Unova TM13: Ice Beam",
    "item.pixelmon.tm_gen5.14": "Unova TM14: Blizzard",
    "item.pixelmon.tm_gen5.15": "Unova TM15: Hyper Beam",
    "item.pixelmon.tm_gen5.16": "Unova TM16: Light Screen",
    "item.pixelmon.tm_gen5.17": "Unova TM17: Protect",
    "item.pixelmon.tm_gen5.18": "Unova TM18: Rain Dance",
    "item.pixelmon.tm_gen5.19": "Unova TM19: Telekinesis",
    "item.pixelmon.tm_gen5.20": "Unova TM20: Safeguard",
    "item.pixelmon.tm_gen5.21": "Unova TM21: Frustration",
    "item.pixelmon.tm_gen5.22": "Unova TM22: Solar Beam",
    "item.pixelmon.tm_gen5.23": "Unova TM23: Smack Down",
    "item.pixelmon.tm_gen5.24": "Unova TM24: Thunderbolt",
    "item.pixelmon.tm_gen5.25": "Unova TM25: Thunder",
    "item.pixelmon.tm_gen5.26": "Unova TM26: Earthquake",
    "item.pixelmon.tm_gen5.27": "Unova TM27: Return",
    "item.pixelmon.tm_gen5.28": "Unova TM28: Dig",
    "item.pixelmon.tm_gen5.29": "Unova TM29: Psychic",
    "item.pixelmon.tm_gen5.30": "Unova TM30: Shadow Ball",
    "item.pixelmon.tm_gen5.31": "Unova TM31: Brick Break",
    "item.pixelmon.tm_gen5.32": "Unova TM32: Double Team",
    "item.pixelmon.tm_gen5.33": "Unova TM33: Reflect",
    "item.pixelmon.tm_gen5.34": "Unova TM34: Sludge Wave",
    "item.pixelmon.tm_gen5.35": "Unova TM35: Flamethrower",
    "item.pixelmon.tm_gen5.36": "Unova TM36: Sludge Bomb",
    "item.pixelmon.tm_gen5.37": "Unova TM37: Sandstorm",
    "item.pixelmon.tm_gen5.38": "Unova TM38: Fire Blast",
    "item.pixelmon.tm_gen5.39": "Unova TM39: Rock Tomb",
    "item.pixelmon.tm_gen5.40": "Unova TM40: Aerial Ace",
    "item.pixelmon.tm_gen5.41": "Unova TM41: Torment",
    "item.pixelmon.tm_gen5.42": "Unova TM42: Facade",
    "item.pixelmon.tm_gen5.43": "Unova TM43: Flame Charge",
    "item.pixelmon.tm_gen5.44": "Unova TM44: Rest",
    "item.pixelmon.tm_gen5.45": "Unova TM45: Attract",
    "item.pixelmon.tm_gen5.46": "Unova TM46: Thief",
    "item.pixelmon.tm_gen5.47": "Unova TM47: Low Sweep",
    "item.pixelmon.tm_gen5.48": "Unova TM48: Round",
    "item.pixelmon.tm_gen5.49": "Unova TM49: Echoed Voice",
    "item.pixelmon.tm_gen5.50": "Unova TM50: Overheat",
    "item.pixelmon.tm_gen5.51": "Unova TM51: Ally Switch",
    "item.pixelmon.tm_gen5.52": "Unova TM52: Focus Blast",
    "item.pixelmon.tm_gen5.53": "Unova TM53: Energy Ball",
    "item.pixelmon.tm_gen5.54": "Unova TM54: False Swipe",
    "item.pixelmon.tm_gen5.55": "Unova TM55: Scald",
    "item.pixelmon.tm_gen5.56": "Unova TM56: Fling",
    "item.pixelmon.tm_gen5.57": "Unova TM57: Charge Beam",
    "item.pixelmon.tm_gen5.58": "Unova TM58: Sky Drop",
    "item.pixelmon.tm_gen5.59": "Unova TM59: Incinerate",
    "item.pixelmon.tm_gen5.60": "Unova TM60: Quash",
    "item.pixelmon.tm_gen5.61": "Unova TM61: Will-O-Wisp",
    "item.pixelmon.tm_gen5.62": "Unova TM62: Acrobatics",
    "item.pixelmon.tm_gen5.63": "Unova TM63: Embargo",
    "item.pixelmon.tm_gen5.64": "Unova TM64: Explosion",
    "item.pixelmon.tm_gen5.65": "Unova TM65: Shadow Claw",
    "item.pixelmon.tm_gen5.66": "Unova TM66: Payback",
    "item.pixelmon.tm_gen5.67": "Unova TM67: Retaliate",
    "item.pixelmon.tm_gen5.68": "Unova TM68: Giga Impact",
    "item.pixelmon.tm_gen5.69": "Unova TM69: Rock Polish",
    "item.pixelmon.tm_gen5.70": "Unova TM70: Flash",
    "item.pixelmon.tm_gen5.71": "Unova TM71: Stone Edge",
    "item.pixelmon.tm_gen5.72": "Unova TM72: Volt Switch",
    "item.pixelmon.tm_gen5.73": "Unova TM73: Thunder Wave",
    "item.pixelmon.tm_gen5.74": "Unova TM74: Gyro Ball",
    "item.pixelmon.tm_gen5.75": "Unova TM75: Swords Dance",
    "item.pixelmon.tm_gen5.76": "Unova TM76: Struggle Bug",
    "item.pixelmon.tm_gen5.77": "Unova TM77: Psych Up",
    "item.pixelmon.tm_gen5.78": "Unova TM78: Bulldoze",
    "item.pixelmon.tm_gen5.79": "Unova TM79: Frost Breath",
    "item.pixelmon.tm_gen5.80": "Unova TM80: Rock Slide",
    "item.pixelmon.tm_gen5.81": "Unova TM81: X-Scissor",
    "item.pixelmon.tm_gen5.82": "Unova TM82: Dragon Tail",
    "item.pixelmon.tm_gen5.83": "Unova TM83: Work Up",
    "item.pixelmon.tm_gen5.84": "Unova TM84: Poison Jab",
    "item.pixelmon.tm_gen5.85": "Unova TM85: Dream Eater",
    "item.pixelmon.tm_gen5.86": "Unova TM86: Grass Knot",
    "item.pixelmon.tm_gen5.87": "Unova TM87: Swagger",
    "item.pixelmon.tm_gen5.88": "Unova TM88: Pluck",
    "item.pixelmon.tm_gen5.89": "Unova TM89: U-turn",
    "item.pixelmon.tm_gen5.90": "Unova TM90: Substitute",
    "item.pixelmon.tm_gen5.91": "Unova TM91: Flash Cannon",
    "item.pixelmon.tm_gen5.92": "Unova TM92: Trick Room",
    "item.pixelmon.tm_gen5.93": "Unova TM93: Wild Charge",
    "item.pixelmon.tm_gen5.94": "Unova TM94: Rock Smash",
    "item.pixelmon.tm_gen5.95": "Unova TM95: Snarl",
    "item.pixelmon.tm_gen4.1": "Sinnoh TM1: Focus Punch",
    "item.pixelmon.tm_gen4.2": "Sinnoh TM2: Dragon Claw",
    "item.pixelmon.tm_gen4.3": "Sinnoh TM3: Water Pulse",
    "item.pixelmon.tm_gen4.4": "Sinnoh TM4: Calm Mind",
    "item.pixelmon.tm_gen4.5": "Sinnoh TM5: Roar",
    "item.pixelmon.tm_gen4.6": "Sinnoh TM6: Toxic",
    "item.pixelmon.tm_gen4.7": "Sinnoh TM7: Hail",
    "item.pixelmon.tm_gen4.8": "Sinnoh TM8: Bulk Up",
    "item.pixelmon.tm_gen4.9": "Sinnoh TM9: Bullet Seed",
    "item.pixelmon.tm_gen4.10": "Sinnoh TM10: Hidden Power",
    "item.pixelmon.tm_gen4.11": "Sinnoh TM11: Sunny Day",
    "item.pixelmon.tm_gen4.12": "Sinnoh TM12: Taunt",
    "item.pixelmon.tm_gen4.13": "Sinnoh TM13: Ice Beam",
    "item.pixelmon.tm_gen4.14": "Sinnoh TM14: Blizzard",
    "item.pixelmon.tm_gen4.15": "Sinnoh TM15: Hyper Beam",
    "item.pixelmon.tm_gen4.16": "Sinnoh TM16: Light Screen",
    "item.pixelmon.tm_gen4.17": "Sinnoh TM17: Protect",
    "item.pixelmon.tm_gen4.18": "Sinnoh TM18: Rain Dance",
    "item.pixelmon.tm_gen4.19": "Sinnoh TM19: Giga Drain",
    "item.pixelmon.tm_gen4.20": "Sinnoh TM20: Safeguard",
    "item.pixelmon.tm_gen4.21": "Sinnoh TM21: Frustration",
    "item.pixelmon.tm_gen4.22": "Sinnoh TM22: Solar Beam",
    "item.pixelmon.tm_gen4.23": "Sinnoh TM23: Iron Tail",
    "item.pixelmon.tm_gen4.24": "Sinnoh TM24: Thunderbolt",
    "item.pixelmon.tm_gen4.25": "Sinnoh TM25: Thunder",
    "item.pixelmon.tm_gen4.26": "Sinnoh TM26: Earthquake",
    "item.pixelmon.tm_gen4.27": "Sinnoh TM27: Return",
    "item.pixelmon.tm_gen4.28": "Sinnoh TM28: Dig",
    "item.pixelmon.tm_gen4.29": "Sinnoh TM29: Psychic",
    "item.pixelmon.tm_gen4.30": "Sinnoh TM30: Shadow Ball",
    "item.pixelmon.tm_gen4.31": "Sinnoh TM31: Brick Break",
    "item.pixelmon.tm_gen4.32": "Sinnoh TM32: Double Team",
    "item.pixelmon.tm_gen4.33": "Sinnoh TM33: Reflect",
    "item.pixelmon.tm_gen4.34": "Sinnoh TM34: Shock Wave",
    "item.pixelmon.tm_gen4.35": "Sinnoh TM35: Flamethrower",
    "item.pixelmon.tm_gen4.36": "Sinnoh TM36: Sludge Bomb",
    "item.pixelmon.tm_gen4.37": "Sinnoh TM37: Sandstorm",
    "item.pixelmon.tm_gen4.38": "Sinnoh TM38: Fire Blast",
    "item.pixelmon.tm_gen4.39": "Sinnoh TM39: Rock Tomb",
    "item.pixelmon.tm_gen4.40": "Sinnoh TM40: Aerial Ace",
    "item.pixelmon.tm_gen4.41": "Sinnoh TM41: Torment",
    "item.pixelmon.tm_gen4.42": "Sinnoh TM42: Facade",
    "item.pixelmon.tm_gen4.43": "Sinnoh TM43: Secret Power",
    "item.pixelmon.tm_gen4.44": "Sinnoh TM44: Rest",
    "item.pixelmon.tm_gen4.45": "Sinnoh TM45: Attract",
    "item.pixelmon.tm_gen4.46": "Sinnoh TM46: Thief",
    "item.pixelmon.tm_gen4.47": "Sinnoh TM47: Steel Wing",
    "item.pixelmon.tm_gen4.48": "Sinnoh TM48: Skill Swap",
    "item.pixelmon.tm_gen4.49": "Sinnoh TM49: Snatch",
    "item.pixelmon.tm_gen4.50": "Sinnoh TM50: Overheat",
    "item.pixelmon.tm_gen4.51": "Sinnoh TM51: Roost",
    "item.pixelmon.tm_gen4.52": "Sinnoh TM52: Focus Blast",
    "item.pixelmon.tm_gen4.53": "Sinnoh TM53: Energy Ball",
    "item.pixelmon.tm_gen4.54": "Sinnoh TM54: False Swipe",
    "item.pixelmon.tm_gen4.55": "Sinnoh TM55: Brine",
    "item.pixelmon.tm_gen4.56": "Sinnoh TM56: Fling",
    "item.pixelmon.tm_gen4.57": "Sinnoh TM57: Charge Beam",
    "item.pixelmon.tm_gen4.58": "Sinnoh TM58: Endure",
    "item.pixelmon.tm_gen4.59": "Sinnoh TM59: Dragon Pulse",
    "item.pixelmon.tm_gen4.60": "Sinnoh TM60: Drain Punch",
    "item.pixelmon.tm_gen4.61": "Sinnoh TM61: Will-O-Wisp",
    "item.pixelmon.tm_gen4.62": "Sinnoh TM62: Silver Wind",
    "item.pixelmon.tm_gen4.63": "Sinnoh TM63: Embargo",
    "item.pixelmon.tm_gen4.64": "Sinnoh TM64: Explosion",
    "item.pixelmon.tm_gen4.65": "Sinnoh TM65: Shadow Claw",
    "item.pixelmon.tm_gen4.66": "Sinnoh TM66: Payback",
    "item.pixelmon.tm_gen4.67": "Sinnoh TM67: Recycle",
    "item.pixelmon.tm_gen4.68": "Sinnoh TM68: Giga Impact",
    "item.pixelmon.tm_gen4.69": "Sinnoh TM69: Rock Polish",
    "item.pixelmon.tm_gen4.70": "Sinnoh TM70: Flash",
    "item.pixelmon.tm_gen4.71": "Sinnoh TM71: Stone Edge",
    "item.pixelmon.tm_gen4.72": "Sinnoh TM72: Avalanche",
    "item.pixelmon.tm_gen4.73": "Sinnoh TM73: Thunder Wave",
    "item.pixelmon.tm_gen4.74": "Sinnoh TM74: Gyro Ball",
    "item.pixelmon.tm_gen4.75": "Sinnoh TM75: Swords Dance",
    "item.pixelmon.tm_gen4.76": "Sinnoh TM76: Stealth Rock",
    "item.pixelmon.tm_gen4.77": "Sinnoh TM77: Psych Up",
    "item.pixelmon.tm_gen4.78": "Sinnoh TM78: Captivate",
    "item.pixelmon.tm_gen4.79": "Sinnoh TM79: Dark Pulse",
    "item.pixelmon.tm_gen4.80": "Sinnoh TM80: Rock Slide",
    "item.pixelmon.tm_gen4.81": "Sinnoh TM81: X-Scissor",
    "item.pixelmon.tm_gen4.82": "Sinnoh TM82: Sleep Talk",
    "item.pixelmon.tm_gen4.83": "Sinnoh TM83: Natural Gift",
    "item.pixelmon.tm_gen4.84": "Sinnoh TM84: Poison Jab",
    "item.pixelmon.tm_gen4.85": "Sinnoh TM85: Dream Eater",
    "item.pixelmon.tm_gen4.86": "Sinnoh TM86: Grass Knot",
    "item.pixelmon.tm_gen4.87": "Sinnoh TM87: Swagger",
    "item.pixelmon.tm_gen4.88": "Sinnoh TM88: Pluck",
    "item.pixelmon.tm_gen4.89": "Sinnoh TM89: U-turn",
    "item.pixelmon.tm_gen4.90": "Sinnoh TM90: Substitute",
    "item.pixelmon.tm_gen4.91": "Sinnoh TM91: Flash Cannon",
    "item.pixelmon.tm_gen4.92": "Sinnoh TM92: Trick Room",
    "item.pixelmon.tm_gen3.1": "Hoenn TM1: Focus Punch",
    "item.pixelmon.tm_gen3.2": "Hoenn TM2: Dragon Claw",
    "item.pixelmon.tm_gen3.3": "Hoenn TM3: Water Pulse",
    "item.pixelmon.tm_gen3.4": "Hoenn TM4: Calm Mind",
    "item.pixelmon.tm_gen3.5": "Hoenn TM5: Roar",
    "item.pixelmon.tm_gen3.6": "Hoenn TM6: Toxic",
    "item.pixelmon.tm_gen3.7": "Hoenn TM7: Hail",
    "item.pixelmon.tm_gen3.8": "Hoenn TM8: Bulk Up",
    "item.pixelmon.tm_gen3.9": "Hoenn TM9: Bullet Seed",
    "item.pixelmon.tm_gen3.10": "Hoenn TM10: Hidden Power",
    "item.pixelmon.tm_gen3.11": "Hoenn TM11: Sunny Day",
    "item.pixelmon.tm_gen3.12": "Hoenn TM12: Taunt",
    "item.pixelmon.tm_gen3.13": "Hoenn TM13: Ice Beam",
    "item.pixelmon.tm_gen3.14": "Hoenn TM14: Blizzard",
    "item.pixelmon.tm_gen3.15": "Hoenn TM15: Hyper Beam",
    "item.pixelmon.tm_gen3.16": "Hoenn TM16: Light Screen",
    "item.pixelmon.tm_gen3.17": "Hoenn TM17: Protect",
    "item.pixelmon.tm_gen3.18": "Hoenn TM18: Rain Dance",
    "item.pixelmon.tm_gen3.19": "Hoenn TM19: Giga Drain",
    "item.pixelmon.tm_gen3.20": "Hoenn TM20: Safeguard",
    "item.pixelmon.tm_gen3.21": "Hoenn TM21: Frustration",
    "item.pixelmon.tm_gen3.22": "Hoenn TM22: Solar Beam",
    "item.pixelmon.tm_gen3.23": "Hoenn TM23: Iron Tail",
    "item.pixelmon.tm_gen3.24": "Hoenn TM24: Thunderbolt",
    "item.pixelmon.tm_gen3.25": "Hoenn TM25: Thunder",
    "item.pixelmon.tm_gen3.26": "Hoenn TM26: Earthquake",
    "item.pixelmon.tm_gen3.27": "Hoenn TM27: Return",
    "item.pixelmon.tm_gen3.28": "Hoenn TM28: Dig",
    "item.pixelmon.tm_gen3.29": "Hoenn TM29: Psychic",
    "item.pixelmon.tm_gen3.30": "Hoenn TM30: Shadow Ball",
    "item.pixelmon.tm_gen3.31": "Hoenn TM31: Brick Break",
    "item.pixelmon.tm_gen3.32": "Hoenn TM32: Double Team",
    "item.pixelmon.tm_gen3.33": "Hoenn TM33: Reflect",
    "item.pixelmon.tm_gen3.34": "Hoenn TM34: Shock Wave",
    "item.pixelmon.tm_gen3.35": "Hoenn TM35: Flamethrower",
    "item.pixelmon.tm_gen3.36": "Hoenn TM36: Sludge Bomb",
    "item.pixelmon.tm_gen3.37": "Hoenn TM37: Sandstorm",
    "item.pixelmon.tm_gen3.38": "Hoenn TM38: Fire Blast",
    "item.pixelmon.tm_gen3.39": "Hoenn TM39: Rock Tomb",
    "item.pixelmon.tm_gen3.40": "Hoenn TM40: Aerial Ace",
    "item.pixelmon.tm_gen3.41": "Hoenn TM41: Torment",
    "item.pixelmon.tm_gen3.42": "Hoenn TM42: Facade",
    "item.pixelmon.tm_gen3.43": "Hoenn TM43: Secret Power",
    "item.pixelmon.tm_gen3.44": "Hoenn TM44: Rest",
    "item.pixelmon.tm_gen3.45": "Hoenn TM45: Attract",
    "item.pixelmon.tm_gen3.46": "Hoenn TM46: Thief",
    "item.pixelmon.tm_gen3.47": "Hoenn TM47: Steel Wing",
    "item.pixelmon.tm_gen3.48": "Hoenn TM48: Skill Swap",
    "item.pixelmon.tm_gen3.49": "Hoenn TM49: Snatch",
    "item.pixelmon.tm_gen3.50": "Hoenn TM50: Overheat",
    "item.pixelmon.tm_gen2.1": "Johto TM1: Dynamic Punch",
    "item.pixelmon.tm_gen2.2": "Johto TM2: Headbutt",
    "item.pixelmon.tm_gen2.3": "Johto TM3: Curse",
    "item.pixelmon.tm_gen2.4": "Johto TM4: Rollout",
    "item.pixelmon.tm_gen2.5": "Johto TM5: Roar",
    "item.pixelmon.tm_gen2.6": "Johto TM6: Toxic",
    "item.pixelmon.tm_gen2.7": "Johto TM7: Zap Cannon",
    "item.pixelmon.tm_gen2.8": "Johto TM8: Rock Smash",
    "item.pixelmon.tm_gen2.9": "Johto TM9: Psych Up",
    "item.pixelmon.tm_gen2.10": "Johto TM10: Hidden Power",
    "item.pixelmon.tm_gen2.11": "Johto TM11: Sunny Day",
    "item.pixelmon.tm_gen2.12": "Johto TM12: Sweet Scent",
    "item.pixelmon.tm_gen2.13": "Johto TM13: Snore",
    "item.pixelmon.tm_gen2.14": "Johto TM14: Blizzard",
    "item.pixelmon.tm_gen2.15": "Johto TM15: Hyper Beam",
    "item.pixelmon.tm_gen2.16": "Johto TM16: Icy Wind",
    "item.pixelmon.tm_gen2.17": "Johto TM17: Protect",
    "item.pixelmon.tm_gen2.18": "Johto TM18: Rain Dance",
    "item.pixelmon.tm_gen2.19": "Johto TM19: Giga Drain",
    "item.pixelmon.tm_gen2.20": "Johto TM20: Endure",
    "item.pixelmon.tm_gen2.21": "Johto TM21: Frustration",
    "item.pixelmon.tm_gen2.22": "Johto TM22: Solar Beam",
    "item.pixelmon.tm_gen2.23": "Johto TM23: Iron Tail",
    "item.pixelmon.tm_gen2.24": "Johto TM24: Dragon Breath",
    "item.pixelmon.tm_gen2.25": "Johto TM25: Thunder",
    "item.pixelmon.tm_gen2.26": "Johto TM26: Earthquake",
    "item.pixelmon.tm_gen2.27": "Johto TM27: Return",
    "item.pixelmon.tm_gen2.28": "Johto TM28: Dig",
    "item.pixelmon.tm_gen2.29": "Johto TM29: Psychic",
    "item.pixelmon.tm_gen2.30": "Johto TM30: Shadow Ball",
    "item.pixelmon.tm_gen2.31": "Johto TM31: Mud-Slap",
    "item.pixelmon.tm_gen2.32": "Johto TM32: Double Team",
    "item.pixelmon.tm_gen2.33": "Johto TM33: Ice Punch",
    "item.pixelmon.tm_gen2.34": "Johto TM34: Swagger",
    "item.pixelmon.tm_gen2.35": "Johto TM35: Sleep Talk",
    "item.pixelmon.tm_gen2.36": "Johto TM36: Sludge Bomb",
    "item.pixelmon.tm_gen2.37": "Johto TM37: Sandstorm",
    "item.pixelmon.tm_gen2.38": "Johto TM38: Fire Blast",
    "item.pixelmon.tm_gen2.39": "Johto TM39: Swift",
    "item.pixelmon.tm_gen2.40": "Johto TM40: Defense Curl",
    "item.pixelmon.tm_gen2.41": "Johto TM41: Thunder Punch",
    "item.pixelmon.tm_gen2.42": "Johto TM42: Dream Eater",
    "item.pixelmon.tm_gen2.43": "Johto TM43: Detect",
    "item.pixelmon.tm_gen2.44": "Johto TM44: Rest",
    "item.pixelmon.tm_gen2.45": "Johto TM45: Attract",
    "item.pixelmon.tm_gen2.46": "Johto TM46: Thief",
    "item.pixelmon.tm_gen2.47": "Johto TM47: Steel Wing",
    "item.pixelmon.tm_gen2.48": "Johto TM48: Fire Punch",
    "item.pixelmon.tm_gen2.49": "Johto TM49: Fury Cutter",
    "item.pixelmon.tm_gen2.50": "Johto TM50: Nightmare",
    "item.pixelmon.tm_gen1.1": "Kanto TM1: Mega Punch",
    "item.pixelmon.tm_gen1.2": "Kanto TM2: Razor Wind",
    "item.pixelmon.tm_gen1.3": "Kanto TM3: Swords Dance",
    "item.pixelmon.tm_gen1.4": "Kanto TM4: Whirlwind",
    "item.pixelmon.tm_gen1.5": "Kanto TM5: Mega Kick",
    "item.pixelmon.tm_gen1.6": "Kanto TM6: Toxic",
    "item.pixelmon.tm_gen1.7": "Kanto TM7: Horn Drill",
    "item.pixelmon.tm_gen1.8": "Kanto TM8: Body Slam",
    "item.pixelmon.tm_gen1.9": "Kanto TM9: Take Down",
    "item.pixelmon.tm_gen1.10": "Kanto TM10: Double-Edge",
    "item.pixelmon.tm_gen1.11": "Kanto TM11: Bubble Beam",
    "item.pixelmon.tm_gen1.12": "Kanto TM12: Water Gun",
    "item.pixelmon.tm_gen1.13": "Kanto TM13: Ice Beam",
    "item.pixelmon.tm_gen1.14": "Kanto TM14: Blizzard",
    "item.pixelmon.tm_gen1.15": "Kanto TM15: Hyper Beam",
    "item.pixelmon.tm_gen1.16": "Kanto TM16: Pay Day",
    "item.pixelmon.tm_gen1.17": "Kanto TM17: Submission",
    "item.pixelmon.tm_gen1.18": "Kanto TM18: Counter",
    "item.pixelmon.tm_gen1.19": "Kanto TM19: Seismic Toss",
    "item.pixelmon.tm_gen1.20": "Kanto TM20: Rage",
    "item.pixelmon.tm_gen1.21": "Kanto TM21: Mega Drain",
    "item.pixelmon.tm_gen1.22": "Kanto TM22: Solar Beam",
    "item.pixelmon.tm_gen1.23": "Kanto TM23: Dragon Rage",
    "item.pixelmon.tm_gen1.24": "Kanto TM24: Thunderbolt",
    "item.pixelmon.tm_gen1.25": "Kanto TM25: Thunder",
    "item.pixelmon.tm_gen1.26": "Kanto TM26: Earthquake",
    "item.pixelmon.tm_gen1.27": "Kanto TM27: Fissure",
    "item.pixelmon.tm_gen1.28": "Kanto TM28: Dig",
    "item.pixelmon.tm_gen1.29": "Kanto TM29: Psychic",
    "item.pixelmon.tm_gen1.30": "Kanto TM30: Teleport",
    "item.pixelmon.tm_gen1.31": "Kanto TM31: Mimic",
    "item.pixelmon.tm_gen1.32": "Kanto TM32: Double Team",
    "item.pixelmon.tm_gen1.33": "Kanto TM33: Reflect",
    "item.pixelmon.tm_gen1.34": "Kanto TM34: Bide",
    "item.pixelmon.tm_gen1.35": "Kanto TM35: Metronome",
    "item.pixelmon.tm_gen1.36": "Kanto TM36: Self-Destruct",
    "item.pixelmon.tm_gen1.37": "Kanto TM37: Egg Bomb",
    "item.pixelmon.tm_gen1.38": "Kanto TM38: Fire Blast",
    "item.pixelmon.tm_gen1.39": "Kanto TM39: Swift",
    "item.pixelmon.tm_gen1.40": "Kanto TM40: Skull Bash",
    "item.pixelmon.tm_gen1.41": "Kanto TM41: Soft-Boiled",
    "item.pixelmon.tm_gen1.42": "Kanto TM42: Dream Eater",
    "item.pixelmon.tm_gen1.43": "Kanto TM43: Sky Attack",
    "item.pixelmon.tm_gen1.44": "Kanto TM44: Rest",
    "item.pixelmon.tm_gen1.45": "Kanto TM45: Thunder Wave",
    "item.pixelmon.tm_gen1.46": "Kanto TM46: Psywave",
    "item.pixelmon.tm_gen1.47": "Kanto TM47: Explosion",
    "item.pixelmon.tm_gen1.48": "Kanto TM48: Rock Slide",
    "item.pixelmon.tm_gen1.49": "Kanto TM49: Tri Attack",
    "item.pixelmon.tm_gen1.50": "Kanto TM50: Substitute",

    "item.pixelmon.hm1": "HM01: Cut",
    "item.pixelmon.hm2": "HM02: Fly",
    "item.pixelmon.hm3": "HM03: Surf",
    "item.pixelmon.hm4": "HM04: Strength",
    "item.pixelmon.hm5": "HM05: Defog",
    "item.pixelmon.hm6": "HM06: Rock Smash",
    "item.pixelmon.hm7": "HM07: Waterfall",
    "item.pixelmon.hm8": "HM08: Rock Climb",
    "item.pixelmon.hm9": "HM09: Whirlpool",
    "item.pixelmon.hm10": "HM10: Dive",

    "item.pixelmon.pokemail_air": "Air Mail",
    "item.pixelmon.pokemail_air_closed": "Sealed Air Mail",
    "item.pixelmon.pokemail_bloom": "Bloom Mail",
    "item.pixelmon.pokemail_bloom_closed": "Sealed Bloom Mail",
    "item.pixelmon.pokemail_brick": "Brick Mail",
    "item.pixelmon.pokemail_brick_closed": "Sealed Brick Mail",
    "item.pixelmon.pokemail_bridged": "BridgeMail D",
    "item.pixelmon.pokemail_bridged_closed": "Sealed BridgeMail D",
    "item.pixelmon.pokemail_bridgem": "BridgeMail M",
    "item.pixelmon.pokemail_bridgem_closed": "Sealed BridgeMail M",
    "item.pixelmon.pokemail_bridges": "BridgeMail S",
    "item.pixelmon.pokemail_bridges_closed": "Sealed BridgeMail S",
    "item.pixelmon.pokemail_bridget": "BridgeMail T",
    "item.pixelmon.pokemail_bridget_closed": "Sealed BridgeMail T",
    "item.pixelmon.pokemail_bridgev": "BridgeMail V",
    "item.pixelmon.pokemail_bridgev_closed": "Sealed BridgeMail V",
    "item.pixelmon.pokemail_bubble": "Bubble Mail",
    "item.pixelmon.pokemail_bubble_closed": "Sealed Bubble Mail",
    "item.pixelmon.pokemail_dream": "Dream Mail",
    "item.pixelmon.pokemail_dream_closed": "Sealed Dream Mail",
    "item.pixelmon.pokemail_fab": "Fab Mail",
    "item.pixelmon.pokemail_fab_closed": "Sealed Fab Mail",
    "item.pixelmon.pokemail_favored": "Favored Mail",
    "item.pixelmon.pokemail_favored_closed": "Sealed Favored Mail",
    "item.pixelmon.pokemail_flame": "Flame Mail",
    "item.pixelmon.pokemail_flame_closed": "Sealed Flame Mail",
    "item.pixelmon.pokemail_glitter": "Glitter Mail",
    "item.pixelmon.pokemail_glitter_closed": "Sealed Glitter Mail",
    "item.pixelmon.pokemail_grass": "Grass Mail",
    "item.pixelmon.pokemail_grass_closed": "Sealed Grass Mail",
    "item.pixelmon.pokemail_greet": "Greet Mail",
    "item.pixelmon.pokemail_greet_closed": "Sealed Greet Mail",
    "item.pixelmon.pokemail_harbor": "Harbor Mail",
    "item.pixelmon.pokemail_harbor_closed": "Sealed Harbor Mail",
    "item.pixelmon.pokemail_heart": "Heart Mail",
    "item.pixelmon.pokemail_heart_closed": "Sealed Heart Mail",
    "item.pixelmon.pokemail_inquiry": "Inquiry Mail",
    "item.pixelmon.pokemail_inquiry_closed": "Sealed Inquiry Mail",
    "item.pixelmon.pokemail_like": "Like Mail",
    "item.pixelmon.pokemail_like_closed": "Sealed Like Mail",
    "item.pixelmon.pokemail_mech": "Mech Mail",
    "item.pixelmon.pokemail_mech_closed": "Sealed Mech Mail",
    "item.pixelmon.pokemail_mosaic": "Mosaic Mail",
    "item.pixelmon.pokemail_mosaic_closed": "Sealed Mosaic Mail",
    "item.pixelmon.pokemail_orange": "Orange Mail",
    "item.pixelmon.pokemail_orange_closed": "Sealed Orange Mail",
    "item.pixelmon.pokemail_reply": "Reply Mail",
    "item.pixelmon.pokemail_reply_closed": "Sealed Reply Mail",
    "item.pixelmon.pokemail_retro": "Retro Mail",
    "item.pixelmon.pokemail_retro_closed": "Sealed Retro Mail",
    "item.pixelmon.pokemail_rsvp": "RSVP Mail",
    "item.pixelmon.pokemail_rsvp_closed": "Sealed RSVP Mail",
    "item.pixelmon.pokemail_shadown": "Shadow Mail",
    "item.pixelmon.pokemail_shadown_closed": "Sealed Shadow Mail",
    "item.pixelmon.pokemail_snow": "Snow Mail",
    "item.pixelmon.pokemail_snow_closed": "Sealed Snow Mail",
    "item.pixelmon.pokemail_space": "Space Mail",
    "item.pixelmon.pokemail_space_closed": "Sealed Space Mail",
    "item.pixelmon.pokemail_steel": "Steel Mail",
    "item.pixelmon.pokemail_steel_closed": "Sealed Steel Mail",
    "item.pixelmon.pokemail_thanks": "Thanks Mail",
    "item.pixelmon.pokemail_thanks_closed": "Sealed Thanks Mail",
    "item.pixelmon.pokemail_tropic": "Tropic Mail",
    "item.pixelmon.pokemail_tropic_closed": "Sealed Tropic Mail",
    "item.pixelmon.pokemail_tunnel": "Tunnel Mail",
    "item.pixelmon.pokemail_tunnel_closed": "Sealed Tunnel Mail",
    "item.pixelmon.pokemail_wave": "Wave Mail",
    "item.pixelmon.pokemail_wave_closed": "Sealed Wave Mail",
    "item.pixelmon.pokemail_wood": "Wood Mail",
    "item.pixelmon.pokemail_wood_closed": "Sealed Wood Mail",
    "item.pixelmon.mail.tooltip": "Contains a message written by the player, similar to a book and quill.",

    "item.pixelmon.pokeGift": "Poké Gift",
    "item.pixelmon.amethyst": "Amethyst",
    "item.pixelmon.ruby": "Ruby",
    "item.pixelmon.crystal": "Crystal",
    "item.pixelmon.sapphire": "Sapphire",
    "item.pixelmon.silicon": "Silicon",
    "item.pixelmon.ruby_hammer": "Ruby Hammer",
    "item.pixelmon.ruby_axe": "Ruby Axe",
    "item.pixelmon.ruby_hoe": "Ruby Hoe",
    "item.pixelmon.ruby_pickaxe": "Ruby Pickaxe",
    "item.pixelmon.ruby_shovel": "Ruby Shovel",
    "item.pixelmon.ruby_sword": "Ruby Sword",
    "item.pixelmon.sapphire_hammer": "Sapphire Hammer",
    "item.pixelmon.sapphire_axe": "Sapphire Axe",
    "item.pixelmon.sapphire_hoe": "Sapphire Hoe",
    "item.pixelmon.sapphire_pickaxe": "Sapphire Pickaxe",
    "item.pixelmon.sapphire_shovel": "Sapphire Shovel",
    "item.pixelmon.sapphire_sword": "Sapphire Sword",
    "item.pixelmon.crystal_hammer": "Crystal Hammer",
    "item.pixelmon.crystal_axe": "Crystal Axe",
    "item.pixelmon.crystal_hoe": "Crystal Hoe",
    "item.pixelmon.crystal_pickaxe": "Crystal Pickaxe",
    "item.pixelmon.crystal_shovel": "Crystal Shovel",
    "item.pixelmon.crystal_sword": "Crystal Sword",
    "item.pixelmon.amethyst_hammer": "Amethyst Hammer",
    "item.pixelmon.amethyst_axe": "Amethyst Axe",
    "item.pixelmon.amethyst_hoe": "Amethyst Hoe",
    "item.pixelmon.amethyst_pickaxe": "Amethyst Pickaxe",
    "item.pixelmon.amethyst_shovel": "Amethyst Shovel",
    "item.pixelmon.amethyst_sword": "Amethyst Sword",
    "item.pixelmon.fire_stone_hammer": "Fire Stone Hammer",
    "item.pixelmon.fire_stone_axe": "Fire Stone Axe",
    "item.pixelmon.fire_stone_hoe": "Fire Stone Hoe",
    "item.pixelmon.fire_stone_pickaxe": "Fire Stone Pickaxe",
    "item.pixelmon.fire_stone_shovel": "Fire Stone Shovel",
    "item.pixelmon.fire_stone_sword": "Fire Stone Sword",
    "item.pixelmon.water_stone_hammer": "Water Stone Hammer",
    "item.pixelmon.water_stone_axe": "Water Stone Axe",
    "item.pixelmon.water_stone_hoe": "Water Stone Hoe",
    "item.pixelmon.water_stone_pickaxe": "Water Stone Pickaxe",
    "item.pixelmon.water_stone_shovel": "Water Stone Shovel",
    "item.pixelmon.water_stone_sword": "Water Stone Sword",
    "item.pixelmon.leaf_stone_hammer": "Leaf Stone Hammer",
    "item.pixelmon.leaf_stone_axe": "Leaf Stone Axe",
    "item.pixelmon.leaf_stone_hoe": "Leaf Stone Hoe",
    "item.pixelmon.leaf_stone_pickaxe": "Leaf Stone Pickaxe",
    "item.pixelmon.leaf_stone_shovel": "Leaf Stone Shovel",
    "item.pixelmon.leaf_stone_sword": "Leaf Stone Sword",
    "item.pixelmon.thunder_stone_hammer": "Thunder Stone Hammer",
    "item.pixelmon.thunder_stone_axe": "Thunder Stone Axe",
    "item.pixelmon.thunder_stone_hoe": "Thunder Stone Hoe",
    "item.pixelmon.thunder_stone_pickaxe": "Thunder Stone Pickaxe",
    "item.pixelmon.thunder_stone_shovel": "Thunder Stone Shovel",
    "item.pixelmon.thunder_stone_sword": "Thunder Stone Sword",
    "item.pixelmon.sun_stone_hammer": "Sun Stone Hammer",
    "item.pixelmon.sun_stone_axe": "Sun Stone Axe",
    "item.pixelmon.sun_stone_hoe": "Sun Stone Hoe",
    "item.pixelmon.sun_stone_pickaxe": "Sun Stone Pickaxe",
    "item.pixelmon.sun_stone_shovel": "Sun Stone Shovel",
    "item.pixelmon.sun_stone_sword": "Sun Stone Sword",
    "item.pixelmon.moon_stone_hammer": "Moon Stone Hammer",
    "item.pixelmon.moon_stone_axe": "Moon Stone Axe",
    "item.pixelmon.moon_stone_hoe": "Moon Stone Hoe",
    "item.pixelmon.moon_stone_pickaxe": "Moon Stone Pickaxe",
    "item.pixelmon.moon_stone_shovel": "Moon Stone Shovel",
    "item.pixelmon.moon_stone_sword": "Moon Stone Sword",
    "item.pixelmon.dawn_stone_hammer": "Dawn Stone Hammer",
    "item.pixelmon.dawn_stone_axe": "Dawn Stone Axe",
    "item.pixelmon.dawn_stone_hoe": "Dawn Stone Hoe",
    "item.pixelmon.dawn_stone_pickaxe": "Dawn Stone Pickaxe",
    "item.pixelmon.dawn_stone_shovel": "Dawn Stone Shovel",
    "item.pixelmon.dawn_stone_sword": "Dawn Stone Sword",
    "item.pixelmon.dusk_stone_hammer": "Dusk Stone Hammer",
    "item.pixelmon.dusk_stone_axe": "Dusk Stone Axe",
    "item.pixelmon.dusk_stone_hoe": "Dusk Stone Hoe",
    "item.pixelmon.dusk_stone_pickaxe": "Dusk Stone Pickaxe",
    "item.pixelmon.dusk_stone_shovel": "Dusk Stone Shovel",
    "item.pixelmon.dusk_stone_sword": "Dusk Stone Sword",

    "item.pixelmon.ruby_helm": "Magma Helmet",
    "item.pixelmon.ruby_plate": "Magma Chestplate",
    "item.pixelmon.ruby_legs": "Magma Leggings",
    "item.pixelmon.ruby_boots": "Magma Boots",
    "item.pixelmon.sapphire_helm": "Aqua Helmet",
    "item.pixelmon.sapphire_plate": "Aqua Chestplate",
    "item.pixelmon.sapphire_legs": "Aqua Leggings",
    "item.pixelmon.sapphire_boots": "Aqua Boots",
    "item.pixelmon.plasma_helm": "Plasma Helmet",
    "item.pixelmon.plasma_plate": "Plasma Chestplate",
    "item.pixelmon.plasma_legs": "Plasma Leggings",
    "item.pixelmon.plasma_boots": "Plasma Boots",
    "item.pixelmon.galactic_helm": "Galactic Swag",
    "item.pixelmon.galactic_plate": "Galactic Chestplate",
    "item.pixelmon.galactic_legs": "Galactic Leggings",
    "item.pixelmon.galactic_boots": "Galactic Boots",
    "item.pixelmon.neo_plasma_helm": "Neo Plasma Helmet",
    "item.pixelmon.neo_plasma_plate": "Neo Plasma Chestplate",
    "item.pixelmon.neo_plasma_legs": "Neo Plasma Leggings",
    "item.pixelmon.neo_plasma_boots": "Neo Plasma Boots",
    "item.pixelmon.rocket_helm": "Rocket Helmet",
    "item.pixelmon.rocket_plate": "Rocket Chestplate",
    "item.pixelmon.rocket_legs": "Rocket Leggings",
    "item.pixelmon.rocket_boots": "Rocket Boots",
    "item.pixelmon.fire_stone_helm": "Fire Stone Helmet",
    "item.pixelmon.fire_stone_plate": "Fire Stone Chestplate",
    "item.pixelmon.fire_stone_legs": "Fire Stone Leggings",
    "item.pixelmon.fire_stone_boots": "Fire Stone Boots",
    "item.pixelmon.water_stone_helm": "Water Stone Helmet",
    "item.pixelmon.water_stone_plate": "Water Stone Chestplate",
    "item.pixelmon.water_stone_legs": "Water Stone Leggings",
    "item.pixelmon.water_stone_boots": "Water Stone Boots",
    "item.pixelmon.leaf_stone_helm": "Leaf Stone Helmet",
    "item.pixelmon.leaf_stone_plate": "Leaf Stone Chestplate",
    "item.pixelmon.leaf_stone_legs": "Leaf Stone Leggings",
    "item.pixelmon.leaf_stone_boots": "Leaf Stone Boots",
    "item.pixelmon.thunder_stone_helm": "Thunder Stone Helmet",
    "item.pixelmon.thunder_stone_plate": "Thunder Stone Chestplate",
    "item.pixelmon.thunder_stone_legs": "Thunder Stone Leggings",
    "item.pixelmon.thunder_stone_boots": "Thunder Stone Boots",
    "item.pixelmon.sun_stone_helm": "Sun Stone Helmet",
    "item.pixelmon.sun_stone_plate": "Sun Stone Chestplate",
    "item.pixelmon.sun_stone_legs": "Sun Stone Leggings",
    "item.pixelmon.sun_stone_boots": "Sun Stone Boots",
    "item.pixelmon.moon_stone_helm": "Moon Stone Helmet",
    "item.pixelmon.moon_stone_plate": "Moon Stone Chestplate",
    "item.pixelmon.moon_stone_legs": "Moon Stone Leggings",
    "item.pixelmon.moon_stone_boots": "Moon Stone Boots",
    "item.pixelmon.dawn_stone_helm": "Dawn Stone Helmet",
    "item.pixelmon.dawn_stone_plate": "Dawn Stone Chestplate",
    "item.pixelmon.dawn_stone_legs": "Dawn Stone Leggings",
    "item.pixelmon.dawn_stone_boots": "Dawn Stone Boots",
    "item.pixelmon.dusk_stone_helm": "Dusk Stone Helmet",
    "item.pixelmon.dusk_stone_plate": "Dusk Stone Chestplate",
    "item.pixelmon.dusk_stone_legs": "Dusk Stone Leggings",
    "item.pixelmon.dusk_stone_boots": "Dusk Stone Boots",

    "item.pixelmon.wooden_base": "Wooden Base",
    "item.pixelmon.silver_ingot": "Silver Ingot",
    "item.pixelmon.platinum_ingot": "Platinum Ingot",
    "item.pixelmon.silver_hammer": "Silver Hammer",
    "item.pixelmon.silver_axe": "Silver Axe",
    "item.pixelmon.silver_hoe": "Silver Hoe",
    "item.pixelmon.silver_pickaxe": "Silver Pickaxe",
    "item.pixelmon.silver_shovel": "Silver Shovel",
    "item.pixelmon.silver_sword": "Silver Sword",
    "item.pixelmon.platinum_hammer": "Platinum Hammer",
    "item.pixelmon.platinum_axe": "Platinum Axe",
    "item.pixelmon.platinum_hoe": "Platinum Hoe",
    "item.pixelmon.platinum_pickaxe": "Platinum Pickaxe",
    "item.pixelmon.platinum_shovel": "Platinum Shovel",
    "item.pixelmon.platinum_sword": "Platinum Sword",
    "item.pixelmon.silver_helmet": "Silver Helmet",
    "item.pixelmon.silver_chestplate": "Silver Chestplate",
    "item.pixelmon.silver_leggings": "Silver Leggings",
    "item.pixelmon.silver_boots": "Silver Boots",
    "item.pixelmon.platinum_helmet": "Platinum Helmet",
    "item.pixelmon.platinum_chestplate": "Platinum Chestplate",
    "item.pixelmon.platinum_leggings": "Platinum Leggings",
    "item.pixelmon.platinum_boots": "Platinum Boots",

    "block.pixelmon.picket_fence": "Picket Fence",
    "item.pixelmon.meteorite": "Meteorite",
    "item.pixelmon.meteorite.tooltip": "A meteorite that fell from space onto Mt. Moon long ago. It is very lumpy and hard.",
    "item.pixelmon.gracidea": "Gracidea",
    "item.pixelmon.gracidea.tooltip": "A flower sometimes bundled in bouquets to convey gratitude on special occasions like birthdays.",
    "item.pixelmon.reveal_glass": "Reveal Glass",
    "item.pixelmon.reveal_glass.tooltip": "A looking glass that reveals the truth. It's a mysterious glass that returns a Pokémon to its original shape.",
    "item.pixelmon.prison_bottle": "Prison Bottle",
    "item.pixelmon.prison_bottle.tooltip": "A bottle believed to have been used to seal away the power of a certain Pokémon long, long ago.",
    "item.pixelmon.burn_drive": "Burn Drive",
    "item.pixelmon.burn_drive.tooltip": "A cassette to be held by Genesect. It changes Genesect's Techno Blast move so it becomes Fire type.",
    "item.pixelmon.chill_drive": "Chill Drive",
    "item.pixelmon.chill_drive.tooltip": "A cassette to be held by Genesect. It changes Genesect's Techno Blast move so it becomes Ice type.",
    "item.pixelmon.douse_drive": "Douse Drive",
    "item.pixelmon.douse_drive.tooltip": "A cassette to be held by Genesect. It changes Genesect's Techno Blast move so it becomes Water type.",
    "item.pixelmon.shock_drive": "Shock Drive",
    "item.pixelmon.shock_drive.tooltip": "A cassette to be held by Genesect. It changes Genesect's Techno Blast move so it becomes Electric type.",
    "item.pixelmon.red_chain": "Red Chain",
    "item.pixelmon.red_chain.tooltip": "A mythical chain that is said to link and bind the Legendary Pokémon that created the Sinnoh region.",
    "item.pixelmon.red_chain_shard": "Red Chain Shard",
    "item.pixelmon.red_chain_shard.tooltip": "A fragment of a chain long forgotten.",
    "item.pixelmon.ruby_azelf": "Ruby of Willpower",
    "item.pixelmon.ruby_azelf.tooltip": "A flawless gem infused with the essence of Azelf.",
    "item.pixelmon.ruby_mesprit": "Ruby of Emotion",
    "item.pixelmon.ruby_mesprit.tooltip": "A flawless gem infused with the essence of Mesprit.",
    "item.pixelmon.ruby_uxie": "Ruby of Knowledge",
    "item.pixelmon.ruby_uxie.tooltip": "A flawless gem infused with the essence of Uxie.",

    "item.pixelmon.abomasite": "Abomasite",
    "item.pixelmon.abomasite.tooltip": "One of a variety of mysterious Mega Stones. Have Abomasnow hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.absolite": "Absolite",
    "item.pixelmon.absolite.tooltip": "One of a variety of mysterious Mega Stones. Have Absol hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.aerodactylite": "Aerodactylite",
    "item.pixelmon.aerodactylite.tooltip": "One of a variety of mysterious Mega Stones. Have Aerodactyl hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.aggronite": "Aggronite",
    "item.pixelmon.aggronite.tooltip": "One of a variety of mysterious Mega Stones. Have Aggron hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.alakazite": "Alakazite",
    "item.pixelmon.alakazite.tooltip": "One of a variety of mysterious Mega Stones. Have Alakazam hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.altarianite": "Altarianite",
    "item.pixelmon.altarianite.tooltip": "One of a variety of mysterious Mega Stones. Have Altaria hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.ampharosite": "Ampharosite",
    "item.pixelmon.ampharosite.tooltip": "One of a variety of mysterious Mega Stones. Have Ampharos hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.audinite": "Audinite",
    "item.pixelmon.audinite.tooltip": "One of a variety of mysterious Mega Stones. Have Audino hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.banettite": "Banettite",
    "item.pixelmon.banettite.tooltip": "One of a variety of mysterious Mega Stones. Have Banette hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.beedrillite": "Beedrillite",
    "item.pixelmon.beedrillite.tooltip": "One of a variety of mysterious Mega Stones. Have Beedrill hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.blastoisinite": "Blastoisinite",
    "item.pixelmon.blastoisinite.tooltip": "One of a variety of mysterious Mega Stones. Have Blastoise hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.blazikenite": "Blazikenite",
    "item.pixelmon.blazikenite.tooltip": "One of a variety of mysterious Mega Stones. Have Blaziken hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.cameruptite": "Cameruptite",
    "item.pixelmon.cameruptite.tooltip": "One of a variety of mysterious Mega Stones. Have Camerupt hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.charizardite_x": "Charizardite X",
    "item.pixelmon.charizardite_x.tooltip": "One of a variety of mysterious Mega Stones. Have Charizard hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.charizardite_y": "Charizardite Y",
    "item.pixelmon.charizardite_y.tooltip": "One of a variety of mysterious Mega Stones. Have Charizard hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.diancite": "Diancite",
    "item.pixelmon.diancite.tooltip": "One of a variety of mysterious Mega Stones. Have Diancie hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.galladite": "Galladite",
    "item.pixelmon.galladite.tooltip": "One of a variety of mysterious Mega Stones. Have Gallade hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.garchompite": "Garchompite",
    "item.pixelmon.garchompite.tooltip": "One of a variety of mysterious Mega Stones. Have Garchomp hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.gardevoirite": "Gardevoirite",
    "item.pixelmon.gardevoirite.tooltip": "One of a variety of mysterious Mega Stones. Have Gardevoir hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.gengarite": "Gengarite",
    "item.pixelmon.gengarite.tooltip": "One of a variety of mysterious Mega Stones. Have Gengar hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.glalitite": "Glalitite",
    "item.pixelmon.glalitite.tooltip": "One of a variety of mysterious Mega Stones. Have Glalie hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.gyaradosite": "Gyaradosite",
    "item.pixelmon.gyaradosite.tooltip": "One of a variety of mysterious Mega Stones. Have Gyarados hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.heracronite": "Heracronite",
    "item.pixelmon.heracronite.tooltip": "One of a variety of mysterious Mega Stones. Have Heracross hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.houndoominite": "Houndoominite",
    "item.pixelmon.houndoominite.tooltip": "One of a variety of mysterious Mega Stones. Have Houndoom hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.kangaskhanite": "Kangaskhanite",
    "item.pixelmon.kangaskhanite.tooltip": "One of a variety of mysterious Mega Stones. Have Kangaskhan hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.latiasite": "Latiasite",
    "item.pixelmon.latiasite.tooltip": "One of a variety of mysterious Mega Stones. Have Latias hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.latiosite": "Latiosite",
    "item.pixelmon.latiosite.tooltip": "One of a variety of mysterious Mega Stones. Have Latios hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.lopunnite": "Lopunnite",
    "item.pixelmon.lopunnite.tooltip": "One of a variety of mysterious Mega Stones. Have Lopunny hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.lucarionite": "Lucarionite",
    "item.pixelmon.lucarionite.tooltip": "One of a variety of mysterious Mega Stones. Have Lucario hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.manectite": "Manectite",
    "item.pixelmon.manectite.tooltip": "One of a variety of mysterious Mega Stones. Have Manectric hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.mawilite": "Mawilite",
    "item.pixelmon.mawilite.tooltip": "One of a variety of mysterious Mega Stones. Have Mawile hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.medichamite": "Medichamite",
    "item.pixelmon.medichamite.tooltip": "One of a variety of mysterious Mega Stones. Have Medicham hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.metagrossite": "Metagrossite",
    "item.pixelmon.metagrossite.tooltip": "One of a variety of mysterious Mega Stones. Have Metagross hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.mewtwonite_x": "Mewtwonite X",
    "item.pixelmon.mewtwonite_x.tooltip": "One of a variety of mysterious Mega Stones. Have Mewtwo hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.mewtwonite_y": "Mewtwonite Y",
    "item.pixelmon.mewtwonite_y.tooltip": "One of a variety of mysterious Mega Stones. Have Mewtwo hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.pidgeotite": "Pidgeotite",
    "item.pixelmon.pidgeotite.tooltip": "One of a variety of mysterious Mega Stones. Have Pidgeot hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.pinsirite": "Pinsirite",
    "item.pixelmon.pinsirite.tooltip": "One of a variety of mysterious Mega Stones. Have Pinsir hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.sablenite": "Sablenite",
    "item.pixelmon.sablenite.tooltip": "One of a variety of mysterious Mega Stones. Have Sableye hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.salamencite": "Salamencite",
    "item.pixelmon.salamencite.tooltip": "One of a variety of mysterious Mega Stones. Have Salamence hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.sceptilite": "Sceptilite",
    "item.pixelmon.sceptilite.tooltip": "One of a variety of mysterious Mega Stones. Have Sceptile hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.scizorite": "Scizorite",
    "item.pixelmon.scizorite.tooltip": "One of a variety of mysterious Mega Stones. Have Scizor hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.sharpedonite": "Sharpedonite",
    "item.pixelmon.sharpedonite.tooltip": "One of a variety of mysterious Mega Stones. Have Sharpedo hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.slowbronite": "Slowbronite",
    "item.pixelmon.slowbronite.tooltip": "One of a variety of mysterious Mega Stones. Have Slowbro hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.steelixite": "Steelixite",
    "item.pixelmon.steelixite.tooltip": "One of a variety of mysterious Mega Stones. Have Steelix hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.swampertite": "Swampertite",
    "item.pixelmon.swampertite.tooltip": "One of a variety of mysterious Mega Stones. Have Swampert hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.tyranitarite": "Tyranitarite",
    "item.pixelmon.tyranitarite.tooltip": "One of a variety of mysterious Mega Stones. Have Tyranitar hold it, and this stone will enable it to Mega Evolve during battle.",
    "item.pixelmon.venusaurite": "Venusaurite",
    "item.pixelmon.venusaurite.tooltip": "One of a variety of mysterious Mega Stones. Have Venusaur hold it, and this stone will enable it to Mega Evolve during battle.",

    "item.pixelmon.repel": "Repel",
    "item.pixelmon.repel.tooltip": "An item that prevents any low-level wild Pokémon from jumping out at you for a while.",
    "item.pixelmon.repel.apply": "Repel applied! Pokémon will stay away.",
    "item.pixelmon.repel.applyextended": "Applied more repel!",
    "item.pixelmon.repel.expire": "Repel has expired.",
    "item.pixelmon.super_repel": "Super Repel",
    "item.pixelmon.super_repel.tooltip": "An item that prevents any low-level wild Pokémon from jumping out at you for a while. It lasts longer than Repel.",
    "item.pixelmon.max_repel": "Max Repel",
    "item.pixelmon.max_repel.tooltip": "An item that prevents any low-level wild Pokémon from jumping out at you for a while. It lasts longer than Super Repel.",
    "item.pixelmon.dna_splicers": "DNA Splicers",
    "item.pixelmon.dna_splicers.tooltip": "A splicer that fuses Kyurem and a certain Pokémon. They are said to have been one in the beginning.",
    "item.pixelmon.porygon_piece": "Porygon",
    "item.pixelmon.porygon_head": "Porygon Head",
    "item.pixelmon.porygon_body": "Porygon Body",
    "item.pixelmon.porygon_leg": "Porygon Leg",
    "item.pixelmon.porygon_tail": "Porygon Tail",
    "item.pixelmon.ultra_deep_sea_key": "Ultra Deep Sea Key",
    "item.pixelmon.ultra_deep_sea_key.tooltip": "WIP. No current use.",
    "item.pixelmon.ultra_forest_key": "Ultra Forest Key",
    "item.pixelmon.ultra_forest_key.tooltip": "WIP. No current use.",
    "item.pixelmon.strange_souvenir": "Strange Souvenir",
    "item.pixelmon.strange_souvenir.tooltip": "An ornament depicting a mysterious Pokémon that has been venerated as a guardian deity for an extremely long time in the Alola region.",
    "item.pixelmon.n_lunarizer": "N-Lunarizer",
    "item.pixelmon.n_lunarizer.tooltip": "A machine to fuse Necrozma, which needs light, and Lunala.",
    "item.pixelmon.n_solarizer": "N-Solarizer",
    "item.pixelmon.n_solarizer.tooltip": "A machine to fuse Necrozma, which needs light, and Solgaleo.",
    "item.pixelmon.ultra_ruin_key": "Ultra Ruin Key",
    "item.pixelmon.ultra_ruin_key.tooltip": "WIP. No current use.",
    "item.pixelmon.eye_of_lugia": "Eye of Lugia",
    "item.pixelmon.eye_of_lugia.tooltip": "A ball of crystal in the form of an eye dropped by the drowned beast.",
    "item.pixelmon.reins_of_unity": "Reins of Unity",
    "item.pixelmon.reins_of_unity.tooltip": "Reins that people presented to the king. They enhance Calyrex’s power over bountiful harvests and unite Calyrex with its beloved steed.",
    "item.pixelmon.rusted_sword": "Rusted Sword",
    "item.pixelmon.rusted_sword.tooltip": "It is said that a hero used this sword to halt a terrible disaster in ancient times. But it's grown rusty and worn.",
    "item.pixelmon.rusted_shield": "Rusted Shield",
    "item.pixelmon.rusted_shield.tooltip": "It is said that a hero used this shield to halt a terrible disaster in ancient times. But it's grown rusty and worn.",
    "item.pixelmon.scroll_of_waters": "Scroll of Waters",
    "item.pixelmon.scroll_of_waters.tooltip": "A scroll inscribed with the teachings of the waters. Allows Kubfu to evolve in its presence.",
    "item.pixelmon.scroll_of_darkness": "Scroll of Darkness",
    "item.pixelmon.scroll_of_darkness.tooltip": "A scroll inscribed with the teachings of the darkness. Allows Kubfu to evolve in its presence.",
    "item.pixelmon.scroll_custom": "Big Banner",
    "block.pixelmon.scroll_of_waters": "Scroll of Waters",
    "block.pixelmon.scroll_of_darkness": "Scroll of Darkness",
    "item.pixelmon.key_stone": "Key Stone",
    "item.pixelmon.wishing_star": "Wishing Star",
    "item.pixelmon.oval_charm": "Oval Charm",
    "item.pixelmon.shiny_charm": "Shiny Charm",
    "item.pixelmon.exp_charm": "Exp. Charm",
    "item.pixelmon.catching_charm": "Catching Charm",
    "item.pixelmon.mark_charm": "Mark Charm",
    "item.pixelmon.tumblestone": "Tumblestone",

    "item.pixelmon.bug_memory": "Bug Memory",
    "item.pixelmon.bug_memory.tooltip": "A memory disc that contains Bug-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.dark_memory": "Dark Memory",
    "item.pixelmon.dark_memory.tooltip": "A memory disc that contains Dark-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.dragon_memory": "Dragon Memory",
    "item.pixelmon.dragon_memory.tooltip": "A memory disc that contains Dragon-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.electric_memory": "Electric Memory",
    "item.pixelmon.electric_memory.tooltip": "A memory disc that contains Electric-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.fairy_memory": "Fairy Memory",
    "item.pixelmon.fairy_memory.tooltip": "A memory disc that contains Fairy-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.fighting_memory": "Fighting Memory",
    "item.pixelmon.fighting_memory.tooltip": "A memory disc that contains Fighting-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.fire_memory": "Fire Memory",
    "item.pixelmon.fire_memory.tooltip": "A memory disc that contains Fire-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.flying_memory": "Flying Memory",
    "item.pixelmon.flying_memory.tooltip": "A memory disc that contains Flying-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.ghost_memory": "Ghost Memory",
    "item.pixelmon.ghost_memory.tooltip": "A memory disc that contains Ghost-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.grass_memory": "Grass Memory",
    "item.pixelmon.grass_memory.tooltip": "A memory disc that contains Grass-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.ground_memory": "Ground Memory",
    "item.pixelmon.ground_memory.tooltip": "A memory disc that contains Ground-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.ice_memory": "Ice Memory",
    "item.pixelmon.ice_memory.tooltip": "A memory disc that contains Ice-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.poison_memory": "Poison Memory",
    "item.pixelmon.poison_memory.tooltip": "A memory disc that contains Poison-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.psychic_memory": "Psychic Memory",
    "item.pixelmon.psychic_memory.tooltip": "A memory disc that contains Psychic-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.rock_memory": "Rock Memory",
    "item.pixelmon.rock_memory.tooltip": "A memory disc that contains Rock-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.steel_memory": "Steel Memory",
    "item.pixelmon.steel_memory.tooltip": "A memory disc that contains Steel-type data. It changes the type of the holder if held by a certain species of Pokémon.",
    "item.pixelmon.water_memory": "Water Memory",
    "item.pixelmon.water_memory.tooltip": "A memory disc that contains Water-type data. It changes the type of the holder if held by a certain species of Pokémon.",

    "item.pixelmon.buginium_z": "Buginium Z",
    "item.pixelmon.buginium_z.tooltip": "A crystallized form of Z-Power. It upgrades Bug-type moves to Z-Moves.",
    "item.pixelmon.darkinium_z": "Darkinium Z",
    "item.pixelmon.darkinium_z.tooltip": "A crystallized form of Z-Power. It upgrades Dark-type moves to Z-Moves.",
    "item.pixelmon.dragonium_z": "Dragonium Z",
    "item.pixelmon.dragonium_z.tooltip": "A crystallized form of Z-Power. It upgrades Dragon-type moves to Z-Moves.",
    "item.pixelmon.electrium_z": "Electrium Z",
    "item.pixelmon.electrium_z.tooltip": "A crystallized form of Z-Power. It upgrades Electric-type moves to Z-Moves.",
    "item.pixelmon.fairium_z": "Fairium Z",
    "item.pixelmon.fairium_z.tooltip": "A crystallized form of Z-Power. It upgrades Fairy-type moves to Z-Moves.",
    "item.pixelmon.fightinium_z": "Fightinium Z",
    "item.pixelmon.fightinium_z.tooltip": "A crystallized form of Z-Power. It upgrades Fighting-type moves to Z-Moves.",
    "item.pixelmon.firium_z": "Firium Z",
    "item.pixelmon.firium_z.tooltip": "A crystallized form of Z-Power. It upgrades Fire-type moves to Z-Moves.",
    "item.pixelmon.flyinium_z": "Flyinium Z",
    "item.pixelmon.flyinium_z.tooltip": "A crystallized form of Z-Power. It upgrades Flying-type moves to Z-Moves.",
    "item.pixelmon.ghostium_z": "Ghostium Z",
    "item.pixelmon.ghostium_z.tooltip": "A crystallized form of Z-Power. It upgrades Ghost-type moves to Z-Moves.",
    "item.pixelmon.grassium_z": "Grassium Z",
    "item.pixelmon.grassium_z.tooltip": "A crystallized form of Z-Power. It upgrades Grass-type moves to Z-Moves.",
    "item.pixelmon.groundium_z": "Groundium Z",
    "item.pixelmon.groundium_z.tooltip": "A crystallized form of Z-Power. It upgrades Ground-type moves to Z-Moves.",
    "item.pixelmon.icium_z": "Icium Z",
    "item.pixelmon.icium_z.tooltip": "A crystallized form of Z-Power. It upgrades Ice-type moves to Z-Moves.",
    "item.pixelmon.normalium_z": "Normalium Z",
    "item.pixelmon.normalium_z.tooltip": "A crystallized form of Z-Power. It upgrades Normal-type moves to Z-Moves.",
    "item.pixelmon.poisonium_z": "Poisonium Z",
    "item.pixelmon.poisonium_z.tooltip": "A crystallized form of Z-Power. It upgrades Poison-type moves to Z-Moves.",
    "item.pixelmon.psychium_z": "Psychium Z",
    "item.pixelmon.psychium_z.tooltip": "A crystallized form of Z-Power. It upgrades Psychic-type moves to Z-Moves.",
    "item.pixelmon.rockium_z": "Rockium Z",
    "item.pixelmon.rockium_z.tooltip": "A crystallized form of Z-Power. It upgrades Rock-type moves to Z-Moves.",
    "item.pixelmon.steelium_z": "Steelium Z",
    "item.pixelmon.steelium_z.tooltip": "A crystallized form of Z-Power. It upgrades Steel-type moves to Z-Moves.",
    "item.pixelmon.waterium_z": "Waterium Z",
    "item.pixelmon.waterium_z.tooltip": "A crystallized form of Z-Power. It upgrades Water-type moves to Z-Moves.",
    "item.pixelmon.aloraichium_z": "Aloraichium Z",
    "item.pixelmon.aloraichium_z.tooltip": "A crystallized form of Z-Power. It upgrades Alolan Raichu's Thunderbolt to a Z-Move.",
    "item.pixelmon.decidium_z": "Decidium Z",
    "item.pixelmon.decidium_z.tooltip": "A crystallized form of Z-Power. It upgrades Decidueye's Spirit Shackle to a Z-Move.",
    "item.pixelmon.eevium_z": "Eevium Z",
    "item.pixelmon.eevium_z.tooltip": "A crystallized form of Z-Power. It upgrades Eevee's Last Resort to a Z-Move.",
    "item.pixelmon.incinium_z": "Incinium Z",
    "item.pixelmon.incinium_z.tooltip": "A crystallized form of Z-Power. It upgrades Incineroar's Darkest Lariat to a Z-Move.",
    "item.pixelmon.kommonium_z": "Kommonium Z",
    "item.pixelmon.kommonium_z.tooltip": "A crystallized form of Z-Power. It upgrades Kommo-o's Clanging Scales to a Z-Move.",
    "item.pixelmon.lunalium_z": "Lunalium Z",
    "item.pixelmon.lunalium_z.tooltip": "A crystallized form of Z-Power. It upgrades Lunala's Moongeist Beam to a Z-Move.",
    "item.pixelmon.lycanium_z": "Lycanium Z",
    "item.pixelmon.lycanium_z.tooltip": "A crystallized form of Z-Power. It upgrades Lycanroc's Stone Edge to a Z-Move.",
    "item.pixelmon.marshadium_z": "Marshadium Z",
    "item.pixelmon.marshadium_z.tooltip": "A crystallized form of Z-Power. It upgrades Marshadow's Spectral Thief to a Z-Move.",
    "item.pixelmon.mewnium_z": "Mewnium Z",
    "item.pixelmon.mewnium_z.tooltip": "A crystallized form of Z-Power. It upgrades Mew's Psychic to a Z-Move.",
    "item.pixelmon.mimikium_z": "Mimikium Z",
    "item.pixelmon.mimikium_z.tooltip": "A crystallized form of Z-Power. It upgrades Mimikyu's Play Rough to a Z-Move.",
    "item.pixelmon.pikanium_z": "Pikanium Z",
    "item.pixelmon.pikanium_z.tooltip": "A crystallized form of Z-Power. It upgrades Pikachu's Volt Tackle to a Z-Move.",
    "item.pixelmon.pikashunium_z": "Pikashunium Z",
    "item.pixelmon.pikashunium_z.tooltip": "A crystallized form of Z-Power. It upgrades a Thunderbolt by Pikachu in a cap to a Z-Move.",
    "item.pixelmon.primarium_z": "Primarium Z",
    "item.pixelmon.primarium_z.tooltip": "A crystallized form of Z-Power. It upgrades Primarina's Sparkling Aria to a Z-Move.",
    "item.pixelmon.snorlium_z": "Snorlium Z",
    "item.pixelmon.snorlium_z.tooltip": "A crystallized form of Z-Power. It upgrades Snorlax's Giga Impact to a Z-Move.",
    "item.pixelmon.solganium_z": "Solganium Z",
    "item.pixelmon.solganium_z.tooltip": "A crystallized form of Z-Power. It upgrades Solgaleo's Sunsteel Strike to a Z-Move.",
    "item.pixelmon.tapunium_z": "Tapunium Z",
    "item.pixelmon.tapunium_z.tooltip": "A crystallized form of Z-Power. It upgrades the tapu's Nature's Madness to a Z-Move.",
    "item.pixelmon.ultranecrozium_z": "Ultranecrozium Z",
    "item.pixelmon.ultranecrozium_z.tooltip": "A crystallized form of Z-Power. It upgrades Necrozma's Photon Geyser to a Z-Move.",

    "item.pixelmon.lure_casing_weak": "Silver Lure Casing",
    "item.pixelmon.lure_casing_strong": "Gold Lure Casing",
    "item.pixelmon.lure_normal_weak": "Weak Normal Lure",
    "item.pixelmon.lure_normal_strong": "Strong Normal Lure",
    "item.pixelmon.lure_fire_weak": "Weak Fire Lure",
    "item.pixelmon.lure_fire_strong": "Strong Fire Lure",
    "item.pixelmon.lure_water_weak": "Weak Water Lure",
    "item.pixelmon.lure_water_strong": "Strong Water Lure",
    "item.pixelmon.lure_electric_weak": "Weak Electric Lure",
    "item.pixelmon.lure_electric_strong": "Strong Electric Lure",
    "item.pixelmon.lure_grass_weak": "Weak Grass Lure",
    "item.pixelmon.lure_grass_strong": "Strong Grass Lure",
    "item.pixelmon.lure_ice_weak": "Weak Ice Lure",
    "item.pixelmon.lure_ice_strong": "Strong Ice Lure",
    "item.pixelmon.lure_fighting_weak": "Weak Fighting Lure",
    "item.pixelmon.lure_fighting_strong": "Strong Fighting Lure",
    "item.pixelmon.lure_poison_weak": "Weak Poison Lure",
    "item.pixelmon.lure_poison_strong": "Strong Poison Lure",
    "item.pixelmon.lure_ground_weak": "Weak Ground Lure",
    "item.pixelmon.lure_ground_strong": "Strong Ground Lure",
    "item.pixelmon.lure_flying_weak": "Weak Flying Lure",
    "item.pixelmon.lure_flying_strong": "Strong Flying Lure",
    "item.pixelmon.lure_psychic_weak": "Weak Psychic Lure",
    "item.pixelmon.lure_psychic_strong": "Strong Psychic Lure",
    "item.pixelmon.lure_bug_weak": "Weak Bug Lure",
    "item.pixelmon.lure_bug_strong": "Strong Bug Lure",
    "item.pixelmon.lure_rock_weak": "Weak Rock Lure",
    "item.pixelmon.lure_rock_strong": "Strong Rock Lure",
    "item.pixelmon.lure_ghost_weak": "Weak Ghost Lure",
    "item.pixelmon.lure_ghost_strong": "Strong Ghost Lure",
    "item.pixelmon.lure_dragon_weak": "Weak Dragon Lure",
    "item.pixelmon.lure_dragon_strong": "Strong Dragon Lure",
    "item.pixelmon.lure_dark_weak": "Weak Dark Lure",
    "item.pixelmon.lure_dark_strong": "Strong Dark Lure",
    "item.pixelmon.lure_steel_weak": "Weak Steel Lure",
    "item.pixelmon.lure_steel_strong": "Strong Steel Lure",
    "item.pixelmon.lure_fairy_weak": "Weak Fairy Lure",
    "item.pixelmon.lure_fairy_strong": "Strong Fairy Lure",

    "item.pixelmon.lure_shiny_weak": "Weak Shiny Lure",
    "item.pixelmon.lure_shiny_strong": "Strong Shiny Lure",
    "item.pixelmon.lure_ha_weak": "Weak Hidden Ability Lure",
    "item.pixelmon.lure_ha_strong": "Strong Hidden Ability Lure",

    "lure.strong.normal.tooltip": "Boosts natural spawns of %s-type Pokémon by 3.0x",
    "lure.weak.normal.tooltip": "Boosts natural spawns of %s-type Pokémon by 1.5x",
    "lure.strong.special.tooltip": "Boosts natural spawns of %s Pokémon by 1.73x",
    "lure.weak.special.tooltip": "Boosts natural spawns of %s Pokémon by 1.22x",

    "item.pixelmon.amaze_mulch": "Amaze Mulch",
    "item.pixelmon.apricorn_box": "Apricorn Box",
    "item.pixelmon.aurora_ticket": "Aurora Ticket",
    "item.pixelmon.basement_key_brass": "Basement Key",
    "item.pixelmon.basement_key_silver": "Basement Key",
    "item.pixelmon.berry_bag": "Berry Bag",
    "item.pixelmon.berry_pot": "Berry Pot",
    "item.pixelmon.bike_voucher": "Bike Voucher",
    "item.pixelmon.black_mane_hair": "Black Mane Hair",
    "item.pixelmon.boost_mulch": "Boost Mulch",
    "item.pixelmon.camping_gear": "Camping Gear",
    "item.pixelmon.card_key_orange": "Card Key",
    "item.pixelmon.card_key_red": "Card Key",
    "item.pixelmon.carrot_seed": "Carrot Seed",
    "item.pixelmon.common_stone": "Common Stone",
    "item.pixelmon.damp_mulch": "Damp Mulch",
    "item.pixelmon.dark_stone": "Dark Stone",
    "item.pixelmon.devon_scuba_gear": "Devon Scuba Gear",
    "item.pixelmon.discount_coupon": "Discount Coupon",
    "item.pixelmon.dragon_skull": "Dragon Skull",
    "item.pixelmon.elevator_key_flare": "Flare Card Key",
    "item.pixelmon.endorsement": "Endorsement",
    "item.pixelmon.enigma_stone": "Enigma Stone",
    "item.pixelmon.eon_flute": "Eon Flute",
    "item.pixelmon.eon_ticket": "Eon Ticket",
    "item.pixelmon.escape_rope": "Escape Rope",
    "item.pixelmon.gooey_mulch": "Gooey Mulch",
    "item.pixelmon.growth_mulch": "Growth Mulch",
    "item.pixelmon.ice_root_carrot": "Ice Root Carrot",
    "item.pixelmon.intriguing_stone": "Intriguing Stone",
    "item.pixelmon.legendary_clues": "Legendary Clues",
    "item.pixelmon.light_stone": "Light Stone",
    "item.pixelmon.lunar_wing": "Lunar Wing",
    "item.pixelmon.magma_stone": "Magma Stone",
    "item.pixelmon.moon_flute": "Moon Flute",
    "item.pixelmon.poffin_case": "Poffin Case",
    "item.pixelmon.poke_flute": "Poké Flute",
    "item.pixelmon.pokeradar": "Pokéradar",
    "item.pixelmon.poketch_b": "Pokétch B",
    "item.pixelmon.poketch_r": "Pokétch R",
    "item.pixelmon.radiant_petal": "Radiant Petal",
    "item.pixelmon.red_scale": "Red Scale",
    "item.pixelmon.rich_mulch": "Rich Mulch",
    "item.pixelmon.shade_root_carrot": "Shade Root Carrot",
    "item.pixelmon.spray_duck": "Spray Duck",
    "item.pixelmon.squirt_bottle": "Squirt Bottle",
    "item.pixelmon.stable_mulch": "Stable Mulch",
    "item.pixelmon.sun_flute": "Sun Flute",
    "item.pixelmon.surprise_mulch": "Surprise Mulch",
    "item.pixelmon.tm_case": "TM Case",
    "item.pixelmon.white_mane_hair": "White Mane Hair",
    "item.pixelmon.wooden_crown": "Wooden Crown",
    "item.pixelmon.armor_pass": "Armor Pass",
    "item.pixelmon.blue_petal": "Blue Petal",
    "item.pixelmon.coin_case": "Coin Case",
    "item.pixelmon.crown_pass": "Crown Pass",
    "item.pixelmon.devon_scope": "Devon Scope",
    "item.pixelmon.fashion_case": "Fashion Case",
    "item.pixelmon.forage_bag": "Forage Bag",
    "item.pixelmon.gold_teeth": "Gold Teeth",
    "item.pixelmon.green_petal": "Green Petal",
    "item.pixelmon.hi_tech_earbuds": "Hi-tech Earbuds",
    "item.pixelmon.holo_caster": "Holo Caster",
    "item.pixelmon.liberty_pass": "Liberty Pass",
    "item.pixelmon.max_honey": "Max Honey",
    "item.pixelmon.member_card": "Member Card",
    "item.pixelmon.mystic_ticket": "Mystic Ticket",
    "item.pixelmon.oaks_letter": "Oak's Letteer",
    "item.pixelmon.oaks_parcel": "Oak's Parcel",
    "item.pixelmon.old_sea_map": "Old Sea Map",
    "item.pixelmon.orange_petal": "Orange Petal",
    "item.pixelmon.pink_petal": "Pink Petal",
    "item.pixelmon.pokeblock_case": "Pokeblock Case",
    "item.pixelmon.professors_mask": "Professor's Mask",
    "item.pixelmon.prop_case": "Prop Case",
    "item.pixelmon.purple_petal": "Purple Petal",
    "item.pixelmon.rainbow_flower": "Rainbow Flower",
    "item.pixelmon.rainbow_pass": "Rainbow Pass",
    "item.pixelmon.red_petal": "Red Petal",
    "item.pixelmon.ride_pager": "Ride Pager",
    "item.pixelmon.seal_case": "Seal Case",
    "item.pixelmon.secret_key": "Secret Key",
    "item.pixelmon.silph_scope": "Silph Scope",
    "item.pixelmon.sonias_book": "Sonia's Book",
    "item.pixelmon.sparkling_stone": "Sparkling Stone",
    "item.pixelmon.ss_ticket": "SS Ticket",
    "item.pixelmon.style_card": "Style Card",
    "item.pixelmon.tri_pass": "Tri-Pass",
    "item.pixelmon.yellow_petal": "Yellow Petal",
    "item.pixelmon.z_power_ring": "Z-Power Ring",
    "item.pixelmon.z_ring": "Z-Ring",

    "item.pixelmon.mint_hardy": "Hardy Mint",
    "item.pixelmon.mint_serious": "Serious Mint",
    "item.pixelmon.mint_docile": "Docile Mint",
    "item.pixelmon.mint_bashful": "Bashful Mint",
    "item.pixelmon.mint_quirky": "Quirky Mint",
    "item.pixelmon.mint_lonely": "Lonely Mint",
    "item.pixelmon.mint_brave": "Brave Mint",
    "item.pixelmon.mint_adamant": "Adamant Mint",
    "item.pixelmon.mint_naughty": "Naughty Mint",
    "item.pixelmon.mint_bold": "Bold Mint",
    "item.pixelmon.mint_relaxed": "Relaxed Mint",
    "item.pixelmon.mint_impish": "Impish Mint",
    "item.pixelmon.mint_lax": "Lax Mint",
    "item.pixelmon.mint_timid": "Timid Mint",
    "item.pixelmon.mint_hasty": "Hasty Mint",
    "item.pixelmon.mint_jolly": "Jolly Mint",
    "item.pixelmon.mint_naive": "Naive Mint",
    "item.pixelmon.mint_modest": "Modest Mint",
    "item.pixelmon.mint_mild": "Mild Mint",
    "item.pixelmon.mint_quiet": "Quiet Mint",
    "item.pixelmon.mint_rash": "Rash Mint",
    "item.pixelmon.mint_calm": "Calm Mint",
    "item.pixelmon.mint_gentle": "Gentle Mint",
    "item.pixelmon.mint_sassy": "Sassy Mint",
    "item.pixelmon.mint_careful": "Careful Mint",

    "item.pixelmon.mint_seeds": "Mint Cutting",

    "item.pixelmon.white_poke_bag": "White Poké Bag",
    "item.pixelmon.orange_poke_bag": "Orange Poké Bag",
    "item.pixelmon.magenta_poke_bag": "Magenta Poké Bag",
    "item.pixelmon.light_blue_poke_bag": "Light Blue Poké Bag",
    "item.pixelmon.yellow_poke_bag": "Yellow Poké Bag",
    "item.pixelmon.lime_poke_bag": "Lime Poké Bag",
    "item.pixelmon.pink_poke_bag": "Pink Poké Bag",
    "item.pixelmon.gray_poke_bag": "Gray Poké Bag",
    "item.pixelmon.light_gray_poke_bag": "Light Gray Poké Bag",
    "item.pixelmon.cyan_poke_bag": "Cyan Poké Bag",
    "item.pixelmon.purple_poke_bag": "Purple Poké Bag",
    "item.pixelmon.blue_poke_bag": "Blue Poké Bag",
    "item.pixelmon.brown_poke_bag": "Brown Poké Bag",
    "item.pixelmon.green_poke_bag": "Green Poké Bag",
    "item.pixelmon.red_poke_bag": "Red Poké Bag",
    "item.pixelmon.black_poke_bag": "Black Poké Bag",
    "item.pixelmon.pokebag.tooltip": "Holds the items, storing them for later use.",


    "block.pixelmon.mint": "Mint Crop",

    "block.pixelmon.apricorn_log_black": "Apricorn Log Black",
    "block.pixelmon.apricorn_log_white": "Apricorn Log White",
    "block.pixelmon.apricorn_log_pink": "Apricorn Log Pink",
    "block.pixelmon.apricorn_log_green": "Apricorn Log Green",
    "block.pixelmon.apricorn_log_blue": "Apricorn Log Blue",
    "block.pixelmon.apricorn_log_yellow": "Apricorn Log Yellow",
    "block.pixelmon.apricorn_log_red": "Apricorn Log Red",

    "block.pixelmon.apricorn_leaves_black": "Apricorn Leaves Black",
    "block.pixelmon.apricorn_leaves_white": "Apricorn Leaves White",
    "block.pixelmon.apricorn_leaves_pink": "Apricorn Leaves Pink",
    "block.pixelmon.apricorn_leaves_green": "Apricorn Leaves Green",
    "block.pixelmon.apricorn_leaves_blue": "Apricorn Leaves Blue",
    "block.pixelmon.apricorn_leaves_yellow": "Apricorn Leaves Yellow",
    "block.pixelmon.apricorn_leaves_red": "Apricorn Leaves Red",

    "block.pixelmon.moon_stone_ore": "Moon Stone Ore",
    "block.pixelmon.ice_stone_ore": "Ice Stone Ore",
    "block.pixelmon.shiny_stone_ore": "Shiny Stone Ore",
    "block.pixelmon.silver_ore": "Silver Ore",
    "block.pixelmon.platinum_ore": "Platinum Ore",
    "block.pixelmon.silver_block": "Silver Block",
    "block.pixelmon.platinum_block": "Platinum Block",
    "block.pixelmon.unown_block_blank": "Unown Block Blank",
    "block.pixelmon.braille_block_blank": "Braille Block Blank",

    "block.pixelmon.braille_block_a": "Braille Block A",
    "block.pixelmon.braille_block_b": "Braille Block B",
    "block.pixelmon.braille_block_c": "Braille Block C",
    "block.pixelmon.braille_block_d": "Braille Block D",
    "block.pixelmon.braille_block_e": "Braille Block E",
    "block.pixelmon.braille_block_f": "Braille Block F",
    "block.pixelmon.braille_block_g": "Braille Block G",
    "block.pixelmon.braille_block_h": "Braille Block H",
    "block.pixelmon.braille_block_i": "Braille Block I",
    "block.pixelmon.braille_block_j": "Braille Block J",
    "block.pixelmon.braille_block_k": "Braille Block K",
    "block.pixelmon.braille_block_l": "Braille Block L",
    "block.pixelmon.braille_block_m": "Braille Block M",
    "block.pixelmon.braille_block_n": "Braille Block N",
    "block.pixelmon.braille_block_o": "Braille Block O",
    "block.pixelmon.braille_block_p": "Braille Block P",
    "block.pixelmon.braille_block_q": "Braille Block Q",
    "block.pixelmon.braille_block_r": "Braille Block R",
    "block.pixelmon.braille_block_s": "Braille Block S",
    "block.pixelmon.braille_block_t": "Braille Block T",
    "block.pixelmon.braille_block_u": "Braille Block U",
    "block.pixelmon.braille_block_v": "Braille Block V",
    "block.pixelmon.braille_block_w": "Braille Block W",
    "block.pixelmon.braille_block_x": "Braille Block X",
    "block.pixelmon.braille_block_y": "Braille Block Y",
    "block.pixelmon.braille_block_z": "Braille Block Z",
    "block.pixelmon.braille_block_stop": "Braille Block .",
    "block.pixelmon.braille_block_comma": "Braille Block ,",
    "block.pixelmon.braille_block_underscore": "Braille Block _",

    "block.pixelmon.apricorn_tree": "Apricorn Tree",
    "block.pixelmon.berrytree_cheri": "Cheri Berry Tree",
    "block.pixelmon.berrytree_pomeg": "Pomeg Berry Tree",
    "block.pixelmon.berrytree_kelpsy": "Kelpsy Berry Tree",
    "block.pixelmon.berrytree_qualot": "Qualot Berry Tree",
    "block.pixelmon.berrytree_hondew": "Hondew Berry Tree",
    "block.pixelmon.berrytree_grepa": "Grepa Berry Tree",
    "block.pixelmon.berrytree_tamato": "Tamato Berry Tree",
    "block.pixelmon.berrytree_occa": "Occa Berry Tree",
    "block.pixelmon.berrytree_passho": "Passho Berry Tree",
    "block.pixelmon.berrytree_wacan": "Wacan Berry Tree",
    "block.pixelmon.berrytree_rindo": "Rindo Berry Tree",
    "block.pixelmon.berrytree_yache": "Yache Berry Tree",
    "block.pixelmon.berrytree_chople": "Chople Berry Tree",
    "block.pixelmon.berrytree_kebia": "Kebia Berry Tree",
    "block.pixelmon.berrytree_shuca": "Shuca Berry Tree",
    "block.pixelmon.berrytree_coba": "Coba Berry Tree",
    "block.pixelmon.berrytree_tanga": "Tanga Berry Tree",
    "block.pixelmon.berrytree_charti": "Charti Berry Tree",
    "block.pixelmon.berrytree_kasib": "Kasib Berry Tree",
    "block.pixelmon.berrytree_haban": "Haban Berry Tree",
    "block.pixelmon.berrytree_colbur": "Colbur Berry Tree",
    "block.pixelmon.berrytree_babiri": "Babiri Berry Tree",
    "block.pixelmon.berrytree_liechi": "Liechi Berry Tree",
    "block.pixelmon.berrytree_ganlon": "Ganlon Berry Tree",
    "block.pixelmon.berrytree_salac": "Salac Berry Tree",
    "block.pixelmon.berrytree_petaya": "Petaya Berry Tree",
    "block.pixelmon.berrytree_apicot": "Apicot Berry Tree",
    "block.pixelmon.berrytree_lansat": "Lansat Berry Tree",
    "block.pixelmon.berrytree_starf": "Starf Berry Tree",
    "block.pixelmon.berrytree_enigma": "Enigma Berry Tree",
    "block.pixelmon.berrytree_micle": "Micle Berry Tree",
    "block.pixelmon.berrytree_custap": "Custap Berry Tree",
    "block.pixelmon.berrytree_jaboca": "Jaboca Berry Tree",
    "block.pixelmon.berrytree_rowap": "Rowap Berry Tree",

    "block.pixelmon.berry_log_cheri": "Cheri Berry Log",
    "block.pixelmon.berry_log_pomeg": "Pomeg Berry Log",
    "block.pixelmon.berry_log_kelpsy": "Kelpsy Berry Log",
    "block.pixelmon.berry_log_qualot": "Qualot Berry Log",
    "block.pixelmon.berry_log_hondew": "Hondew Berry Log",
    "block.pixelmon.berry_log_grepa": "Grepa Berry Log",
    "block.pixelmon.berry_log_tamato": "Tamato Berry Log",
    "block.pixelmon.berry_log_occa": "Occa Berry Log",
    "block.pixelmon.berry_log_passho": "Passho Berry Log",
    "block.pixelmon.berry_log_wacan": "Wacan Berry Log",
    "block.pixelmon.berry_log_rindo": "Rindo Berry Log",
    "block.pixelmon.berry_log_yache": "Yache Berry Log",
    "block.pixelmon.berry_log_chople": "Chople Berry Log",
    "block.pixelmon.berry_log_kebia": "Kebia Berry Log",
    "block.pixelmon.berry_log_shuca": "Shuca Berry Log",
    "block.pixelmon.berry_log_coba": "Coba Berry Log",
    "block.pixelmon.berry_log_tanga": "Tanga Berry Log",
    "block.pixelmon.berry_log_charti": "Charti Berry Log",
    "block.pixelmon.berry_log_kasib": "Kasib Berry Log",
    "block.pixelmon.berry_log_haban": "Haban Berry Log",
    "block.pixelmon.berry_log_colbur": "Colbur Berry Log",
    "block.pixelmon.berry_log_babiri": "Babiri Berry Log",
    "block.pixelmon.berry_log_liechi": "Liechi Berry Log",
    "block.pixelmon.berry_log_ganlon": "Ganlon Berry Log",
    "block.pixelmon.berry_log_salac": "Salac Berry Log",
    "block.pixelmon.berry_log_petaya": "Petaya Berry Log",
    "block.pixelmon.berry_log_apicot": "Apicot Berry Log",
    "block.pixelmon.berry_log_lansat": "Lansat Berry Log",
    "block.pixelmon.berry_log_starf": "Starf Berry Log",
    "block.pixelmon.berry_log_enigma": "Enigma Berry Log",
    "block.pixelmon.berry_log_micle": "Micle Berry Log",
    "block.pixelmon.berry_log_custap": "Custap Berry Log",
    "block.pixelmon.berry_log_jaboca": "Jaboca Berry Log",
    "block.pixelmon.berry_log_rowap": "Rowap Berry Log",
    "block.pixelmon.berry_log_payapa": "Payapa Berry Log",
    "block.pixelmon.berry_log_chesto": "Chesto Berry Log",
    "block.pixelmon.berry_log_pecha": "Pecha Berry Log",
    "block.pixelmon.berry_log_rawst": "Rawst Berry Log",
    "block.pixelmon.berry_log_aspear": "Aspear Berry Log",
    "block.pixelmon.berry_log_leppa": "Leppa Berry Log",
    "block.pixelmon.berry_log_oran": "Oran Berry Log",
    "block.pixelmon.berry_log_persim": "Persim Berry Log",
    "block.pixelmon.berry_log_lum": "Lum Berry Log",
    "block.pixelmon.berry_log_sitrus": "Sitrus Berry Log",
    "block.pixelmon.berry_log_figy": "Figy Berry Log",
    "block.pixelmon.berry_log_wiki": "Wiki Berry Log",
    "block.pixelmon.berry_log_mago": "Mago Berry Log",
    "block.pixelmon.berry_log_iapapa": "Iapapa Berry Log",
    "block.pixelmon.berry_log_razz": "Razz Berry Log",
    "block.pixelmon.berry_log_bluk": "Bluk Berry Log",
    "block.pixelmon.berry_log_aguav": "Aguav Berry Log",
    "block.pixelmon.berry_log_nanab": "Nanab Berry Log",
    "block.pixelmon.berry_log_wepear": "Wepear Berry Log",
    "block.pixelmon.berry_log_pinap": "Pinap Berry Log",
    "block.pixelmon.berry_log_cornn": "Cornn Berry Log",
    "block.pixelmon.berry_log_magost": "Magost Berry Log",
    "block.pixelmon.berry_log_rabuta": "Rabuta Berry Log",
    "block.pixelmon.berry_log_nomel": "Nomel Berry Log",
    "block.pixelmon.berry_log_spelon": "Spelon Berry Log",
    "block.pixelmon.berry_log_pamtre": "Pamtre Berry Log",
    "block.pixelmon.berry_log_watmel": "Watmel Berry Log",
    "block.pixelmon.berry_log_durin": "Durin Berry Log",
    "block.pixelmon.berry_log_belue": "Belue Berry Log",
    "block.pixelmon.berry_log_chilan": "Chilan Berry Log",
    "block.pixelmon.berry_log_roseli": "Roseli Berry Log",
    "block.pixelmon.berry_log_pumkin": "Pumkin Berry Log",
    "block.pixelmon.berry_log_drash": "Drash Berry Log",
    "block.pixelmon.berry_log_eggant": "Eggant Berry Log",
    "block.pixelmon.berry_log_strib": "Strib Berry Log",
    "block.pixelmon.berry_log_nutpea": "Nutpea Berry Log",
    "block.pixelmon.berry_log_ginema": "Ginema Berry Log",
    "block.pixelmon.berry_log_kuo": "Kuo Berry Log",
    "block.pixelmon.berry_log_yago": "Yago Berry Log",
    "block.pixelmon.berry_log_touga": "Touga Berry Log",
    "block.pixelmon.berry_log_niniku": "Niniku Berry Log",
    "block.pixelmon.berry_log_topo": "Topo Berry Log",
    "block.pixelmon.berry_log_kee": "Kee Berry Log",
    "block.pixelmon.berry_log_maranga": "Maranga Berry Log",

    "block.pixelmon.berry_leaves_cheri": "Cheri Berry Leaves",
    "block.pixelmon.berry_leaves_pomeg": "Pomeg Berry Leaves",
    "block.pixelmon.berry_leaves_kelpsy": "Kelpsy Berry Leaves",
    "block.pixelmon.berry_leaves_qualot": "Qualot Berry Leaves",
    "block.pixelmon.berry_leaves_hondew": "Hondew Berry Leaves",
    "block.pixelmon.berry_leaves_grepa": "Grepa Berry Leaves",
    "block.pixelmon.berry_leaves_tamato": "Tamato Berry Leaves",
    "block.pixelmon.berry_leaves_occa": "Occa Berry Leaves",
    "block.pixelmon.berry_leaves_passho": "Passho Berry Leaves",
    "block.pixelmon.berry_leaves_wacan": "Wacan Berry Leaves",
    "block.pixelmon.berry_leaves_rindo": "Rindo Berry Leaves",
    "block.pixelmon.berry_leaves_aguav": "Aguav Berry Leaves",
    "block.pixelmon.berry_leaves_yache": "Yache Berry Leaves",
    "block.pixelmon.berry_leaves_chople": "Chople Berry Leaves",
    "block.pixelmon.berry_leaves_kebia": "Kebia Berry Leaves",
    "block.pixelmon.berry_leaves_shuca": "Shuca Berry Leaves",
    "block.pixelmon.berry_leaves_coba": "Coba Berry Leaves",
    "block.pixelmon.berry_leaves_tanga": "Tanga Berry Leaves",
    "block.pixelmon.berry_leaves_charti": "Charti Berry Leaves",
    "block.pixelmon.berry_leaves_kasib": "Kasib Berry Leaves",
    "block.pixelmon.berry_leaves_haban": "Haban Berry Leaves",
    "block.pixelmon.berry_leaves_colbur": "Colbur Berry Leaves",
    "block.pixelmon.berry_leaves_babiri": "Babiri Berry Leaves",
    "block.pixelmon.berry_leaves_liechi": "Liechi Berry Leaves",
    "block.pixelmon.berry_leaves_ganlon": "Ganlon Berry Leaves",
    "block.pixelmon.berry_leaves_salac": "Salac Berry Leaves",
    "block.pixelmon.berry_leaves_petaya": "Petaya Berry Leaves",
    "block.pixelmon.berry_leaves_apicot": "Apicot Berry Leaves",
    "block.pixelmon.berry_leaves_lansat": "Lansat Berry Leaves",
    "block.pixelmon.berry_leaves_starf": "Starf Berry Leaves",
    "block.pixelmon.berry_leaves_enigma": "Enigma Berry Leaves",
    "block.pixelmon.berry_leaves_micle": "Micle Berry Leaves",
    "block.pixelmon.berry_leaves_custap": "Custap Berry Leaves",
    "block.pixelmon.berry_leaves_jaboca": "Jaboca Berry Leaves",
    "block.pixelmon.berry_leaves_rowap": "Rowap Berry Leaves",
    "block.pixelmon.berry_leaves_payapa": "Payapa Berry Leaves",
    "block.pixelmon.berry_leaves_chesto": "Chesto Berry Leaves",
    "block.pixelmon.berry_leaves_pecha": "Pecha Berry Leaves",
    "block.pixelmon.berry_leaves_rawst": "Rawst Berry Leaves",
    "block.pixelmon.berry_leaves_aspear": "Aspear Berry Leaves",
    "block.pixelmon.berry_leaves_leppa": "Leppa Berry Leaves",
    "block.pixelmon.berry_leaves_oran": "Oran Berry Leaves",
    "block.pixelmon.berry_leaves_persim": "Persim Berry Leaves",
    "block.pixelmon.berry_leaves_lum": "Lum Berry Leaves",
    "block.pixelmon.berry_leaves_sitrus": "Sitrus Berry Leaves",
    "block.pixelmon.berry_leaves_figy": "Figy Berry Leaves",
    "block.pixelmon.berry_leaves_wiki": "Wiki Berry Leaves",
    "block.pixelmon.berry_leaves_mago": "Mago Berry Leaves",
    "block.pixelmon.berry_leaves_iapapa": "Iapapa Berry Leaves",
    "block.pixelmon.berry_leaves_razz": "Razz Berry Leaves",
    "block.pixelmon.berry_leaves_bluk": "Bluk Berry Leaves",
    "block.pixelmon.berry_leaves_nanab": "Nanab Berry Leaves",
    "block.pixelmon.berry_leaves_wepear": "Wepear Berry Leaves",
    "block.pixelmon.berry_leaves_pinap": "Pinap Berry Leaves",
    "block.pixelmon.berry_leaves_cornn": "Cornn Berry Leaves",
    "block.pixelmon.berry_leaves_magost": "Magost Berry Leaves",
    "block.pixelmon.berry_leaves_rabuta": "Rabuta Berry Leaves",
    "block.pixelmon.berry_leaves_nomel": "Nomel Berry Leaves",
    "block.pixelmon.berry_leaves_spelon": "Spelon Berry Leaves",
    "block.pixelmon.berry_leaves_pamtre": "Pamtre Berry Leaves",
    "block.pixelmon.berry_leaves_watmel": "Watmel Berry Leaves",
    "block.pixelmon.berry_leaves_durin": "Durin Berry Leaves",
    "block.pixelmon.berry_leaves_belue": "Belue Berry Leaves",
    "block.pixelmon.berry_leaves_chilan": "Chilan Berry Leaves",
    "block.pixelmon.berry_leaves_roseli": "Roseli Berry Leaves",
    "block.pixelmon.berry_leaves_pumkin": "Pumkin Berry Leaves",
    "block.pixelmon.berry_leaves_drash": "Drash Berry Leaves",
    "block.pixelmon.berry_leaves_eggant": "Eggant Berry Leaves",
    "block.pixelmon.berry_leaves_strib": "Strib Berry Leaves",
    "block.pixelmon.berry_leaves_nutpea": "Nutpea Berry Leaves",
    "block.pixelmon.berry_leaves_ginema": "Ginema Berry Leaves",
    "block.pixelmon.berry_leaves_kuo": "Kuo Berry Leaves",
    "block.pixelmon.berry_leaves_yago": "Yago Berry Leaves",
    "block.pixelmon.berry_leaves_touga": "Touga Berry Leaves",
    "block.pixelmon.berry_leaves_niniku": "Niniku Berry Leaves",
    "block.pixelmon.berry_leaves_topo": "Topo Berry Leaves",
    "block.pixelmon.berry_leaves_kee": "Kee Berry Leaves",
    "block.pixelmon.berry_leaves_maranga": "Maranga Berry Leaves",

    "item.pixelmon.blue_berry_wood_boat": "Blue Berry Boat",
    "block.pixelmon.blue_berry_wood_button": "Blue Berry Button",
    "block.pixelmon.blue_berry_wood_door": "Blue Berry Door",
    "block.pixelmon.blue_berry_wood_fence": "Blue Berry Fence",
    "block.pixelmon.blue_berry_wood_fence_gate": "Blue Berry Fence Gate",
    "block.pixelmon.blue_berry_wood_planks": "Blue Berry Planks",
    "block.pixelmon.blue_berry_wood_pressure_plate": "Blue Berry Pressure Plate",
    "block.pixelmon.blue_berry_wood_sign": "Blue Berry Sign",
    "block.pixelmon.blue_berry_wood_slab": "Blue Berry Slab",
    "block.pixelmon.blue_berry_wood_stairs": "Blue Berry Stairs",
    "block.pixelmon.blue_berry_wood_trapdoor": "Blue Berry Trapdoor",
    "item.pixelmon.green_berry_wood_boat": "Green Berry Boat",
    "block.pixelmon.green_berry_wood_button": "Green Berry Button",
    "block.pixelmon.green_berry_wood_door": "Green Berry Door",
    "block.pixelmon.green_berry_wood_fence": "Green Berry Fence",
    "block.pixelmon.green_berry_wood_fence_gate": "Green Berry Fence Gate",
    "block.pixelmon.green_berry_wood_planks": "Green Berry Planks",
    "block.pixelmon.green_berry_wood_pressure_plate": "Green Berry Pressure Plate",
    "block.pixelmon.green_berry_wood_sign": "Green Berry Sign",
    "block.pixelmon.green_berry_wood_slab": "Green Berry Slab",
    "block.pixelmon.green_berry_wood_stairs": "Green Berry Stairs",
    "block.pixelmon.green_berry_wood_trapdoor": "Green Berry Trapdoor",
    "item.pixelmon.pink_berry_wood_boat": "Pink Berry Boat",
    "block.pixelmon.pink_berry_wood_button": "Pink Berry Button",
    "block.pixelmon.pink_berry_wood_door": "Pink Berry Door",
    "block.pixelmon.pink_berry_wood_fence": "Pink Berry Fence",
    "block.pixelmon.pink_berry_wood_fence_gate": "Pink Berry Fence Gate",
    "block.pixelmon.pink_berry_wood_planks": "Pink Berry Planks",
    "block.pixelmon.pink_berry_wood_pressure_plate": "Pink Berry Pressure Plate",
    "block.pixelmon.pink_berry_wood_sign": "Pink Berry Sign",
    "block.pixelmon.pink_berry_wood_slab": "Pink Berry Slab",
    "block.pixelmon.pink_berry_wood_stairs": "Pink Berry Stairs",
    "block.pixelmon.pink_berry_wood_trapdoor": "Pink Berry Trapdoor",
    "item.pixelmon.purple_berry_wood_boat": "Purple Berry Boat",
    "block.pixelmon.purple_berry_wood_button": "Purple Berry Button",
    "block.pixelmon.purple_berry_wood_door": "Purple Berry Door",
    "block.pixelmon.purple_berry_wood_fence": "Purple Berry Fence",
    "block.pixelmon.purple_berry_wood_fence_gate": "Purple Berry Fence Gate",
    "block.pixelmon.purple_berry_wood_planks": "Purple Berry Planks",
    "block.pixelmon.purple_berry_wood_pressure_plate": "Purple Berry Pressure Plate",
    "block.pixelmon.purple_berry_wood_sign": "Purple Berry Sign",
    "block.pixelmon.purple_berry_wood_slab": "Purple Berry Slab",
    "block.pixelmon.purple_berry_wood_stairs": "Purple Berry Stairs",
    "block.pixelmon.purple_berry_wood_trapdoor": "Purple Berry Trapdoor",
    "item.pixelmon.red_berry_wood_boat": "Red Berry Boat",
    "block.pixelmon.red_berry_wood_button": "Red Berry Button",
    "block.pixelmon.red_berry_wood_door": "Red Berry Door",
    "block.pixelmon.red_berry_wood_fence": "Red Berry Fence",
    "block.pixelmon.red_berry_wood_fence_gate": "Red Berry Fence Gate",
    "block.pixelmon.red_berry_wood_planks": "Red Berry Planks",
    "block.pixelmon.red_berry_wood_pressure_plate": "Red Berry Pressure Plate",
    "block.pixelmon.red_berry_wood_sign": "Red Berry Sign",
    "block.pixelmon.red_berry_wood_slab": "Red Berry Slab",
    "block.pixelmon.red_berry_wood_stairs": "Red Berry Stairs",
    "block.pixelmon.red_berry_wood_trapdoor": "Red Berry Trapdoor",
    "item.pixelmon.yellow_berry_wood_boat": "Yellow Berry Boat",
    "block.pixelmon.yellow_berry_wood_button": "Yellow Berry Button",
    "block.pixelmon.yellow_berry_wood_door": "Yellow Berry Door",
    "block.pixelmon.yellow_berry_wood_fence": "Yellow Berry Fence",
    "block.pixelmon.yellow_berry_wood_fence_gate": "Yellow Berry Fence Gate",
    "block.pixelmon.yellow_berry_wood_planks": "Yellow Berry Planks",
    "block.pixelmon.yellow_berry_wood_pressure_plate": "Yellow Berry Pressure Plate",
    "block.pixelmon.yellow_berry_wood_sign": "Yellow Berry Sign",
    "block.pixelmon.yellow_berry_wood_slab": "Yellow Berry Slab",
    "block.pixelmon.yellow_berry_wood_stairs": "Yellow Berry Stairs",
    "block.pixelmon.yellow_berry_wood_trapdoor": "Yellow Berry Trapdoor",

    "block.pixelmon.mower": "Mower",
    "block.pixelmon.fan": "Fan",
    "block.pixelmon.washing_machine": "Washing Machine",
    "block.pixelmon.green_cushion": "Green Cushion Chair",
    "block.pixelmon.blue_cushion": "Blue Cushion Chair",
    "block.pixelmon.orange_cushion": "Orange Cushion Chair",
    "block.pixelmon.brown_cushion": "Brown Cushion Chair",
    "block.pixelmon.pink_cushion": "Pink Cushion Chair",
    "block.pixelmon.purple_cushion": "Purple Cushion Chair",
    "block.pixelmon.cyan_cushion": "Cyan Cushion Chair",
    "block.pixelmon.white_cushion": "White Cushion Chair",
    "block.pixelmon.gray_cushion": "Gray Cushion Chair",
    "block.pixelmon.black_cushion": "Black Cushion Chair",
    "block.pixelmon.orange_umbrella": "Orange Umbrella",
    "block.pixelmon.brown_umbrella": "Brown Umbrella",
    "block.pixelmon.pink_umbrella": "Pink Umbrella",
    "block.pixelmon.purple_umbrella": "Purple Umbrella",
    "block.pixelmon.cyan_umbrella": "Cyan Umbrella",
    "block.pixelmon.white_umbrella": "White Umbrella",
    "block.pixelmon.gray_umbrella": "Gray Umbrella",
    "block.pixelmon.black_umbrella": "Black Umbrella",
    "block.pixelmon.purple_clock": "Purple Clock",
    "block.pixelmon.green_clock": "Green Clock",
    "block.pixelmon.cyan_clock": "Cyan Clock",
    "block.pixelmon.white_clock": "White Clock",
    "block.pixelmon.gray_clock": "Gray Clock",
    "block.pixelmon.black_clock": "Black Clock",
    "block.pixelmon.orange_clock": "Orange Clock",
    "block.pixelmon.yellow_clock": "Yellow Clock",
    "block.pixelmon.brown_clock": "Brown Clock",
    "block.pixelmon.red_clock": "Red Clock",
    "block.pixelmon.red_chair": "Red Chair",
    "block.pixelmon.blue_chair": "Blue Chair",
    "block.pixelmon.pink_chair": "Pink Chair",
    "block.pixelmon.purple_chair": "Purple Chair",
    "block.pixelmon.green_chair": "Green Chair",
    "block.pixelmon.cyan_chair": "Cyan Chair",
    "block.pixelmon.white_chair": "White Chair",
    "block.pixelmon.gray_chair": "Gray Chair",
    "block.pixelmon.black_chair": "Black Chair",
    "block.pixelmon.orange_chair": "Orange Chair",
    "block.pixelmon.yellow_chair": "Yellow Chair",
    "block.pixelmon.brown_chair": "Brown Chair",
    "block.pixelmon.blue_folding_chair": "Blue Folding Chair",
    "block.pixelmon.pink_folding_chair": "Pink Folding Chair",
    "block.pixelmon.purple_folding_chair": "Purple Folding Chair",
    "block.pixelmon.cyan_folding_chair": "Cyan Folding Chair",
    "block.pixelmon.white_folding_chair": "White Folding Chair",
    "block.pixelmon.gray_folding_chair": "Gray Folding Chair",
    "block.pixelmon.black_folding_chair": "Black Folding Chair",
    "block.pixelmon.orange_folding_chair": "Orange Folding Chair",
    "block.pixelmon.yellow_folding_chair": "Yellow Folding Chair",
    "block.pixelmon.brown_folding_chair": "Brown Folding Chair",
    "block.pixelmon.red_folding_chair": "Red Folding Chair",
    "block.pixelmon.pink_rug": "Pink Pokéball Rug",
    "block.pixelmon.purple_rug": "Purple Pokéball Rug",
    "block.pixelmon.cyan_rug": "Cyan Pokéball Rug",
    "block.pixelmon.white_rug": "White Pokéball Rug",
    "block.pixelmon.gray_rug": "Gray Pokéball Rug",
    "block.pixelmon.black_rug": "Black Pokéball Rug",
    "block.pixelmon.orange_rug": "Orange Pokéball Rug",
    "block.pixelmon.brown_rug": "Brown Pokéball Rug",
    "block.pixelmon.purple_vending_machine": "Purple Vending Machine",
    "block.pixelmon.cyan_vending_machine": "Cyan Vending Machine",
    "block.pixelmon.white_vending_machine": "White Vending Machine",
    "block.pixelmon.gray_vending_machine": "Gray Vending Machine",
    "block.pixelmon.black_vending_machine": "Black Vending Machine",
    "block.pixelmon.brown_vending_machine": "Brown Vending Machine",
    "block.pixelmon.cyan_water_float": "Cyan Water Float",
    "block.pixelmon.white_water_float": "White Water Float",
    "block.pixelmon.gray_water_float": "Gray Water Float",
    "block.pixelmon.black_water_float": "Black Water Float",
    "block.pixelmon.brown_water_float": "Brown Water Float",
    "block.pixelmon.arc_chalice": "Arc Chalice",
    "block.pixelmon.tidal_bell": "Tidal Bell",
    "item.pixelmon.tidal_bell.tooltip": "A very old-fashioned bell that makes a gentle ringing sound.",
    "block.pixelmon.tidal_bell.tooltip": "A very old-fashioned bell that makes a gentle ringing sound.",
    "block.pixelmon.clear_bell": "Clear Bell",
    "item.pixelmon.clear_bell.tooltip": "A very old-fashioned bell that makes a gentle ringing sound.",
    "block.pixelmon.clear_bell.tooltip": "A very old-fashioned bell that makes a gentle ringing sound.",
    "block.pixelmon.mailbox": "Mailbox",

    "entity.pixelmon.ultra_wormhole": "Ultra Wormhole",
    "entity.pixelmon.pokestop": "PokéStop",
    "entity.pixelmon.den": "Den",
    "entity.pixelmon.painting": "Pixelmon Painting",

    "pixelmon.creativetab.pokeloot": "PokéLoot",
    "pixelmon.creativetab.pokeballs": "Poké Balls",
    "pixelmon.creativetab.badges": "Badges",
    "pixelmon.creativetab.restoration": "Restoration",
    "pixelmon.creativetab.natural": "Natural",
    "pixelmon.creativetab.held_items": "Held Items",
    "pixelmon.creativetab.tm_hm": "TMs/HMs",
    "pixelmon.creativetab.utility_blocks": "Utility Blocks",
    "pixelmon.creativetab.decoration": "Decoration",
    "pixelmon.creativetab.quests": "Quest Items",

    "berry.flavor.spicy": "Spicy",
    "berry.flavor.sweet": "Sweet",
    "berry.flavor.sour": "Sour",
    "berry.flavor.bitter": "Bitter",
    "berry.flavor.dry": "Dry",
    "berry.flavor.none": "Plain",

    "attack.absorb": "Absorb",
    "attack.absorb.description": "A nutrient-draining attack. The user's HP is restored by half the damage taken by the target.",
    "attack.acid": "Acid",
    "attack.acid.description": "The opposing Pokémon are attacked with a spray of harsh acid. This may also lower their Sp. Def stats.",
    "attack.acid_armor": "Acid Armor",
    "attack.acid_armor.description": "The user alters its cellular structure to liquefy itself, sharply raising its Defense stat.",
    "attack.agility": "Agility",
    "attack.agility.description": "The user relaxes and lightens its body to move faster. This sharply raises the Speed stat.",
    "attack.amnesia": "Amnesia",
    "attack.amnesia.description": "The user temporarily empties its mind to forget its concerns. This sharply raises the user's Sp. Def stat.",
    "attack.aurora_beam": "Aurora Beam",
    "attack.aurora_beam.description": "The target is hit with a rainbow-colored beam. This may also lower the target's Attack stat.",
    "attack.barrage": "Barrage",
    "attack.barrage.description": "Round objects are hurled at the target to strike two to five times in a row.",
    "attack.barrier": "Barrier",
    "attack.barrier.description": "The user throws up a sturdy wall that sharply raises its Defense stat.",
    "attack.bide": "Bide",
    "attack.bide.description": "The user endures attacks for two turns, then strikes back to cause double the damage taken.",
    "attack.bind": "Bind",
    "attack.bind.description": "Things such as long bodies or tentacles are used to bind and squeeze the target for four to five turns.",
    "attack.bite": "Bite",
    "attack.bite.description": "The target is bitten with viciously sharp fangs. This may also make the target flinch.",
    "attack.blizzard": "Blizzard",
    "attack.blizzard.description": "A howling blizzard is summoned to strike opposing Pokémon. This may also leave the opposing Pokémon frozen.",
    "attack.body_slam": "Body Slam",
    "attack.body_slam.description": "The user drops onto the target with its full body weight. This may also leave the target with paralysis.",
    "attack.bone_club": "Bone Club",
    "attack.bone_club.description": "The user clubs the target with a bone. This may also make the target flinch.",
    "attack.bonemerang": "Bonemerang",
    "attack.bonemerang.description": "The user throws the bone it holds. The bone loops to hit the target twice, coming and going.",
    "attack.bubble": "Bubble",
    "attack.bubble.description": "A spray of countless bubbles is jetted at the opposing Pokémon. This may also lower their Speed stats.",
    "attack.bubble_beam": "Bubble Beam",
    "attack.bubble_beam.description": "A spray of bubbles is forcefully ejected at the target. This may also lower its Speed stat.",
    "attack.burning_jealousy": "Burning Jealousy",
    "attack.burning_jealousy.description": "The user attacks with energy from jealousy. This leaves all opposing Pokémon that have had their stats boosted during the turn with a burn.",
    "attack.clamp": "Clamp",
    "attack.clamp.description": "The target is clamped and squeezed by the user's very thick and sturdy shell for four to five turns.",
    "attack.coaching": "Coaching",
    "attack.coaching.description": "The user properly coaches its ally Pokémon, boosting their Attack and Defense stats.",
    "attack.comet_punch": "Comet Punch",
    "attack.comet_punch.description": "The target is hit with a flurry of punches that strike two to five times in a row.",
    "attack.confuse_ray": "Confuse Ray",
    "attack.confuse_ray.description": "The target is exposed to a sinister ray that triggers confusion.",
    "attack.confusion": "Confusion",
    "attack.confusion.description": "The target is hit by a weak telekinetic force. This may also confuse the target.",
    "attack.constrict": "Constrict",
    "attack.constrict.description": "The target is attacked with long, creeping tentacles or vines. This may also lower the target's Speed stat.",
    "attack.conversion": "Conversion",
    "attack.conversion.description": "The user changes its type to become the same type as the move at the top of the list of moves it knows.",
    "attack.corrosive_gas": "Corrosive Gas",
    "attack.corrosive_gas.description": "The user surrounds everything around it with highly acidic gas and melts away items they hold.",
    "attack.counter": "Counter",
    "attack.counter.description": "A retaliation move that counters any physical attack, inflicting double the damage taken.",
    "attack.crabhammer": "Crabhammer",
    "attack.crabhammer.description": "The target is hammered with a large pincer. Critical hits land more easily.",
    "attack.cut": "Cut",
    "attack.cut.description": "The target is cut with a scythe or claw. This can also be used to cut down thin trees.",
    "attack.defense_curl": "Defense Curl",
    "attack.defense_curl.description": "The user curls up to conceal weak spots and raise its Defense stat.",
    "attack.dig": "Dig",
    "attack.dig.description": "The user burrows, then attacks on the next turn. It can also be used to exit dungeons.",
    "attack.disable": "Disable",
    "attack.disable.description": "For four turns, this move prevents the target from using the move it last used.",
    "attack.dizzy_punch": "Dizzy Punch",
    "attack.dizzy_punch.description": "The target is hit with rhythmically launched punches. This may also leave the target confused.",
    "attack.double_kick": "Double Kick",
    "attack.double_kick.description": "The target is quickly kicked twice in succession using both feet.",
    "attack.double_slap": "Double Slap",
    "attack.double_slap.description": "The target is slapped repeatedly, back and forth, two to five times in a row.",
    "attack.double_team": "Double Team",
    "attack.double_team.description": "By moving rapidly, the user makes illusory copies of itself to raise its evasiveness.",
    "attack.double-edge": "Double-Edge",
    "attack.double-edge.description": "A reckless, life-risking tackle. This also damages the user quite a lot.",
    "attack.dragon_energy": "Dragon Energy",
    "attack.dragon_energy.description": "Dragon Energy inflicts damage. The higher the user's remaining HP, the more damage this attack does.",
    "attack.dragon_rage": "Dragon Rage",
    "attack.dragon_rage.description": "This attack hits the target with a shock wave of pure rage. This attack always inflicts 40 HP damage.",
    "attack.dream_eater": "Dream Eater",
    "attack.dream_eater.description": "The user eats the dreams of a sleeping target. It absorbs half the damage caused to heal its own HP.",
    "attack.drill_peck": "Drill Peck",
    "attack.drill_peck.description": "A corkscrewing attack with a sharp beak acting as a drill.",
    "attack.earthquake": "Earthquake",
    "attack.earthquake.description": "The user sets off an earthquake that strikes every Pokémon around it.",
    "attack.egg_bomb": "Egg Bomb",
    "attack.egg_bomb.description": "A large egg is hurled at the target with maximum force to inflict damage.",
    "attack.ember": "Ember",
    "attack.ember.description": "The target is attacked with small flames. This may also leave the target with a burn.",
    "attack.expanding_force": "Expanding Force",
    "attack.expanding_force.description": "The user attacks the target with its psychic power. This move's power goes up and damages all opposing Pokémon on Psychic Terrain.",
    "attack.expanding_force.onpsychicterrain": "Expanding Force's range was increased due to the terrain!",
    "attack.explosion": "Explosion",
    "attack.explosion.description": "The user attacks everything around it by causing a tremendous explosion. The user faints upon using this move.",
    "attack.fire_blast": "Fire Blast",
    "attack.fire_blast.description": "The target is attacked with an intense blast of all-consuming fire. This may also leave the target with a burn.",
    "attack.fire_punch": "Fire Punch",
    "attack.fire_punch.description": "The target is punched with a fiery fist. This may also leave the target with a burn.",
    "attack.fire_spin": "Fire Spin",
    "attack.fire_spin.description": "The target becomes trapped within a fierce vortex of fire that rages for four to five turns.",
    "attack.fissure": "Fissure",
    "attack.fissure.description": "The user opens up a fissure in the ground and drops the target in. The target faints instantly if this attack hits.",
    "attack.flamethrower": "Flamethrower",
    "attack.flamethrower.description": "The target is scorched with an intense blast of fire. This may also leave the target with a burn.",
    "attack.flash": "Flash",
    "attack.flash.description": "The user flashes a bright light that cuts the target's accuracy. It can also be used to illuminate dark caves.",
    "attack.fly": "Fly",
    "attack.fly.description": "The user soars and then strikes its target on the next turn. This can also be used to fly to any familiar town.",
    "attack.focus_energy": "Focus Energy",
    "attack.focus_energy.description": "The user takes a deep breath and focuses so that critical hits land more easily.",
    "attack.freezing_glare": "Freezing Glare",
    "attack.freezing_glare.description": "The user shoots its psychic power from its eyes to attack. This may also leave the target frozen.",
    "attack.fury_attack": "Fury Attack",
    "attack.fury_attack.description": "The target is jabbed repeatedly with a horn or beak two to five times in a row.",
    "attack.fury_swipes": "Fury Swipes",
    "attack.fury_swipes.description": "The target is raked with sharp claws or scythes quickly two to five times in a row.",
    "attack.glare": "Glare",
    "attack.glare.description": "The user intimidates the target with the pattern on its belly to cause paralysis.",
    "attack.growl": "Growl",
    "attack.growl.description": "The user growls in an endearing way, making opposing Pokémon less wary. This lowers their Attack stat.",
    "attack.growth": "Growth",
    "attack.growth.description": "The user's body grows all at once, raising the Attack and Sp. Atk stats.",
    "attack.guillotine": "Guillotine",
    "attack.guillotine.description": "A vicious, tearing attack with big pincers. The target faints instantly if this attack hits.",
    "attack.gust": "Gust",
    "attack.gust.description": "A gust of wind is whipped up by wings and launched at the target to inflict damage.",
    "attack.harden": "Harden",
    "attack.harden.description": "The user stiffens all the muscles in its body to raise its Defense stat.",
    "attack.haze": "Haze",
    "attack.haze.description": "The user creates a haze that eliminates every stat change among all the Pokémon engaged in battle.",
    "attack.headbutt": "Headbutt",
    "attack.headbutt.description": "The user sticks out its head and attacks by charging straight into the target. This may also make the target flinch.",
    "attack.high_jump_kick": "High Jump Kick",
    "attack.high_jump_kick.description": "The target is attacked with a knee kick from a jump. If it misses, the user is hurt instead.",
    "attack.horn_attack": "Horn Attack",
    "attack.horn_attack.description": "The target is jabbed with a sharply pointed horn to inflict damage.",
    "attack.horn_drill": "Horn Drill",
    "attack.horn_drill.description": "The user stabs the target with a horn that rotates like a drill. The target faints instantly if this attack hits.",
    "attack.hydro_pump": "Hydro Pump",
    "attack.hydro_pump.description": "The target is blasted by a huge volume of water launched under great pressure.",
    "attack.hyper_beam": "Hyper Beam",
    "attack.hyper_beam.description": "The target is attacked with a powerful beam. The user can't move on the next turn.",
    "attack.hyper_fang": "Hyper Fang",
    "attack.hyper_fang.description": "The user bites hard on the target with its sharp front fangs. This may also make the target flinch.",
    "attack.hypnosis": "Hypnosis",
    "attack.hypnosis.description": "The user employs hypnotic suggestion to make the target fall into a deep sleep.",
    "attack.ice_beam": "Ice Beam",
    "attack.ice_beam.description": "The target is struck with an icy-cold beam of energy. This may also leave the target frozen.",
    "attack.ice_punch": "Ice Punch",
    "attack.ice_punch.description": "The target is punched with an icy fist. This may also leave the target frozen.",
    "attack.jump_kick": "Jump Kick",
    "attack.jump_kick.description": "The user jumps up high, then strikes with a kick. If the kick misses, the user hurts itself.",
    "attack.karate_chop": "Karate Chop",
    "attack.karate_chop.description": "The target is attacked with a sharp chop. Critical hits land more easily.",
    "attack.kinesis": "Kinesis",
    "attack.kinesis.description": "The user distracts the target by bending a spoon. This lowers the target's accuracy.",
    "attack.leech_life": "Leech Life",
    "attack.leech_life.description": "The user drains the target's blood. The user's HP is restored by half the damage taken by the target.",
    "attack.leech_seed": "Leech Seed",
    "attack.leech_seed.description": "A seed is planted on the target. It steals some HP from the target every turn.",
    "attack.leer": "Leer",
    "attack.leer.description": "The user gives opposing Pokémon an intimidating leer that lowers the Defense stat.",
    "attack.lick": "Lick",
    "attack.lick.description": "The target is licked with a long tongue, causing damage. This may also leave the target with paralysis.",
    "attack.light_screen": "Light Screen",
    "attack.light_screen.description": "A wondrous wall of light is put up to reduce damage from special attacks for five turns.",
    "attack.lovely_kiss": "Lovely Kiss",
    "attack.lovely_kiss.description": "With a scary face, the user tries to force a kiss on the target. If it succeeds, the target falls asleep.",
    "attack.low_kick": "Low Kick",
    "attack.low_kick.description": "A powerful low kick that makes the target fall over. The heavier the target, the greater the move's power.",
    "attack.meditate": "Meditate",
    "attack.meditate.description": "The user meditates to awaken the power deep within its body and raise its Attack stat.",
    "attack.mega_drain": "Mega Drain",
    "attack.mega_drain.description": "A nutrient-draining attack. The user's HP is restored by half the damage taken by the target.",
    "attack.mega_kick": "Mega Kick",
    "attack.mega_kick.description": "The target is attacked by a kick launched with muscle-packed power.",
    "attack.mega_punch": "Mega Punch",
    "attack.mega_punch.description": "The target is slugged by a punch thrown with muscle-packed power.",
    "attack.meteor_beam": "Meteor Beam",
    "attack.meteor_beam.description": "In this two-turn attack, the user gathers space power and boosts its Sp. Atk stat, then attacks the target on the next turn.",
    "attack.metronome": "Metronome",
    "attack.metronome.description": "The user waggles a finger and stimulates its brain into randomly using nearly any move.",
    "attack.mimic": "Mimic",
    "attack.mimic.description": "The user copies the target's last move. The move can be used during battle until the Pokémon is switched out.",
    "attack.minimize": "Minimize",
    "attack.minimize.description": "The user compresses its body to make itself look smaller, which sharply raises its evasiveness.",
    "attack.mirror_move": "Mirror Move",
    "attack.mirror_move.description": "The user counters the target by mimicking the target's last move.",
    "attack.mist": "Mist",
    "attack.mist.description": "The user cloaks itself and its allies in a white mist that prevents any of their stats from being lowered for five turns.",
    "attack.night_shade": "Night Shade",
    "attack.night_shade.description": "The user makes the target see a frightening mirage. It inflicts damage equal to the user's level.",
    "attack.pay_day": "Pay Day",
    "attack.pay_day.description": "Numerous coins are hurled at the target to inflict damage. Money is earned after the battle.",
    "attack.peck": "Peck",
    "attack.peck.description": "The target is jabbed with a sharply pointed beak or horn.",
    "attack.petal_dance": "Petal Dance",
    "attack.petal_dance.description": "The user attacks the target by scattering petals for two to three turns. The user then becomes confused.",
    "attack.pin_missile": "Pin Missile",
    "attack.pin_missile.description": "Sharp spikes are shot at the target in rapid succession. They hit two to five times in a row.",
    "attack.poison_gas": "Poison Gas",
    "attack.poison_gas.description": "A cloud of poison gas is sprayed in the face of opposing Pokémon. This may also poison those hit.",
    "attack.poison_powder": "Poison Powder",
    "attack.poison_powder.description": "The user scatters a cloud of poisonous dust on the target. This may also poison the target.",
    "attack.poison_sting": "Poison Sting",
    "attack.poison_sting.description": "The user stabs the target with a poisonous stinger. This may also poison the target.",
    "attack.pound": "Pound",
    "attack.pound.description": "The target is physically pounded with a long tail, a foreleg, or the like.",
    "attack.psybeam": "Psybeam",
    "attack.psybeam.description": "The target is attacked with a peculiar ray. This may also leave the target confused.",
    "attack.psychic": "Psychic",
    "attack.psychic.description": "The target is hit by a strong telekinetic force. This may also lower the target's Sp. Def stat.",
    "attack.psywave": "Psywave",
    "attack.psywave.description": "The target is attacked with an odd psychic wave. The attack varies in intensity.",
    "attack.pyro_ball": "Pyro Ball",
    "attack.pyro_ball.description": "The user attacks by igniting a small stone and launching it as a fiery ball at the target. This may also leave the target with a burn.",
    "attack.quick_attack": "Quick Attack",
    "attack.quick_attack.description": "The user lunges at the target at a speed that makes it almost invisible. This move always goes first.",
    "attack.rage": "Rage",
    "attack.rage.description": "As long as this move is in use, the power of rage raises the Attack stat each time the user is hit in battle.",
    "attack.razor_leaf": "Razor Leaf",
    "attack.razor_leaf.description": "Sharp-edged leaves are launched to slash at the opposing Pokémon. Critical hits land more easily.",
    "attack.razor_wind": "Razor Wind",
    "attack.razor_wind.description": "A two-turn attack. Blades of wind hit opposing Pokémon on the second turn. Critical hits land more easily.",
    "attack.recover": "Recover",
    "attack.recover.description": "Restoring its own cells, the user restores its own HP by half of its max HP.",
    "attack.reflect": "Reflect",
    "attack.reflect.description": "A wondrous wall of light is put up to reduce damage from physical attacks for five turns.",
    "attack.rest": "Rest",
    "attack.rest.description": "The user goes to sleep for two turns. This fully restores the user's HP and heals any status conditions.",
    "attack.revelation_dance": "Revelation Dance",
    "attack.revelation_dance.description": "The user attacks the target by dancing very hard. The user's type determines the type of this move.",
    "attack.rising_voltage": "Rising Voltage",
    "attack.rising_voltage.description": "The user attacks with electric voltage rising from the ground. This move's power doubles when the target is on Electric Terrain.",
    "attack.roar": "Roar",
    "attack.roar.description": "The target is scared off and a different Pokémon is dragged out. In the wild, this ends a battle against a single Pokémon.",
    "attack.rock_slide": "Rock Slide",
    "attack.rock_slide.description": "Large boulders are hurled at the opposing Pokémon to inflict damage. This may also make the opposing Pokémon flinch.",
    "attack.rock_throw": "Rock Throw",
    "attack.rock_throw.description": "The user picks up and throws a small rock at the target to attack.",
    "attack.rolling_kick": "Rolling Kick",
    "attack.rolling_kick.description": "The user lashes out with a quick, spinning kick. This may also make the target flinch.",
    "attack.sand_attack": "Sand Attack",
    "attack.sand_attack.description": "Sand is hurled in the target's face, reducing the target's accuracy.",
    "attack.scorching_sands": "Scorching Sands",
    "attack.scorching_sands.description": "The user throws scorching sand at the target to attack. This may also leave the target with a burn.",
    "attack.scratch": "Scratch",
    "attack.scratch.description": "Hard, pointed, sharp claws rake the target to inflict damage.",
    "attack.screech": "Screech",
    "attack.screech.description": "An earsplitting screech harshly lowers the target's Defense stat.",
    "attack.seismic_toss": "Seismic Toss",
    "attack.seismic_toss.description": "The target is thrown using the power of gravity. It inflicts damage equal to the user's level.",
    "attack.self-destruct": "Self-Destruct",
    "attack.self-destruct.description": "The user attacks everything around it by causing an explosion. The user faints upon using this move.",
    "attack.sharpen": "Sharpen",
    "attack.sharpen.description": "The user lowers its polygon count to make itself more jagged, raising the Attack stat.",
    "attack.sing": "Sing",
    "attack.sing.description": "A soothing lullaby is sung in a calming voice that puts the target into a deep slumber.",
    "attack.skull_bash": "Skull Bash",
    "attack.skull_bash.description": "The user tucks in its head to raise its Defense in the first turn, then rams the target on the next turn.",
    "attack.sky_attack": "Sky Attack",
    "attack.sky_attack.description": "A second-turn attack move where critical hits land more easily. This may also make the target flinch.",
    "attack.slam": "Slam",
    "attack.slam.description": "The target is slammed with a long tail, vines, or the like to inflict damage.",
    "attack.slash": "Slash",
    "attack.slash.description": "The target is attacked with a slash of claws or blades. Critical hits land more easily.",
    "attack.sleep_powder": "Sleep Powder",
    "attack.sleep_powder.description": "The user scatters a big cloud of sleep-inducing dust around the target.",
    "attack.sludge": "Sludge",
    "attack.sludge.description": "Unsanitary sludge is hurled at the target. This may also poison the target.",
    "attack.smog": "Smog",
    "attack.smog.description": "The target is attacked with a discharge of filthy gases. This may also poison the target.",
    "attack.smokescreen": "Smokescreen",
    "attack.smokescreen.description": "The user releases an obscuring cloud of smoke or ink. This lowers the target's accuracy.",
    "attack.soft-boiled": "Soft-Boiled",
    "attack.soft-boiled.description": "The user restores its own HP by up to half of its max HP. May also be used in the field to heal HP.",
    "attack.solar_beam": "Solar Beam",
    "attack.solar_beam.description": "A two-turn attack. The user gathers light, then blasts a bundled beam on the next turn.",
    "attack.sonic_boom": "Sonic Boom",
    "attack.sonic_boom.description": "The target is hit with a destructive shock wave that always inflicts 20 HP damage.",
    "attack.spike_cannon": "Spike Cannon",
    "attack.spike_cannon.description": "Sharp spikes are shot at the target in rapid succession. They hit two to five times in a row.",
    "attack.splash": "Splash",
    "attack.splash.description": "The user just flops and splashes around to no effect at all...",
    "attack.spore": "Spore",
    "attack.spore.description": "The user scatters bursts of spores that induce sleep.",
    "attack.stomp": "Stomp",
    "attack.stomp.description": "The target is stomped with a big foot. This may also make the target flinch.",
    "attack.strength": "Strength",
    "attack.strength.description": "The target is slugged with a punch thrown at maximum power. This can also be used to move heavy boulders.",
    "attack.string_shot": "String Shot",
    "attack.string_shot.description": "The opposing Pokémon are bound with silk blown from the user's mouth that harshly lowers the Speed stat.",
    "attack.struggle": "Struggle",
    "attack.struggle.description": "An attack that is used in desperation only if the user has no PP. This also damages the user a little.",
    "attack.stun_spore": "Stun Spore",
    "attack.stun_spore.description": "The user scatters a cloud of numbing powder that paralyzes the target.",
    "attack.submission": "Submission",
    "attack.submission.description": "The user grabs the target and recklessly dives for the ground. This also damages the user a little.",
    "attack.substitute": "Substitute",
    "attack.substitute.description": "The user makes a copy of itself using some of its HP. The copy serves as the user's decoy.",
    "attack.super_fang": "Super Fang",
    "attack.super_fang.description": "The user chomps hard on the target with its sharp front fangs. This cuts the target's HP in half.",
    "attack.supersonic": "Supersonic",
    "attack.supersonic.description": "The user generates odd sound waves from its body that confuse the target.",
    "attack.surf": "Surf",
    "attack.surf.description": "The user attacks everything around it by swamping its surroundings with a giant wave. This can also be used for crossing water.",
    "attack.surging_strikes": "Surging Strikes",
    "attack.surging_strikes.description": "The user, having mastered the Water style, strikes the target with a flowing motion three times in a row. This attack always results in a critical hit.",
    "attack.swift": "Swift",
    "attack.swift.description": "Star-shaped rays are shot at the opposing Pokémon. This attack never misses.",
    "attack.swords_dance": "Swords Dance",
    "attack.swords_dance.description": "A frenetic dance to uplift the fighting spirit. This sharply raises the user's Attack stat.",
    "attack.tackle": "Tackle",
    "attack.tackle.description": "A physical attack in which the user charges and slams into the target with its whole body.",
    "attack.tail_whip": "Tail Whip",
    "attack.tail_whip.description": "The user wags its tail cutely, making opposing Pokémon less wary and lowering their Defense stat.",
    "attack.take_down": "Take Down",
    "attack.take_down.description": "A reckless, full-body charge attack for slamming into the target. This also damages the user a little.",
    "attack.teleport": "Teleport",
    "attack.teleport.description": "Use it to flee from any wild Pokémon. It can also warp to the last Pokémon Center visited.",
    "attack.terrain_pulse": "Terrain Pulse",
    "attack.terrain_pulse.description": "The user utilizes the power of the terrain to attack. This move's type and power changes depending on the terrain when it's used.",
    "attack.thrash": "Thrash",
    "attack.thrash.description": "The user rampages and attacks for two to three turns. The user then becomes confused.",
    "attack.thunder": "Thunder",
    "attack.thunder.description": "A wicked thunderbolt is dropped on the target to inflict damage. This may also leave the target with paralysis.",
    "attack.thunder_punch": "Thunder Punch",
    "attack.thunder_punch.description": "The target is punched with an electrified fist. This may also leave the target with paralysis.",
    "attack.thunder_shock": "Thunder Shock",
    "attack.thunder_shock.description": "A jolt of electricity crashes down on the target to inflict damage. This may also leave the target with paralysis.",
    "attack.thunder_wave": "Thunder Wave",
    "attack.thunder_wave.description": "The user launches a weak jolt of electricity that paralyzes the target.",
    "attack.thunderbolt": "Thunderbolt",
    "attack.thunderbolt.description": "A strong electric blast crashes down on the target. This may also leave the target with paralysis.",
    "attack.thunderous_kick": "Thunderous Kick",
    "attack.thunderous_kick.description": "The user overwhelms the target with lightning-like movement before delivering a kick. This also lowers the target's Defense stat.",
    "attack.toxic": "Toxic",
    "attack.toxic.description": "A move that leaves the target badly poisoned. Its poison damage worsens every turn.",
    "attack.transform": "Transform",
    "attack.transform.description": "The user transforms into a copy of the target right down to having the same move set.",
    "attack.tri_attack": "Tri Attack",
    "attack.tri_attack.description": "The user strikes with a simultaneous three-beam attack. May also burn, freeze, or leave the target with paralysis.",
    "attack.twineedle": "Twineedle",
    "attack.twineedle.description": "The user damages the target twice in succession by jabbing it with two spikes. This may also poison the target.",
    "attack.vise_grip": "Vise Grip",
    "attack.vise_grip.description": "The target is gripped and squeezed from both sides to inflict damage.",
    "attack.vine_whip": "Vine Whip",
    "attack.vine_whip.description": "The target is struck with slender, whiplike vines to inflict damage.",
    "attack.water_gun": "Water Gun",
    "attack.water_gun.description": "The target is blasted with a forceful shot of water.",
    "attack.waterfall": "Waterfall",
    "attack.waterfall.description": "The user charges at the target and may make it flinch. This can also be used to climb a waterfall.",
    "attack.whirlwind": "Whirlwind",
    "attack.whirlwind.description": "The target is blown away, and a different Pokémon is dragged out. In the wild, this ends a battle against a single Pokémon.",
    "attack.wicked_blow": "Wicked Blow",
    "attack.wicked_blow.description": "The user, having mastered the Dark style, strikes the target with a fierce blow. This attack always results in a critical hit.",
    "attack.wing_attack": "Wing Attack",
    "attack.wing_attack.description": "The target is struck with large, imposing wings spread wide to inflict damage.",
    "attack.withdraw": "Withdraw",
    "attack.withdraw.description": "The user withdraws its body into its hard shell, raising its Defense stat.",
    "attack.wrap": "Wrap",
    "attack.wrap.description": "A long body or vines are used to wrap and squeeze the target for four to five turns.",
    "attack.aeroblast": "Aeroblast",
    "attack.aeroblast.description": "A vortex of air is shot at the target to inflict damage. Critical hits land more easily.",
    "attack.ancient_power": "Ancient Power",
    "attack.ancient_power.description": "The user attacks with a prehistoric power. It may also raise all the user's stats at once.",
    "attack.attract": "Attract",
    "attack.attract.description": "If it is the opposite gender of the user, the target becomes infatuated and less likely to attack.",
    "attack.baton_pass": "Baton Pass",
    "attack.baton_pass.description": "The user switches places with a party Pokémon in waiting and passes along any stat changes.",
    "attack.beat_up": "Beat Up",
    "attack.beat_up.description": "The user gets all party Pokémon to attack the target. The more party Pokémon, the greater the number of attacks.",
    "attack.belly_drum": "Belly Drum",
    "attack.belly_drum.description": "The user maximizes its Attack stat in exchange for HP equal to half its max HP.",
    "attack.bone_rush": "Bone Rush",
    "attack.bone_rush.description": "The user strikes the target with a hard bone two to five times in a row.",
    "attack.charm": "Charm",
    "attack.charm.description": "The user gazes at the target rather charmingly, making it less wary. This harshly lowers its Attack stat.",
    "attack.conversion_2": "Conversion 2",
    "attack.conversion_2.description": "The user changes its type to make itself resistant to the type of the attack the opponent used last.",
    "attack.cotton_spore": "Cotton Spore",
    "attack.cotton_spore.description": "The user releases cotton-like spores that cling to the opposing Pokémon, which harshly lowers their Speed stats.",
    "attack.cross_chop": "Cross Chop",
    "attack.cross_chop.description": "The user delivers a double chop with its forearms crossed. Critical hits land more easily.",
    "attack.crunch": "Crunch",
    "attack.crunch.description": "The user crunches up the target with sharp fangs. This may also lower the target's Defense stat.",
    "attack.curse": "Curse",
    "attack.curse.description": "A move that works differently for the Ghost type than for all other types.",
    "attack.destiny_bond": "Destiny Bond",
    "attack.destiny_bond.description": "When this move is used, if the user faints, the Pokémon that landed the knockout hit also faints.",
    "attack.detect": "Detect",
    "attack.detect.description": "Enables the user to evade all attacks. Its chance of failing rises if it is used in succession.",
    "attack.dragon_breath": "Dragon Breath",
    "attack.dragon_breath.description": "The user exhales a mighty gust that inflicts damage. This may also leave the target with paralysis.",
    "attack.dynamic_punch": "Dynamic Punch",
    "attack.dynamic_punch.description": "The user punches the target with full, concentrated power. This confuses the target if it hits.",
    "attack.encore": "Encore",
    "attack.encore.description": "The user compels the target to keep using only the move it last used for three turns.",
    "attack.endure": "Endure",
    "attack.endure.description": "The user endures any attack with at least 1 HP. Its chance of failing rises if it is used in succession.",
    "attack.extreme_speed": "Extreme Speed",
    "attack.extreme_speed.description": "The user charges the target at blinding speed. This move always goes first.",
    "attack.false_swipe": "False Swipe",
    "attack.false_swipe.description": "A restrained attack that prevents the target from fainting. The target is left with at least 1 HP.",
    "attack.feint_attack": "Feint Attack",
    "attack.feint_attack.description": "The user approaches the target disarmingly, then throws a sucker punch. This attack never misses.",
    "attack.flail": "Flail",
    "attack.flail.description": "The user flails about aimlessly to attack. The less HP the user has, the greater the move's power.",
    "attack.flame_wheel": "Flame Wheel",
    "attack.flame_wheel.description": "The user cloaks itself in fire and charges at the target. This may also leave the target with a burn.",
    "attack.foresight": "Foresight",
    "attack.foresight.description": "Enables a Ghost-type target to be hit by Normal- and Fighting-type attacks. This also enables an evasive target to be hit.",
    "attack.frustration": "Frustration",
    "attack.frustration.description": "A full-power attack that grows more powerful the less the user likes its Trainer.",
    "attack.fury_cutter": "Fury Cutter",
    "attack.fury_cutter.description": "The target is slashed with scythes or claws. This attack becomes more powerful if it hits in succession.",
    "attack.future_sight": "Future Sight",
    "attack.future_sight.description": "Two turns after this move is used, a hunk of psychic energy attacks the target.",
    "attack.giga_drain": "Giga Drain",
    "attack.giga_drain.description": "A nutrient-draining attack. The user's HP is restored by half the damage taken by the target.",
    "attack.heal_bell": "Heal Bell",
    "attack.heal_bell.description": "The user makes a soothing bell chime to heal the status conditions of all the party Pokémon.",
    "attack.hidden_power": "Hidden Power",
    "attack.hidden_power.description": "A unique attack that varies in type depending on the Pokémon using it.",
    "attack.icy_wind": "Icy Wind",
    "attack.icy_wind.description": "The user attacks with a gust of chilled air. This also lowers the opposing Pokémon's Speed stats.",
    "attack.iron_tail": "Iron Tail",
    "attack.iron_tail.description": "The target is slammed with a steel-hard tail. This may also lower the target's Defense stat.",
    "attack.lock-on": "Lock-On",
    "attack.lock-on.description": "The user takes sure aim at the target. This ensures the next attack does not miss the target.",
    "attack.mach_punch": "Mach Punch",
    "attack.mach_punch.description": "The user throws a punch at blinding speed. This move always goes first.",
    "attack.magnitude": "Magnitude",
    "attack.magnitude.description": "The user attacks everything around it with a ground-shaking quake. Its power varies.",
    "attack.mean_look": "Mean Look",
    "attack.mean_look.description": "The user pins the target with a dark, arresting look. The target becomes unable to flee.",
    "attack.megahorn": "Megahorn",
    "attack.megahorn.description": "Using its tough and impressive horn, the user rams into the target with no letup.",
    "attack.metal_claw": "Metal Claw",
    "attack.metal_claw.description": "The target is raked with steel claws. This may also raise the user's Attack stat.",
    "attack.milk_drink": "Milk Drink",
    "attack.milk_drink.description": "The user restores its own HP by up to half of its max HP. May also be used in the field to heal HP.",
    "attack.mind_reader": "Mind Reader",
    "attack.mind_reader.description": "The user senses the target's movements with its mind to ensure its next attack does not miss the target.",
    "attack.mirror_coat": "Mirror Coat",
    "attack.mirror_coat.description": "A retaliation move that counters any special attack, inflicting double the damage taken.",
    "attack.moonlight": "Moonlight",
    "attack.moonlight.description": "The user restores its own HP. The amount of HP regained varies with the weather.",
    "attack.morning_sun": "Morning Sun",
    "attack.morning_sun.description": "The user restores its own HP. The amount of HP regained varies with the weather.",
    "attack.mud-slap": "Mud-Slap",
    "attack.mud-slap.description": "The user hurls mud in the target's face to inflict damage and lower its accuracy.",
    "attack.nightmare": "Nightmare",
    "attack.nightmare.description": "A sleeping target sees a nightmare that inflicts some damage every turn.",
    "attack.octazooka": "Octazooka",
    "attack.octazooka.description": "The user attacks by spraying ink at the target's face or eyes. This may also lower the target's accuracy.",
    "attack.octolock": "Octolock",
    "attack.octolock.description": "The user locks the target in and prevents it from fleeing. This move also lowers the target's Defense and Sp. Def every turn.",
    "attack.outrage": "Outrage",
    "attack.outrage.description": "The user rampages and attacks for two to three turns. It then becomes confused, however.",
    "attack.pain_split": "Pain Split",
    "attack.pain_split.description": "The user adds its HP to the target's HP, then equally shares the combined HP with the target.",
    "attack.perish_song": "Perish Song",
    "attack.perish_song.description": "Any Pokémon that hears this song faints in three turns, unless it switches out of battle.",
    "attack.powder_snow": "Powder Snow",
    "attack.powder_snow.description": "The user attacks with a chilling gust of powdery snow. This may also freeze the opposing Pokémon.",
    "attack.present": "Present",
    "attack.present.description": "The user attacks by giving the target a gift with a hidden trap. It restores HP sometimes, however.",
    "attack.protect": "Protect",
    "attack.protect.description": "Enables the user to evade all attacks. Its chance of failing rises if it is used in succession.",
    "attack.psych_up": "Psych Up",
    "attack.psych_up.description": "The user hypnotizes itself into copying any stat change made by the target.",
    "attack.pursuit": "Pursuit",
    "attack.pursuit.description": "An attack move that inflicts double damage if used on a target that is switching out of battle.",
    "attack.rain_dance": "Rain Dance",
    "attack.rain_dance.description": "The user summons a heavy rain that falls for five turns, powering up Water-type moves.",
    "attack.rapid_spin": "Rapid Spin",
    "attack.rapid_spin.description": "A spin attack that can also eliminate such moves as Bind, Wrap, Leech Seed, and Spikes.",
    "attack.return": "Return",
    "attack.return.description": "A full-power attack that grows more powerful the more the user likes its Trainer.",
    "attack.reversal": "Reversal",
    "attack.reversal.description": "An all-out attack that becomes more powerful the less HP the user has.",
    "attack.rock_smash": "Rock Smash",
    "attack.rock_smash.description": "The user attacks with a punch. This may also lower the target's Defense stat. This move can also shatter rocks in the field.",
    "attack.rollout": "Rollout",
    "attack.rollout.description": "The user continually rolls into the target over five turns. It becomes more powerful each time it hits.",
    "attack.sacred_fire": "Sacred Fire",
    "attack.sacred_fire.description": "The target is razed with a mystical fire of great intensity. This may also leave the target with a burn.",
    "attack.safeguard": "Safeguard",
    "attack.safeguard.description": "The user creates a protective field that prevents status conditions for five turns.",
    "attack.sandstorm": "Sandstorm",
    "attack.sandstorm.description": "A five-turn sandstorm is summoned to hurt all combatants except the Rock, Ground, and Steel types.",
    "attack.scary_face": "Scary Face",
    "attack.scary_face.description": "The user frightens the target with a scary face to harshly lower its Speed stat.",
    "attack.shadow_ball": "Shadow Ball",
    "attack.shadow_ball.description": "The user hurls a shadowy blob at the target. This may also lower the target's Sp. Def stat.",
    "attack.sketch": "Sketch",
    "attack.sketch.description": "It enables the user to permanently learn the move last used by the target. Once used, Sketch disappears.",
    "attack.sleep_talk": "Sleep Talk",
    "attack.sleep_talk.description": "While it is asleep, the user randomly uses one of the moves it knows.",
    "attack.sludge_bomb": "Sludge Bomb",
    "attack.sludge_bomb.description": "Unsanitary sludge is hurled at the target. This may also poison the target.",
    "attack.snore": "Snore",
    "attack.snore.description": "An attack that can be used only if the user is asleep. The harsh noise may also make the target flinch.",
    "attack.spark": "Spark",
    "attack.spark.description": "The user throws an electrically charged tackle at the target. This may also leave the target with paralysis.",
    "attack.spider_web": "Spider Web",
    "attack.spider_web.description": "The user ensnares the target with thin, gooey silk so it can't flee from battle.",
    "attack.spikes": "Spikes",
    "attack.spikes.description": "The user lays a trap of spikes at the opposing team's feet. The trap hurts Pokémon that switch into battle.",
    "attack.spite": "Spite",
    "attack.spite.description": "The user unleashes its grudge on the move last used by the target by cutting 4 PP from it.",
    "attack.steel_wing": "Steel Wing",
    "attack.steel_wing.description": "The target is hit with wings of steel. This may also raise the user's Defense stat.",
    "attack.sunny_day": "Sunny Day",
    "attack.sunny_day.description": "The user intensifies the sun for five turns, powering up Fire-type moves.",
    "attack.swagger": "Swagger",
    "attack.swagger.description": "The user enrages and confuses the target. However, this also sharply raises the target's Attack stat.",
    "attack.sweet_kiss": "Sweet Kiss",
    "attack.sweet_kiss.description": "The user kisses the target with a sweet, angelic cuteness that causes confusion.",
    "attack.sweet_scent": "Sweet Scent",
    "attack.sweet_scent.description": "A sweet scent that harshly lowers opposing Pokémon's evasiveness. This also lures wild Pokémon if used in places such as tall grass.",
    "attack.synthesis": "Synthesis",
    "attack.synthesis.description": "The user restores its own HP. The amount of HP regained varies with the weather.",
    "attack.thief": "Thief",
    "attack.thief.description": "The user attacks and steals the target's held item simultaneously. The user can't steal anything if it already holds an item.",
    "attack.triple_kick": "Triple Kick",
    "attack.triple_kick.description": "A consecutive three-kick attack that becomes more powerful with each successive hit.",
    "attack.twister": "Twister",
    "attack.twister.description": "The user whips up a vicious tornado to tear at the opposing Pokémon. This may also make them flinch.",
    "attack.vital_throw": "Vital Throw",
    "attack.vital_throw.description": "The user attacks last. In return, this throw move never misses.",
    "attack.whirlpool": "Whirlpool",
    "attack.whirlpool.description": "The user traps the target in a violent swirling whirlpool for four to five turns.",
    "attack.zap_cannon": "Zap Cannon",
    "attack.zap_cannon.description": "The user fires an electric blast like a cannon to inflict damage and cause paralysis.",
    "attack.aerial_ace": "Aerial Ace",
    "attack.aerial_ace.description": "The user confounds the target with speed, then slashes. This attack never misses.",
    "attack.air_cutter": "Air Cutter",
    "attack.air_cutter.description": "The user launches razor-like wind to slash the opposing Pokémon. Critical hits land more easily.",
    "attack.arm_thrust": "Arm Thrust",
    "attack.arm_thrust.description": "The user lets loose a flurry of open-palmed arm thrusts that hit two to five times in a row.",
    "attack.aromatherapy": "Aromatherapy",
    "attack.aromatherapy.description": "The user releases a soothing scent that heals all status conditions affecting the user's party.",
    "attack.assist": "Assist",
    "attack.assist.description": "The user hurriedly and randomly uses a move among those known by other Pokémon in the party.",
    "attack.astonish": "Astonish",
    "attack.astonish.description": "The user attacks the target while shouting in a startling fashion. This may also make the target flinch.",
    "attack.astral_barrage": "Astral Barrage",
    "attack.astral_barrage.description": "The user attacks by sending a frightful amount of small ghosts at opposing Pokémon.",
    "attack.blast_burn": "Blast Burn",
    "attack.blast_burn.description": "The target is razed by a fiery explosion. The user can't move on the next turn.",
    "attack.blaze_kick": "Blaze Kick",
    "attack.blaze_kick.description": "The user launches a kick that lands a critical hit more easily. This may also leave the target with a burn.",
    "attack.block": "Block",
    "attack.block.description": "The user blocks the target's way with arms spread wide to prevent escape.",
    "attack.bounce": "Bounce",
    "attack.bounce.description": "The user bounces up high, then drops on the target on the second turn. This may also leave the target with paralysis.",
    "attack.brick_break": "Brick Break",
    "attack.brick_break.description": "The user attacks with a swift chop. It can also break barriers, such as Light Screen and Reflect.",
    "attack.bulk_up": "Bulk Up",
    "attack.bulk_up.description": "The user tenses its muscles to bulk up its body, raising both its Attack and Defense stats.",
    "attack.bullet_seed": "Bullet Seed",
    "attack.bullet_seed.description": "The user forcefully shoots seeds at the target two to five times in a row.",
    "attack.calm_mind": "Calm Mind",
    "attack.calm_mind.description": "The user quietly focuses its mind and calms its spirit to raise its Sp. Atk and Sp. Def stats.",
    "attack.camouflage": "Camouflage",
    "attack.camouflage.description": "The user's type is changed depending on its environment, such as at water's edge, in grass, or in a cave.",
    "attack.charge": "Charge",
    "attack.charge.description": "The user boosts the power of the Electric move it uses on the next turn. This also raises the user's Sp. Def stat.",
    "attack.cosmic_power": "Cosmic Power",
    "attack.cosmic_power.description": "The user absorbs a mystical power from space to raise its Defense and Sp. Def stats.",
    "attack.covet": "Covet",
    "attack.covet.description": "The user endearingly approaches the target, then steals the target's held item.",
    "attack.crush_claw": "Crush Claw",
    "attack.crush_claw.description": "The user slashes the target with hard and sharp claws. This may also lower the target's Defense.",
    "attack.dive": "Dive",
    "attack.dive.description": "Diving on the first turn, the user floats up and attacks on the next turn. It can be used to dive deep in the ocean.",
    "attack.doom_desire": "Doom Desire",
    "attack.doom_desire.description": "Two turns after this move is used, the user blasts the target with a concentrated bundle of light.",
    "attack.dragon_claw": "Dragon Claw",
    "attack.dragon_claw.description": "The user slashes the target with huge, sharp claws.",
    "attack.dragon_dance": "Dragon Dance",
    "attack.dragon_dance.description": "The user vigorously performs a mystic, powerful dance that boosts its Attack and Speed stats.",
    "attack.endeavor": "Endeavor",
    "attack.endeavor.description": "An attack move that cuts down the target's HP to equal the user's HP.",
    "attack.eruption": "Eruption",
    "attack.eruption.description": "The user attacks opposing Pokémon with explosive fury. The lower the user's HP, the lower the move's power.",
    "attack.extrasensory": "Extrasensory",
    "attack.extrasensory.description": "The user attacks with an odd, unseeable power. This may also make the target flinch.",
    "attack.facade": "Facade",
    "attack.facade.description": "An attack move that doubles its power if the user is poisoned, burned, or has paralysis.",
    "attack.fake_out": "Fake Out",
    "attack.fake_out.description": "An attack that hits first and makes the target flinch. It only works the first turn the user is in battle.",
    "attack.fake_tears": "Fake Tears",
    "attack.fake_tears.description": "The user feigns crying to fluster the target, harshly lowering its Sp. Def stat.",
    "attack.feather_dance": "Feather Dance",
    "attack.feather_dance.description": "The user covers the target's body with a mass of down that harshly lowers its Attack stat.",
    "attack.flatter": "Flatter",
    "attack.flatter.description": "Flattery is used to confuse the target. However, this also raises the target's Sp. Atk stat.",
    "attack.focus_punch": "Focus Punch",
    "attack.focus_punch.description": "The user focuses its mind before launching a punch. This move fails if the user is hit before it is used.",
    "attack.follow_me": "Follow Me",
    "attack.follow_me.description": "The user draws attention to itself, making all targets take aim only at the user.",
    "attack.frenzy_plant": "Frenzy Plant",
    "attack.frenzy_plant.description": "The user slams the target with an enormous tree. The user can't move on the next turn.",
    "attack.grass_whistle": "Grass Whistle",
    "attack.grass_whistle.description": "The user plays a pleasant melody that lulls the target into a deep sleep.",
    "attack.grudge": "Grudge",
    "attack.grudge.description": "If the user faints, the user's grudge fully depletes the PP of the opponent's move that knocked it out.",
    "attack.hail": "Hail",
    "attack.hail.description": "The user summons a hailstorm lasting five turns. It damages all Pokémon except the Ice type.",
    "attack.heat_wave": "Heat Wave",
    "attack.heat_wave.description": "The user attacks by exhaling hot breath on the opposing Pokémon. This may also leave those Pokémon with a burn.",
    "attack.helping_hand": "Helping Hand",
    "attack.helping_hand.description": "The user assists an ally by boosting the power of that ally's attack.",
    "attack.howl": "Howl",
    "attack.howl.description": "The user howls loudly to raise its spirit, which raises its Attack stat.",
    "attack.hydro_cannon": "Hydro Cannon",
    "attack.hydro_cannon.description": "The target is hit by a watery blast. The user can't move on the next turn.",
    "attack.hyper_voice": "Hyper Voice",
    "attack.hyper_voice.description": "The user lets loose a horribly echoing shout with the power to inflict damage.",
    "attack.ice_ball": "Ice Ball",
    "attack.ice_ball.description": "The user continually rolls into the target over five turns. It becomes stronger each time it hits.",
    "attack.icicle_spear": "Icicle Spear",
    "attack.icicle_spear.description": "The user launches sharp icicles at the target two to five times in a row.",
    "attack.imprison": "Imprison",
    "attack.imprison.description": "If opposing Pokémon know any move also known by the user, they are prevented from using it.",
    "attack.ingrain": "Ingrain",
    "attack.ingrain.description": "The user lays roots that restore its HP on every turn. Because it is rooted, it can't switch out.",
    "attack.iron_defense": "Iron Defense",
    "attack.iron_defense.description": "The user hardens its body's surface like iron, sharply raising its Defense stat.",
    "attack.knock_off": "Knock Off",
    "attack.knock_off.description": "The user slaps down the target's held item, and that item can't be used in that battle. The move does more damage if the target has a held item.",
    "attack.leaf_blade": "Leaf Blade",
    "attack.leaf_blade.description": "The user handles a sharp leaf like a sword and attacks by cutting its target. Critical hits land more easily.",
    "attack.luster_purge": "Luster Purge",
    "attack.luster_purge.description": "The user lets loose a damaging burst of light. This may also lower the target's Sp. Def stat.",
    "attack.magic_coat": "Magic Coat",
    "attack.magic_coat.description": "A barrier reflects back to the target moves like Leech Seed and moves that damage status.",
    "attack.magical_leaf": "Magical Leaf",
    "attack.magical_leaf.description": "The user scatters curious leaves that chase the target. This attack never misses.",
    "attack.memento": "Memento",
    "attack.memento.description": "The user faints when using this move. In return, this harshly lowers the target's Attack and Sp. Atk stats.",
    "attack.metal_sound": "Metal Sound",
    "attack.metal_sound.description": "A horrible sound like scraping metal harshly lowers the target's Sp. Def stat.",
    "attack.meteor_mash": "Meteor Mash",
    "attack.meteor_mash.description": "The target is hit with a hard punch fired like a meteor. This may also raise the user's Attack stat.",
    "attack.mist_ball": "Mist Ball",
    "attack.mist_ball.description": "A mist-like flurry of down envelops and damages the target. This may also lower the target's Sp. Atk stat.",
    "attack.mud_shot": "Mud Shot",
    "attack.mud_shot.description": "The user attacks by hurling a blob of mud at the target. This also lowers the target's Speed stat.",
    "attack.mud_sport": "Mud Sport",
    "attack.mud_sport.description": "The user covers itself with mud. This weakens Electric-type moves for five turns.",
    "attack.muddy_water": "Muddy Water",
    "attack.muddy_water.description": "The user attacks by shooting muddy water at the opposing Pokémon. This may also lower their accuracy.",
    "attack.nature_power": "Nature Power",
    "attack.nature_power.description": "An attack that makes use of nature's power. Its effects vary depending on the user's environment.",
    "attack.needle_arm": "Needle Arm",
    "attack.needle_arm.description": "The user attacks by wildly swinging its thorny arms. This may also make the target flinch.",
    "attack.odor_sleuth": "Odor Sleuth",
    "attack.odor_sleuth.description": "Enables a Ghost-type target to be hit by Normal- and Fighting-type attacks. This also enables an evasive target to be hit.",
    "attack.overheat": "Overheat",
    "attack.overheat.description": "The user attacks the target at full power. The attack's recoil harshly lowers the user's Sp. Atk stat.",
    "attack.poison_fang": "Poison Fang",
    "attack.poison_fang.description": "The user bites the target with toxic fangs. This may also leave the target badly poisoned.",
    "attack.poison_tail": "Poison Tail",
    "attack.poison_tail.description": "The user hits the target with its tail. This may also poison the target. Critical hits land more easily.",
    "attack.psycho_boost": "Psycho Boost",
    "attack.psycho_boost.description": "The user attacks the target at full power. The attack's recoil harshly lowers the user's Sp. Atk stat.",
    "attack.recycle": "Recycle",
    "attack.recycle.description": "The user recycles a held item that has been used in battle so it can be used again.",
    "attack.refresh": "Refresh",
    "attack.refresh.description": "The user rests to cure itself of a poisoning, burn, or paralysis.",
    "attack.revenge": "Revenge",
    "attack.revenge.description": "An attack move that inflicts double the damage if the user has been hurt by the opponent in the same turn.",
    "attack.rock_blast": "Rock Blast",
    "attack.rock_blast.description": "The user hurls hard rocks at the target. Two to five rocks are launched in a row.",
    "attack.rock_tomb": "Rock Tomb",
    "attack.rock_tomb.description": "Boulders are hurled at the target. This also lowers the target's Speed stat by preventing its movement.",
    "attack.role_play": "Role Play",
    "attack.role_play.description": "The user mimics the target completely, copying the target's natural Ability.",
    "attack.sand_tomb": "Sand Tomb",
    "attack.sand_tomb.description": "The user traps the target inside a harshly raging sandstorm for four to five turns.",
    "attack.secret_power": "Secret Power",
    "attack.secret_power.description": "The additional effects of this attack depend upon where it was used.",
    "attack.shadow_punch": "Shadow Punch",
    "attack.shadow_punch.description": "The user throws a punch from the shadows. This attack never misses.",
    "attack.sheer_cold": "Sheer Cold",
    "attack.sheer_cold.description": "The target is attacked with a blast of absolute-zero cold. The target faints instantly if this attack hits.",
    "attack.shock_wave": "Shock Wave",
    "attack.shock_wave.description": "The user strikes the target with a quick jolt of electricity. This attack never misses.",
    "attack.signal_beam": "Signal Beam",
    "attack.signal_beam.description": "The user attacks with a sinister beam of light. This may also confuse the target.",
    "attack.silver_wind": "Silver Wind",
    "attack.silver_wind.description": "The target is attacked with powdery scales blown by wind. This may also raise all the user's stats.",
    "attack.skill_swap": "Skill Swap",
    "attack.skill_swap.description": "The user employs its psychic power to exchange Abilities with the target.",
    "attack.skitter_smack": "Skitter Smack",
    "attack.skitter_smack.description": "The user skitters behind the target to attack. This also lowers the target's Sp. Atk stat.",
    "attack.sky_uppercut": "Sky Uppercut",
    "attack.sky_uppercut.description": "The user attacks the target with an uppercut thrown skyward with force.",
    "attack.slack_off": "Slack Off",
    "attack.slack_off.description": "The user slacks off, restoring its own HP by up to half of its max HP.",
    "attack.smelling_salts": "Smelling Salts",
    "attack.smelling_salts.description": "This attack inflicts double damage on a target with paralysis. This also cures the target's paralysis, however.",
    "attack.snatch": "Snatch",
    "attack.snatch.description": "The user steals the effects of any attempts to use a healing or stat-changing move.",
    "attack.spit_up": "Spit Up",
    "attack.spit_up.description": "The power stored using the move Stockpile is released at once in an attack. The more power is stored, the greater the move's power.",
    "attack.stockpile": "Stockpile",
    "attack.stockpile.description": "The user charges up power and raises both its Defense and Sp. Def. stats. The move can be used three times.",
    "attack.superpower": "Superpower",
    "attack.superpower.description": "The user attacks the target with great power. However, this also lowers the user's Attack and Defense stats.",
    "attack.swallow": "Swallow",
    "attack.swallow.description": "The power stored using the move Stockpile is absorbed by the user to heal its HP. Storing more power heals more HP.",
    "attack.tail_glow": "Tail Glow",
    "attack.tail_glow.description": "The user stares at flashing lights to focus its mind, drastically raising its Sp. Atk stat.",
    "attack.taunt": "Taunt",
    "attack.taunt.description": "The target is taunted into a rage that allows it to use only attack moves for three turns.",
    "attack.teeter_dance": "Teeter Dance",
    "attack.teeter_dance.description": "The user performs a wobbly dance that confuses the Pokémon around it.",
    "attack.tickle": "Tickle",
    "attack.tickle.description": "The user tickles the target into laughing, reducing its Attack and Defense stats.",
    "attack.torment": "Torment",
    "attack.torment.description": "The user torments and enrages the target, making it incapable of using the same move twice in a row.",
    "attack.trick": "Trick",
    "attack.trick.description": "The user catches the target off guard and swaps its held item with its own.",
    "attack.uproar": "Uproar",
    "attack.uproar.description": "The user attacks in an uproar for three turns. During that time, no one can fall asleep.",
    "attack.volt_tackle": "Volt Tackle",
    "attack.volt_tackle.description": "The user electrifies itself, then charges. This also damages the user quite a lot. This may leave the target with paralysis.",
    "attack.water_pulse": "Water Pulse",
    "attack.water_pulse.description": "The user attacks the target with a pulsing blast of water. This may also confuse the target.",
    "attack.water_sport": "Water Sport",
    "attack.water_sport.description": "The user soaks itself with water. This weakens Fire-type moves for five turns.",
    "attack.water_spout": "Water Spout",
    "attack.water_spout.description": "The user spouts water to damage opposing Pokémon. The lower the user's HP, the lower the move's power.",
    "attack.weather_ball": "Weather Ball",
    "attack.weather_ball.description": "An attack move that varies in power and type depending on the weather.",
    "attack.will-o-wisp": "Will-O-Wisp",
    "attack.will-o-wisp.description": "The user shoots a sinister, bluish-white flame at the target to inflict a burn.",
    "attack.wish": "Wish",
    "attack.wish.description": "One turn after this move is used, the target's HP is restored by half the user's max HP.",
    "attack.yawn": "Yawn",
    "attack.yawn.description": "The user lets loose a huge yawn that lulls the target into falling asleep on the next turn.",
    "attack.acupressure": "Acupressure",
    "attack.acupressure.description": "The user applies pressure to stress points, sharply boosting one of its or its allies' stats.",
    "attack.air_slash": "Air Slash",
    "attack.air_slash.description": "The user attacks with a blade of air that slices even the sky. This may also make the target flinch.",
    "attack.aqua_jet": "Aqua Jet",
    "attack.aqua_jet.description": "The user lunges at the target at a speed that makes it almost invisible. This move always goes first.",
    "attack.aqua_ring": "Aqua Ring",
    "attack.aqua_ring.description": "The user envelops itself in a veil made of water. It regains some HP every turn.",
    "attack.aqua_tail": "Aqua Tail",
    "attack.aqua_tail.description": "The user attacks by swinging its tail as if it were a vicious wave in a raging storm.",
    "attack.assurance": "Assurance",
    "attack.assurance.description": "If the target has already taken some damage in the same turn, this attack's power is doubled.",
    "attack.attack_order": "Attack Order",
    "attack.attack_order.description": "The user calls out its underlings to pummel the target. Critical hits land more easily.",
    "attack.aura_sphere": "Aura Sphere",
    "attack.aura_sphere.description": "The user lets loose a blast of aura power from deep within its body at the target. This attack never misses.",
    "attack.avalanche": "Avalanche",
    "attack.avalanche.description": "An attack move that inflicts double the damage if the user has been hurt by the target in the same turn.",
    "attack.brave_bird": "Brave Bird",
    "attack.brave_bird.description": "The user tucks in its wings and charges from a low altitude. This also damages the user quite a lot.",
    "attack.brine": "Brine",
    "attack.brine.description": "If the target's HP is half or less, this attack will hit with double the power.",
    "attack.bug_bite": "Bug Bite",
    "attack.bug_bite.description": "The user bites the target. If the target is holding a Berry, the user eats it and gains its effect.",
    "attack.bug_buzz": "Bug Buzz",
    "attack.bug_buzz.description": "The user vibrates its wings to generate a damaging sound wave. This may also lower the target's Sp. Def stat.",
    "attack.bullet_punch": "Bullet Punch",
    "attack.bullet_punch.description": "The user strikes the target with tough punches as fast as bullets. This move always goes first.",
    "attack.captivate": "Captivate",
    "attack.captivate.description": "If any opposing Pokémon is the opposite gender of the user, it is charmed, which harshly lowers its Sp. Atk stat.",
    "attack.charge_beam": "Charge Beam",
    "attack.charge_beam.description": "The user attacks with an electric charge. The user may use any remaining electricity to raise its Sp. Atk stat.",
    "attack.chatter": "Chatter",
    "attack.chatter.description": "The user attacks the target with sound waves of deafening chatter. This confuses the target.",
    "attack.close_combat": "Close Combat",
    "attack.close_combat.description": "The user fights the target up close without guarding itself. This also lowers the user's Defense and Sp. Def stats.",
    "attack.copycat": "Copycat",
    "attack.copycat.description": "The user mimics the move used immediately before it. The move fails if no other move has been used yet.",
    "attack.cross_poison": "Cross Poison",
    "attack.cross_poison.description": "A slashing attack with a poisonous blade that may also poison the target. Critical hits land more easily.",
    "attack.crush_grip": "Crush Grip",
    "attack.crush_grip.description": "The target is crushed with great force. The more HP the target has left, the greater this move's power.",
    "attack.dark_pulse": "Dark Pulse",
    "attack.dark_pulse.description": "The user releases a horrible aura imbued with dark thoughts. This may also make the target flinch.",
    "attack.dark_void": "Dark Void",
    "attack.dark_void.description": "Opposing Pokémon are dragged into a world of total darkness that makes them sleep.",
    "attack.defend_order": "Defend Order",
    "attack.defend_order.description": "The user calls out its underlings to shield its body, raising its Defense and Sp. Def stats.",
    "attack.defog": "Defog",
    "attack.defog.description": "A strong wind blows away the target's barriers such as Reflect or Light Screen. This also lowers the target's evasiveness.",
    "attack.discharge": "Discharge",
    "attack.discharge.description": "The user strikes everything around it by letting loose a flare of electricity. This may also cause paralysis.",
    "attack.double_iron_bash": "Double Iron Bash",
    "attack.double_iron_bash.description": "The user rotates, centering the hex nut in its chest, and then strikes with its arms twice in a row. This may also make the target flinch.",
    "attack.double_hit": "Double Hit",
    "attack.double_hit.description": "The user slams the target with a long tail, vines, or a tentacle. The target is hit twice in a row.",
    "attack.draco_meteor": "Draco Meteor",
    "attack.draco_meteor.description": "Comets are summoned down from the sky onto the target. The attack's recoil harshly lowers the user's Special Attack stat.",
    "attack.dragon_pulse": "Dragon Pulse",
    "attack.dragon_pulse.description": "The target is attacked with a shock wave generated by the user's gaping mouth.",
    "attack.dragon_rush": "Dragon Rush",
    "attack.dragon_rush.description": "The user tackles the target while exhibiting overwhelming menace. This may also make the target flinch.",
    "attack.drain_punch": "Drain Punch",
    "attack.drain_punch.description": "An energy-draining punch. The user's HP is restored by half the damage taken by the target.",
    "attack.earth_power": "Earth Power",
    "attack.earth_power.description": "The user makes the ground under the target erupt with power. This may also lower the target's Sp. Def.",
    "attack.embargo": "Embargo",
    "attack.embargo.description": "This move prevents the target from using its held item. Its Trainer is also prevented from using items on it.",
    "attack.energy_ball": "Energy Ball",
    "attack.energy_ball.description": "The user draws power from nature and fires it at the target. This may also lower the target's Sp. Def.",
    "attack.feint": "Feint",
    "attack.feint.description": "An attack that hits a target using Protect or Detect. This also lifts the effects of those moves.",
    "attack.fire_fang": "Fire Fang",
    "attack.fire_fang.description": "The user bites with flame-cloaked fangs. This may also make the target flinch or leave it with a burn.",
    "attack.flare_blitz": "Flare Blitz",
    "attack.flare_blitz.description": "The user cloaks itself in fire and charges the target. This also damages the user quite a lot. This may leave the target with a burn.",
    "attack.flash_cannon": "Flash Cannon",
    "attack.flash_cannon.description": "The user gathers all its light energy and releases it at once. This may also lower the target's Sp. Def stat.",
    "attack.fling": "Fling",
    "attack.fling.description": "The user flings its held item at the target to attack. This move's power and effects depend on the item.",
    "attack.flip_turn": "Flip Turn",
    "attack.flip_turn.description": "After making its attack, the user rushes back to switch places with a party Pokémon in waiting.",
    "attack.focus_blast": "Focus Blast",
    "attack.focus_blast.description": "The user heightens its mental focus and unleashes its power. This may also lower the target's Sp. Def.",
    "attack.force_palm": "Force Palm",
    "attack.force_palm.description": "The target is attacked with a shock wave. This may also leave the target with paralysis.",
    "attack.gastro_acid": "Gastro Acid",
    "attack.gastro_acid.description": "The user hurls up its stomach acids on the target. The fluid eliminates the effect of the target's Ability.",
    "attack.giga_impact": "Giga Impact",
    "attack.giga_impact.description": "The user charges at the target using every bit of its power. The user can't move on the next turn.",
    "attack.grass_knot": "Grass Knot",
    "attack.grass_knot.description": "The user snares the target with grass and trips it. The heavier the target, the greater the move's power.",
    "attack.gravity": "Gravity",
    "attack.gravity.description": "Gravity is intensified for five turns, making moves involving flying unusable and negating Levitate.",
    "attack.guard_swap": "Guard Swap",
    "attack.guard_swap.description": "The user employs its psychic power to switch changes to its Defense and Sp. Def stats with the target.",
    "attack.gunk_shot": "Gunk Shot",
    "attack.gunk_shot.description": "The user shoots filthy garbage at the target to attack. This may also poison the target.",
    "attack.gyro_ball": "Gyro Ball",
    "attack.gyro_ball.description": "The user tackles the target with a high-speed spin. The slower the user compared to the target, the greater the move's power.",
    "attack.hammer_arm": "Hammer Arm",
    "attack.hammer_arm.description": "The user swings and hits with its strong and heavy fist. It lowers the user's Speed, however.",
    "attack.head_smash": "Head Smash",
    "attack.head_smash.description": "The user attacks the target with a hazardous, full-power headbutt. This also damages the user terribly.",
    "attack.heal_block": "Heal Block",
    "attack.heal_block.description": "For five turns, the user prevents the opposing team from using any moves, Abilities, or held items that recover HP.",
    "attack.heal_order": "Heal Order",
    "attack.heal_order.description": "The user calls out its underlings to heal it. The user regains up to half of its max HP.",
    "attack.healing_wish": "Healing Wish",
    "attack.healing_wish.description": "The user faints. In return, the Pokémon taking its place will have its HP restored and status conditions cured.",
    "attack.heart_swap": "Heart Swap",
    "attack.heart_swap.description": "The user employs its psychic power to switch stat changes with the target.",
    "attack.ice_fang": "Ice Fang",
    "attack.ice_fang.description": "The user bites with cold-infused fangs. This may also make the target flinch or leave it frozen.",
    "attack.ice_shard": "Ice Shard",
    "attack.ice_shard.description": "The user flash-freezes chunks of ice and hurls them at the target. This move always goes first.",
    "attack.iron_head": "Iron Head",
    "attack.iron_head.description": "The user slams the target with its steel-hard head. This may also make the target flinch.",
    "attack.judgment": "Judgment",
    "attack.judgment.description": "The user releases countless shots of light at the target. This move's type varies depending on the kind of Plate the user is holding.",
    "attack.jungle_healing": "Jungle Healing",
    "attack.jungle_healing.description": "The user becomes one with the jungle, restoring HP and healing any status conditions of itself and its ally Pokémon in battle.",
    "attack.last_resort": "Last Resort",
    "attack.last_resort.description": "This move can be used only after the user has used all the other moves it knows in the battle.",
    "attack.lava_plume": "Lava Plume",
    "attack.lava_plume.description": "The user torches everything around it with an inferno of scarlet flames. This may also leave those hit with a burn.",
    "attack.leaf_storm": "Leaf Storm",
    "attack.leaf_storm.description": "The user whips up a storm of leaves around the target. The attack's recoil harshly lowers the user's Sp. Atk stat.",
    "attack.lucky_chant": "Lucky Chant",
    "attack.lucky_chant.description": "The user chants an incantation toward the sky, preventing opposing Pokémon from landing critical hits.",
    "attack.lunar_dance": "Lunar Dance",
    "attack.lunar_dance.description": "The user faints. In return, the Pokémon taking its place will have its status and HP fully restored.",
    "attack.magma_storm": "Magma Storm",
    "attack.magma_storm.description": "The target becomes trapped within a maelstrom of fire that rages for four to five turns.",
    "attack.magnet_bomb": "Magnet Bomb",
    "attack.magnet_bomb.description": "The user launches steel bombs that stick to the target. This attack never misses.",
    "attack.magnet_rise": "Magnet Rise",
    "attack.magnet_rise.description": "The user levitates using electrically generated magnetism for five turns.",
    "attack.me_first": "Me First",
    "attack.me_first.description": "The user cuts ahead of the target to steal and use the target's intended move with greater power. This move fails if it isn't used first.",
    "attack.metal_burst": "Metal Burst",
    "attack.metal_burst.description": "The user retaliates with much greater power against the opponent that last inflicted damage on it.",
    "attack.miracle_eye": "Miracle Eye",
    "attack.miracle_eye.description": "Enables a Dark-type target to be hit by Psychic-type attacks. This also enables an evasive target to be hit.",
    "attack.mirror_shot": "Mirror Shot",
    "attack.mirror_shot.description": "The user lets loose a flash of energy at the target from its polished body. This may also lower the target's accuracy.",
    "attack.mud_bomb": "Mud Bomb",
    "attack.mud_bomb.description": "The user launches a hard-packed mud ball to attack. This may also lower the target's accuracy.",
    "attack.nasty_plot": "Nasty Plot",
    "attack.nasty_plot.description": "The user stimulates its brain by thinking bad thoughts. This sharply raises the user's Sp. Atk.",
    "attack.natural_gift": "Natural Gift",
    "attack.natural_gift.description": "The user draws power to attack by using its held Berry. The Berry determines the move's type and power.",
    "attack.night_slash": "Night Slash",
    "attack.night_slash.description": "The user slashes the target the instant an opportunity arises. Critical hits land more easily.",
    "attack.ominous_wind": "Ominous Wind",
    "attack.ominous_wind.description": "The user blasts the target with a gust of repulsive wind. This may also raise all the user's stats at once.",
    "attack.payback": "Payback",
    "attack.payback.description": "The user stores power, then attacks. If the user moves after the target, this attack's power will be doubled.",
    "attack.pluck": "Pluck",
    "attack.pluck.description": "The user pecks the target. If the target is holding a Berry, the user eats it and gains its effect.",
    "attack.poison_jab": "Poison Jab",
    "attack.poison_jab.description": "The target is stabbed with a tentacle or arm steeped in poison. This may also poison the target.",
    "attack.power_gem": "Power Gem",
    "attack.power_gem.description": "The user attacks with a ray of light that sparkles as if it were made of gemstones.",
    "attack.power_swap": "Power Swap",
    "attack.power_swap.description": "The user employs its psychic power to switch changes to its Attack and Sp. Atk stats with the target.",
    "attack.power_trick": "Power Trick",
    "attack.power_trick.description": "The user employs its psychic power to switch its Attack with its Defense stat.",
    "attack.power_whip": "Power Whip",
    "attack.power_whip.description": "The user violently whirls its vines or tentacles to harshly lash the target.",
    "attack.psycho_cut": "Psycho Cut",
    "attack.psycho_cut.description": "The user tears at the target with blades formed by psychic power. Critical hits land more easily.",
    "attack.psycho_shift": "Psycho Shift",
    "attack.psycho_shift.description": "Using its psychic power of suggestion, the user transfers its status conditions to the target.",
    "attack.punishment": "Punishment",
    "attack.punishment.description": "The more the target has powered up with stat changes, the greater the move's power.",
    "attack.roar_of_time": "Roar of Time",
    "attack.roar_of_time.description": "The user blasts the target with power that distorts even time. The user can't move on the next turn.",
    "attack.rock_climb": "Rock Climb",
    "attack.rock_climb.description": "The user attacks the target by smashing into it with incredible force. This may also confuse the target.",
    "attack.rock_polish": "Rock Polish",
    "attack.rock_polish.description": "The user polishes its body to reduce drag. This can sharply raise the Speed stat.",
    "attack.rock_wrecker": "Rock Wrecker",
    "attack.rock_wrecker.description": "The user launches a huge boulder at the target to attack. The user can't move on the next turn.",
    "attack.roost": "Roost",
    "attack.roost.description": "The user lands and rests its body. It restores the user's HP by up to half of its max HP.",
    "attack.seed_bomb": "Seed Bomb",
    "attack.seed_bomb.description": "The user slams a barrage of hard-shelled seeds on the target from above.",
    "attack.seed_flare": "Seed Flare",
    "attack.seed_flare.description": "The user emits a shock wave from its body to attack its target. This may harshly lower the target's Sp. Def.",
    "attack.shadow_claw": "Shadow Claw",
    "attack.shadow_claw.description": "The user slashes with a sharp claw made from shadows. Critical hits land more easily.",
    "attack.shadow_force": "Shadow Force",
    "attack.shadow_force.description": "The user disappears, then strikes the target on the next turn. This move hits even if the target protects itself.",
    "attack.shadow_sneak": "Shadow Sneak",
    "attack.shadow_sneak.description": "The user extends its shadow and attacks the target from behind. This move always goes first.",
    "attack.spacial_rend": "Spacial Rend",
    "attack.spacial_rend.description": "The user tears the target along with the space around it. Critical hits land more easily.",
    "attack.stealth_rock": "Stealth Rock",
    "attack.stealth_rock.description": "The user lays a trap of levitating stones around the opposing team. The trap hurts opposing Pokémon that switch into battle.",
    "attack.stone_edge": "Stone Edge",
    "attack.stone_edge.description": "The user stabs the target with sharpened stones from below. Critical hits land more easily.",
    "attack.sucker_punch": "Sucker Punch",
    "attack.sucker_punch.description": "This move enables the user to attack first. This move fails if the target is not readying an attack.",
    "attack.switcheroo": "Switcheroo",
    "attack.switcheroo.description": "The user trades held items with the target faster than the eye can follow.",
    "attack.tailwind": "Tailwind",
    "attack.tailwind.description": "The user whips up a turbulent whirlwind that ups the Speed stat of the user and its allies for four turns.",
    "attack.thunder_cage": "Thunder Cage",
    "attack.thunder_cage.description": "Thunder Cage inflicts damage and continues to do damage for four to five turns. During this time, the opponent cannot switch out.",
    "attack.thunder_fang": "Thunder Fang",
    "attack.thunder_fang.description": "The user bites with electrified fangs. This may also make the target flinch or leave it with paralysis.",
    "attack.toxic_spikes": "Toxic Spikes",
    "attack.toxic_spikes.description": "The user lays a trap of poison spikes at the opposing team's feet. They poison opposing Pokémon that switch into battle.",
    "attack.trick_room": "Trick Room",
    "attack.trick_room.description": "The user creates a bizarre area in which slower Pokémon get to move first for five turns.",
    "attack.trump_card": "Trump Card",
    "attack.trump_card.description": "The fewer PP this move has, the greater its power.",
    "attack.u-turn": "U-turn",
    "attack.u-turn.description": "After making its attack, the user rushes back to switch places with a party Pokémon in waiting.",
    "attack.vacuum_wave": "Vacuum Wave",
    "attack.vacuum_wave.description": "The user whirls its fists to send a wave of pure vacuum at the target. This move always goes first.",
    "attack.wake-up_slap": "Wake-Up Slap",
    "attack.wake-up_slap.description": "This attack inflicts big damage on a sleeping target. This also wakes the target up, however.",
    "attack.wood_hammer": "Wood Hammer",
    "attack.wood_hammer.description": "The user slams its rugged body into the target to attack. This also damages the user quite a lot.",
    "attack.worry_seed": "Worry Seed",
    "attack.worry_seed.description": "A seed that causes worry is planted on the target. It prevents sleep by making the target's Ability Insomnia.",
    "attack.wring_out": "Wring Out",
    "attack.wring_out.description": "The user powerfully wrings the target. The more HP the target has, the greater the move's power.",
    "attack.x-scissor": "X-Scissor",
    "attack.x-scissor.description": "The user slashes at the target by crossing its scythes or claws as if they were a pair of scissors.",
    "attack.zen_headbutt": "Zen Headbutt",
    "attack.zen_headbutt.description": "The user focuses its willpower to its head and attacks the target. This may also make the target flinch.",
    "attack.acid_spray": "Acid Spray",
    "attack.acid_spray.description": "The user spits fluid that works to melt the target. This harshly lowers the target's Sp. Def stat.",
    "attack.acrobatics": "Acrobatics",
    "attack.acrobatics.description": "The user nimbly strikes the target. If the user is not holding an item, this attack inflicts massive damage.",
    "attack.after_you": "After You",
    "attack.after_you.description": "The user helps the target and makes it use its move right after the user.",
    "attack.ally_switch": "Ally Switch",
    "attack.ally_switch.description": "The user teleports using a strange power and switches places with one of its allies.",
    "attack.autotomize": "Autotomize",
    "attack.autotomize.description": "The user sheds part of its body to make itself lighter and sharply raise its Speed stat.",
    "attack.bestow": "Bestow",
    "attack.bestow.description": "The user passes its held item to the target when the target isn't holding an item.",
    "attack.blue_flare": "Blue Flare",
    "attack.blue_flare.description": "The user attacks by engulfing the target in an intense, yet beautiful, blue flame. This may also leave the target with a burn.",
    "attack.bolt_strike": "Bolt Strike",
    "attack.bolt_strike.description": "The user surrounds itself with a great amount of electricity and charges its target. This may also leave the target with paralysis.",
    "attack.bulldoze": "Bulldoze",
    "attack.bulldoze.description": "The user strikes everything around it by stomping down on the ground. This lowers the Speed stat of those hit.",
    "attack.chip_away": "Chip Away",
    "attack.chip_away.description": "Looking for an opening, the user strikes consistently. The target's stat changes don't affect this attack's damage.",
    "attack.circle_throw": "Circle Throw",
    "attack.circle_throw.description": "The target is thrown, and a different Pokémon is dragged out. In the wild, this ends a battle against a single Pokémon.",
    "attack.clear_smog": "Clear Smog",
    "attack.clear_smog.description": "The user attacks by throwing a clump of special mud. All stat changes are returned to normal.",
    "attack.coil": "Coil",
    "attack.coil.description": "The user coils up and concentrates. This raises its Attack and Defense stats as well as its accuracy.",
    "attack.cotton_guard": "Cotton Guard",
    "attack.cotton_guard.description": "The user protects itself by wrapping its body in soft cotton, which drastically raises the user's Defense stat.",
    "attack.dragon_tail": "Dragon Tail",
    "attack.dragon_tail.description": "The target is knocked away, and a different Pokémon is dragged out. In the wild, this ends a battle against a single Pokémon.",
    "attack.drill_run": "Drill Run",
    "attack.drill_run.description": "The user crashes into its target while rotating its body like a drill. Critical hits land more easily.",
    "attack.dual_chop": "Dual Chop",
    "attack.dual_chop.description": "The user attacks its target by hitting it with brutal strikes. The target is hit twice in a row.",
    "attack.echoed_voice": "Echoed Voice",
    "attack.echoed_voice.description": "The user attacks the target with an echoing voice. If this move is used every turn, it does greater damage.",
    "attack.electro_ball": "Electro Ball",
    "attack.electro_ball.description": "The user hurls an electric orb at the target. The faster the user is than the target, the greater the move's power.",
    "attack.electroweb": "Electroweb",
    "attack.electroweb.description": "The user attacks and captures opposing Pokémon by using an electric net. This lowers their Speed stat.",
    "attack.entrainment": "Entrainment",
    "attack.entrainment.description": "The user dances with an odd rhythm that compels the target to mimic it, making the target's Ability the same as the user's.",
    "attack.fiery_dance": "Fiery Dance",
    "attack.fiery_dance.description": "Cloaked in flames, the user dances and flaps its wings. This may also raise the user's Sp. Atk stat.",
    "attack.fiery_wrath": "Fiery Wrath",
    "attack.fiery_wrath.description": "The user transforms its wrath into a fire-like aura to attack. This may also make opposing Pokémon flinch.",
    "attack.final_gambit": "Final Gambit",
    "attack.final_gambit.description": "The user risks everything to attack its target. The user faints but does damage equal to its HP.",
    "attack.fire_pledge": "Fire Pledge",
    "attack.fire_pledge.description": "A column of fire hits opposing Pokémon. When used with its grass equivalent, its damage increases and a vast sea of fire appears.",
    "attack.flame_burst": "Flame Burst",
    "attack.flame_burst.description": "The user attacks the target with a bursting flame. The bursting flame damages Pokémon next to the target as well.",
    "attack.flame_charge": "Flame Charge",
    "attack.flame_charge.description": "Cloaking itself in flame, the user attacks. Then, building up more power, the user raises its Speed stat.",
    "attack.foul_play": "Foul Play",
    "attack.foul_play.description": "The user turns the target's power against it. The higher the target's Attack stat, the greater the move's power.",
    "attack.freeze_shock": "Freeze Shock",
    "attack.freeze_shock.description": "On the second turn, the user hits the target with electrically charged ice. This may also leave the target with paralysis.",
    "attack.frost_breath": "Frost Breath",
    "attack.frost_breath.description": "The user blows its cold breath on the target. This attack always results in a critical hit.",
    "attack.fusion_bolt": "Fusion Bolt",
    "attack.fusion_bolt.description": "The user throws down a giant thunderbolt. This move is more powerful when influenced by an enormous flame.",
    "attack.fusion_flare": "Fusion Flare",
    "attack.fusion_flare.description": "The user brings down a giant flame. This attack is more powerful when influenced by an enormous thunderbolt.",
    "attack.gear_grind": "Gear Grind",
    "attack.gear_grind.description": "The user attacks by throwing steel gears at its target twice.",
    "attack.glaciate": "Glaciate",
    "attack.glaciate.description": "The user attacks by blowing freezing cold air at opposing Pokémon. This lowers their Speed stat.",
    "attack.glacial_lance": "Glacial Lance",
    "attack.glacial_lance.description": "The user attacks by hurling a blizzard-cloaked icicle lance at opposing Pokémon.",
    "attack.grass_pledge": "Grass Pledge",
    "attack.grass_pledge.description": "A column of grass hits the target. When used with its water equivalent, its damage increases and a vast swamp appears.",
    "attack.guard_split": "Guard Split",
    "attack.guard_split.description": "The user employs its psychic powers to average its Defense and Sp. Def stats with those of the target.",
    "attack.head_charge": "Head Charge",
    "attack.head_charge.description": "The user charges its head into its target, using its powerful guard hair. This also damages the user a little.",
    "attack.heal_pulse": "Heal Pulse",
    "attack.heal_pulse.description": "The user emits a healing pulse which restores the target's HP by up to half of its max HP.",
    "attack.heart_stamp": "Heart Stamp",
    "attack.heart_stamp.description": "The user unleashes a vicious blow after its cute act makes the target less wary. This may also make the target flinch.",
    "attack.heat_crash": "Heat Crash",
    "attack.heat_crash.description": "The user slams its target with its flame-covered body. The more the user outweighs the target, the greater the move's power.",
    "attack.heavy_slam": "Heavy Slam",
    "attack.heavy_slam.description": "The user slams into the target with its heavy body. The more the user outweighs the target, the greater the move's power.",
    "attack.hex": "Hex",
    "attack.hex.description": "This relentless attack does massive damage to a target affected by status conditions.",
    "attack.hone_claws": "Hone Claws",
    "attack.hone_claws.description": "The user sharpens its claws to boost its Attack stat and accuracy.",
    "attack.horn_leech": "Horn Leech",
    "attack.horn_leech.description": "The user drains the target's energy with its horns. The user's HP is restored by half the damage taken by the target.",
    "attack.hurricane": "Hurricane",
    "attack.hurricane.description": "The user attacks by wrapping its opponent in a fierce wind that flies up into the sky. This may also confuse the target.",
    "attack.ice_burn": "Ice Burn",
    "attack.ice_burn.description": "On the second turn, an ultracold, freezing wind surrounds the target. This may leave the target with a burn.",
    "attack.icicle_crash": "Icicle Crash",
    "attack.icicle_crash.description": "The user attacks by harshly dropping large icicles onto the target. This may also make the target flinch.",
    "attack.incinerate": "Incinerate",
    "attack.incinerate.description": "The user attacks opposing Pokémon with fire. If a Pokémon is holding a certain item, such as a Berry, the item becomes burned up and unusable.",
    "attack.inferno": "Inferno",
    "attack.inferno.description": "The user attacks by engulfing the target in an intense fire. This leaves the target with a burn.",
    "attack.leaf_tornado": "Leaf Tornado",
    "attack.leaf_tornado.description": "The user attacks its target by encircling it in sharp leaves. This attack may also lower the target's accuracy.",
    "attack.low_sweep": "Low Sweep",
    "attack.low_sweep.description": "The user makes a swift attack on the target's legs, which lowers the target's Speed stat.",
    "attack.magic_room": "Magic Room",
    "attack.magic_room.description": "The user creates a bizarre area in which Pokémon's held items lose their effects for five turns.",
    "attack.night_daze": "Night Daze",
    "attack.night_daze.description": "The user lets loose a pitch-black shock wave at its target. This may also lower the target's accuracy.",
    "attack.power_split": "Power Split",
    "attack.power_split.description": "The user employs its psychic power to average its Attack and Sp. Atk stats with those of the target.",
    "attack.psyshock": "Psyshock",
    "attack.psyshock.description": "The user materializes an odd psychic wave to attack the target. This attack does physical damage.",
    "attack.psystrike": "Psystrike",
    "attack.psystrike.description": "The user materializes an odd psychic wave to attack the target. This attack does physical damage.",
    "attack.quash": "Quash",
    "attack.quash.description": "The user suppresses the target and makes its move go last.",
    "attack.quick_guard": "Quick Guard",
    "attack.quick_guard.description": "The user protects itself and its allies from priority moves.",
    "attack.quiver_dance": "Quiver Dance",
    "attack.quiver_dance.description": "The user lightly performs a beautiful, mystic dance. This boosts the user's Sp. Atk, Sp. Def, and Speed stats.",
    "attack.rage_powder": "Rage Powder",
    "attack.rage_powder.description": "The user scatters a cloud of irritating powder to draw attention to itself. Opponents aim only at the user.",
    "attack.razor_shell": "Razor Shell",
    "attack.razor_shell.description": "The user cuts its target with sharp shells. This may also lower the target's Defense stat.",
    "attack.reflect_type": "Reflect Type",
    "attack.reflect_type.description": "The user reflects the target's type, making it the same type as the target.",
    "attack.relic_song": "Relic Song",
    "attack.relic_song.description": "The user sings an ancient song and attacks by appealing to the hearts of the listening opposing Pokémon. This may also induce sleep.",
    "attack.retaliate": "Retaliate",
    "attack.retaliate.description": "The user gets revenge for a fainted ally. If an ally fainted in the previous turn, this move becomes more powerful.",
    "attack.round": "Round",
    "attack.round.description": "The user attacks the target with a song. Others can join in the Round and make the attack do greater damage.",
    "attack.sacred_sword": "Sacred Sword",
    "attack.sacred_sword.description": "The user attacks by slicing with a long horn. The target's stat changes don't affect this attack's damage.",
    "attack.scald": "Scald",
    "attack.scald.description": "The user shoots boiling hot water at its target. This may also leave the target with a burn.",
    "attack.scale_shot": "Scale Shot",
    "attack.scale_shot.description": "The user attacks by shooting scales two to five times in a row. This move boosts the user's Speed stat but lowers its Defense stat.",
    "attack.searing_shot": "Searing Shot",
    "attack.searing_shot.description": "The user torches everything around it with an inferno of scarlet flames. This may also leave those hit with a burn.",
    "attack.secret_sword": "Secret Sword",
    "attack.secret_sword.description": "The user cuts with its long horn. The odd power contained in the horn does physical damage to the target.",
    "attack.shell_smash": "Shell Smash",
    "attack.shell_smash.description": "The user breaks its shell, which lowers Defense and Sp. Def stats but sharply raises its Attack, Sp. Atk, and Speed stats.",
    "attack.shift_gear": "Shift Gear",
    "attack.shift_gear.description": "The user rotates its gears, raising its Attack and sharply raising its Speed.",
    "attack.simple_beam": "Simple Beam",
    "attack.simple_beam.description": "The user's mysterious psychic wave changes the target's Ability to Simple.",
    "attack.sky_drop": "Sky Drop",
    "attack.sky_drop.description": "The user takes the target into the sky, then drops it during the next turn. The target cannot attack while in the sky.",
    "attack.sludge_wave": "Sludge Wave",
    "attack.sludge_wave.description": "The user strikes everything around it by swamping the area with a giant sludge wave. This may also poison those hit.",
    "attack.smack_down": "Smack Down",
    "attack.smack_down.description": "The user throws a stone or similar projectile to attack an opponent. A flying Pokémon will fall to the ground when it's hit.",
    "attack.snarl": "Snarl",
    "attack.snarl.description": "The user yells as if it's ranting about something, which lowers the Sp. Atk stat of opposing Pokémon.",
    "attack.soak": "Soak",
    "attack.soak.description": "The user shoots a torrent of water at the target and changes the target's type to Water.",
    "attack.steamroller": "Steamroller",
    "attack.steamroller.description": "The user crushes its targets by rolling over them with its rolled-up body. This attack may make the target flinch.",
    "attack.steel_roller": "Steel Roller",
    "attack.steel_roller.description": "The user attacks while destroying the terrain. This move fails when the ground hasn't turned into a terrain.",
    "attack.stored_power": "Stored Power",
    "attack.stored_power.description": "The user attacks the target with stored power. The more the user's stats are raised, the greater the move's power.",
    "attack.storm_throw": "Storm Throw",
    "attack.storm_throw.description": "The user strikes the target with a fierce blow. This attack always results in a critical hit.",
    "attack.struggle_bug": "Struggle Bug",
    "attack.struggle_bug.description": "While resisting, the user attacks the opposing Pokémon. This lowers the Sp. Atk stat of those hit.",
    "attack.synchronoise": "Synchronoise",
    "attack.synchronoise.description": "Using an odd shock wave, the user inflicts damage on any Pokémon of the same type in the area around it.",
    "attack.tail_slap": "Tail Slap",
    "attack.tail_slap.description": "The user attacks by striking the target with its hard tail. It hits the target two to five times in a row.",
    "attack.techno_blast": "Techno Blast",
    "attack.techno_blast.description": "The user fires a beam of light at its target. The move's type changes depending on the Drive the user holds.",
    "attack.telekinesis": "Telekinesis",
    "attack.telekinesis.description": "The user makes the target float with its psychic power. The target is easier to hit for three turns.",
    "attack.v-create": "V-create",
    "attack.v-create.description": "With a hot flame on its forehead, the user hurls itself at its target. This lowers the user's Defense, Sp. Def, and Speed stats.",
    "attack.venoshock": "Venoshock",
    "attack.venoshock.description": "The user drenches the target in a special poisonous liquid. This move's power is doubled if the target is poisoned.",
    "attack.volt_switch": "Volt Switch",
    "attack.volt_switch.description": "After making its attack, the user rushes back to switch places with a party Pokémon in waiting.",
    "attack.water_pledge": "Water Pledge",
    "attack.water_pledge.description": "A column of water strikes the target. When combined with its fire equivalent, the damage increases and a rainbow appears.",
    "attack.wide_guard": "Wide Guard",
    "attack.wide_guard.description": "The user and its allies are protected from wide-ranging attacks for one turn.",
    "attack.wild_charge": "Wild Charge",
    "attack.wild_charge.description": "The user shrouds itself in electricity and smashes into its target. This also damages the user a little.",
    "attack.wonder_room": "Wonder Room",
    "attack.wonder_room.description": "The user creates a bizarre area in which Pokémon's Defense and Sp. Def stats are swapped for five turns.",
    "attack.work_up": "Work Up",
    "attack.work_up.description": "The user is roused, and its Attack and Sp. Atk stats increase.",
    "attack.aromatic_mist": "Aromatic Mist",
    "attack.aromatic_mist.description": "The user raises the Sp. Def stat of an ally Pokémon with a mysterious aroma.",
    "attack.baby-doll_eyes": "Baby-Doll Eyes",
    "attack.baby-doll_eyes.description": "The user stares at the target with its baby-doll eyes, which lowers its Attack stat. This move always goes first.",
    "attack.belch": "Belch",
    "attack.belch.description": "The user lets out a damaging belch on the target. The user must eat a Berry to use this move.",
    "attack.boomburst": "Boomburst",
    "attack.boomburst.description": "The user attacks everything around it with the destructive power of a terrible, explosive sound.",
    "attack.celebrate": "Celebrate",
    "attack.celebrate.description": "The Pokémon congratulates you on your special day!",
    "attack.confide": "Confide",
    "attack.confide.description": "The user tells the target a secret, and the target loses its ability to concentrate. This lowers the target's Sp. Atk. stat.",
    "attack.crafty_shield": "Crafty Shield",
    "attack.crafty_shield.description": "The user protects itself and its allies from status moves with a mysterious power. This does not stop moves that do damage.",
    "attack.dazzling_gleam": "Dazzling Gleam",
    "attack.dazzling_gleam.description": "The user damages opposing Pokémon by emitting a powerful flash.",
    "attack.diamond_storm": "Diamond Storm",
    "attack.diamond_storm.description": "The user whips up a storm of diamonds to damage opposing Pokémon. This may also raise the user's Defense stat.",
    "attack.disarming_voice": "Disarming Voice",
    "attack.disarming_voice.description": "Letting out a charming cry, the user does emotional damage to opposing Pokémon. This attack never misses.",
    "attack.dragon_ascent": "Dragon Ascent",
    "attack.dragon_ascent.description": "After soaring upward, the user attacks its target by dropping out of the sky at high speeds, although it lowers its own Defense and Sp. Def in the process.",
    "attack.draining_kiss": "Draining Kiss",
    "attack.draining_kiss.description": "The user steals the target's energy with a kiss. The user's HP is restored by over half of the damage taken by the target.",
    "attack.eerie_impulse": "Eerie Impulse",
    "attack.eerie_impulse.description": "The user's body generates an eerie impulse. Exposing the target to it harshly lowers the target's Sp. Atk stat.",
    "attack.eerie_spell": "Eerie Spell",
    "attack.eerie_spell.description": "The user attacks with its tremendous psychic power. This also removes 3 PP from the target's last move.",
    "attack.electric_terrain": "Electric Terrain",
    "attack.electric_terrain.description": "The user electrifies the ground under everyone's feet for five turns. Pokémon on the ground no longer fall asleep.",
    "attack.electrify": "Electrify",
    "attack.electrify.description": "If the target is electrified before it uses a move during that turn, the target's move becomes Electric type.",
    "attack.fairy_lock": "Fairy Lock",
    "attack.fairy_lock.description": "By locking down the battlefield, the user keeps all Pokémon from fleeing during the next turn.",
    "attack.fairy_wind": "Fairy Wind",
    "attack.fairy_wind.description": "The user stirs up a fairy wind and strikes the target with it.",
    "attack.fell_stinger": "Fell Stinger",
    "attack.fell_stinger.description": "When the user knocks out a target with this move, the user's Attack stat rises sharply.",
    "attack.flower_shield": "Flower Shield",
    "attack.flower_shield.description": "The user raises the Defense stat of all Grass Pokémon in battle with a mysterious power.",
    "attack.flying_press": "Flying Press",
    "attack.flying_press.description": "The user dives down onto the target from the sky. This move is Fighting and Flying type simultaneously.",
    "attack.forest's_curse": "Forest's Curse",
    "attack.forest's_curse.description": "The user puts a forest curse on the target. Afflicted targets are now Grass type as well.",
    "attack.freeze-dry": "Freeze-Dry",
    "attack.freeze-dry.description": "The user rapidly cools the target. This may also leave the target frozen. This move is super effective on Water types.",
    "attack.geomancy": "Geomancy",
    "attack.geomancy.description": "The user absorbs energy and sharply raises its Sp. Atk, Sp. Def, and Speed stats on the next turn.",
    "attack.grassy_terrain": "Grassy Terrain",
    "attack.grassy_terrain.description": "The user turns the ground under everyone's feet to grass for five turns. This restores the HP of Pokémon on the ground a little every turn.",
    "attack.happy_hour": "Happy Hour",
    "attack.happy_hour.description": "Using Happy Hour doubles the amount of prize money received after battle.",
    "attack.hold_back": "Hold Back",
    "attack.hold_back.description": "The user holds back when it attacks and the target is left with at least 1 HP.",
    "attack.hold_hands": "Hold Hands",
    "attack.hold_hands.description": "The user and an ally hold hands. This makes them very happy.",
    "attack.hyperspace_fury": "Hyperspace Fury",
    "attack.hyperspace_fury.description": "Using its many arms, the user unleashes a barrage of attacks that ignore the effects of moves like Protect and Detect. This attack lowers the user's Defense.",
    "attack.hyperspace_hole": "Hyperspace Hole",
    "attack.hyperspace_hole.description": "Using a hyperspace hole, the user appears right next to the target and strikes. This also hits a target using Protect or Detect.",
    "attack.infestation": "Infestation",
    "attack.infestation.description": "The target is infested and attacked for four to five turns. The target can't flee during this time.",
    "attack.ion_deluge": "Ion Deluge",
    "attack.ion_deluge.description": "The user disperses electrically charged particles, which changes Normal moves to Electric moves.",
    "attack.king's_shield": "King's Shield",
    "attack.king's_shield.description": "The user takes a defensive stance while it protects itself from damage. It also harshly lowers the Attack stat of any attacker who makes direct contact.",
    "attack.land's_wrath": "Land's Wrath",
    "attack.land's_wrath.description": "The user gathers the energy of the land and focuses that power on opposing Pokémon to damage them.",
    "attack.lash_out": "Lash Out",
    "attack.lash_out.description": "The user lashes out to vent its frustration toward the target. If its stats were lowered during the turn, the power of this move is doubled.",
    "attack.light_of_ruin": "Light of Ruin",
    "attack.light_of_ruin.description": "Drawing power from the Eternal Flower, the user fires a powerful beam of light. This also damages the user quite a lot.",
    "attack.magnetic_flux": "Magnetic Flux",
    "attack.magnetic_flux.description": "The user manipulates magnetic fields which raises the Defense and Sp. Def stats of ally Pokémon with the Plus or Minus Ability.",
    "attack.mat_block": "Mat Block",
    "attack.mat_block.description": "Using a pulled-up mat as a shield, the user protects itself and its allies from damaging moves. This does not stop status moves.",
    "attack.misty_explosion": "Misty Explosion",
    "attack.misty_explosion.description": "The user attacks everything around it and faints upon using this move. This move's power is increased on Misty Terrain.",
    "attack.misty_terrain": "Misty Terrain",
    "attack.misty_terrain.description": "The user covers the ground under everyone's feet with mist for five turns. This protects Pokémon on the ground from status conditions.",
    "attack.moonblast": "Moonblast",
    "attack.moonblast.description": "Borrowing the power of the moon, the user attacks the target. This may also lower the target's Sp. Atk stat.",
    "attack.mystical_fire": "Mystical Fire",
    "attack.mystical_fire.description": "The user attacks by breathing a special, hot fire. This also lowers the target's Sp. Atk stat.",
    "attack.noble_roar": "Noble Roar",
    "attack.noble_roar.description": "Letting out a noble roar, the user intimidates the target and lowers its Attack and Sp. Atk stats.",
    "attack.nuzzle": "Nuzzle",
    "attack.nuzzle.description": "The user attacks by nuzzling its electrified cheeks against the target. This also leaves the target with paralysis.",
    "attack.oblivion_wing": "Oblivion Wing",
    "attack.oblivion_wing.description": "The user absorbs its target's HP. The user's HP is restored by over half of the damage taken by the target.",
    "attack.origin_pulse": "Origin Pulse",
    "attack.origin_pulse.description": "The user attacks opposing Pokémon with countless beams of light that glow a deep and brilliant blue.",
    "attack.parabolic_charge": "Parabolic Charge",
    "attack.parabolic_charge.description": "The user attacks everything around it. The user's HP is restored by half the damage taken by those hit.",
    "attack.parting_shot": "Parting Shot",
    "attack.parting_shot.description": "With a parting threat, the user lowers the target's Attack and Sp. Atk stats. Then it switches with a party Pokémon.",
    "attack.petal_blizzard": "Petal Blizzard",
    "attack.petal_blizzard.description": "The user stirs up a violent petal blizzard and attacks everything around it.",
    "attack.phantom_force": "Phantom Force",
    "attack.phantom_force.description": "The user vanishes somewhere, then strikes the target on the next turn. This move hits even if the target protects itself.",
    "attack.play_nice": "Play Nice",
    "attack.play_nice.description": "The user and the target become friends, and the target loses its will to fight. This lowers the target's Attack stat.",
    "attack.play_rough": "Play Rough",
    "attack.play_rough.description": "The user plays rough with the target and attacks it. This may also lower the target's Attack stat.",
    "attack.powder": "Powder",
    "attack.powder.description": "The user covers the target in a powder that explodes and damages the target if it uses a Fire move.",
    "attack.power-up_punch": "Power-Up Punch",
    "attack.power-up_punch.description": "Striking opponents over and over makes the user's fists harder. Hitting a target raises the Attack stat.",
    "attack.precipice_blades": "Precipice Blades",
    "attack.precipice_blades.description": "The user attacks opposing Pokémon by manifesting the power of the land in fearsome blades of stone.",
    "attack.rototiller": "Rototiller",
    "attack.rototiller.description": "Tilling the soil, the user makes it easier for plants to grow. This raises the Attack and Sp. Atk stats of Grass Pokémon.",
    "attack.spiky_shield": "Spiky Shield",
    "attack.spiky_shield.description": "In addition to protecting the user from attacks, this move also damages any attacker who makes direct contact.",
    "attack.steam_eruption": "Steam Eruption",
    "attack.steam_eruption.description": "The user immerses the target in superheated steam. This may also leave the target with a burn.",
    "attack.sticky_web": "Sticky Web",
    "attack.sticky_web.description": "The user weaves a sticky net around the opposing team, which lowers their Speed stat upon switching into battle.",
    "attack.thousand_arrows": "Thousand Arrows",
    "attack.thousand_arrows.description": "This move also hits opposing Pokémon that are in the air. Those Pokémon are knocked down to the ground.",
    "attack.thousand_waves": "Thousand Waves",
    "attack.thousand_waves.description": "The user attacks with a wave that crawls along the ground. Those hit can't flee from battle.",
    "attack.topsy-turvy": "Topsy-Turvy",
    "attack.topsy-turvy.description": "All stat changes affecting the target turn topsy-turvy and become the opposite of what they were.",
    "attack.trick-or-treat": "Trick-or-Treat",
    "attack.trick-or-treat.description": "The user takes the target trick-or-treating. This adds Ghost type to the target's type.",
    "attack.venom_drench": "Venom Drench",
    "attack.venom_drench.description": "Opposing Pokémon are drenched in an odd poisonous liquid. This lowers the Attack, Sp. Atk, and Speed stats of a poisoned target.",
    "attack.water_shuriken": "Water Shuriken",
    "attack.water_shuriken.description": "The user hits the target with throwing stars two to five times in a row. This move always goes first.",
    "attack.accelerock": "Accelerock",
    "attack.accelerock.description": "The user smashes into the target at high speed. This move always goes first.",
    "attack.anchor_shot": "Anchor Shot",
    "attack.anchor_shot.description": "The user entangles the target with its anchor chain while attacking. The target becomes unable to flee.",
    "attack.aurora_veil": "Aurora Veil",
    "attack.aurora_veil.description": "This move reduces damage from physical and special moves for five turns. This can be used only in a hailstorm.",
    "attack.baneful_bunker": "Baneful Bunker",
    "attack.baneful_bunker.description": "In addition to protecting the user from attacks, this move also poisons any attacker that makes direct contact.",
    "attack.beak_blast": "Beak Blast",
    "attack.beak_blast.description": "The user first heats up its beak, and then it attacks the target. Making direct contact with the Pokémon while it's heating up its beak results in a burn.",
    "attack.brutal_swing": "Brutal Swing",
    "attack.brutal_swing.description": "The user swings its body around violently to inflict damage on everything in its vicinity.",
    "attack.burn_up": "Burn Up",
    "attack.burn_up.description": "To inflict massive damage, the user burns itself out. After using this move, the user will no longer be Fire type.",
    "attack.clanging_scales": "Clanging Scales",
    "attack.clanging_scales.description": "The user rubs the scales on its entire body and makes a huge noise to attack the opposing Pokémon. The user's Defense stat goes down after the attack.",
    "attack.core_enforcer": "Core Enforcer",
    "attack.core_enforcer.description": "If the Pokémon the user has inflicted damage on have already used their moves, this move eliminates the effect of the target's Ability.",
    "attack.darkest_lariat": "Darkest Lariat",
    "attack.darkest_lariat.description": "The user swings both arms and hits the target. The target's stat changes don't affect this attack's damage.",
    "attack.dragon_hammer": "Dragon Hammer",
    "attack.dragon_hammer.description": "The user uses its body like a hammer to attack the target and inflict damage.",
    "attack.fire_lash": "Fire Lash",
    "attack.fire_lash.description": "The user strikes the target with a burning lash. This also lowers the target's Defense stat.",
    "attack.first_impression": "First Impression",
    "attack.first_impression.description": "Although this move has great power, it only works the first turn the user is in battle.",
    "attack.fleur_cannon": "Fleur Cannon",
    "attack.fleur_cannon.description": "The user unleashes a strong beam. The attack's recoil harshly lowers the user's Sp. Atk stat.",
    "attack.floral_healing": "Floral Healing",
    "attack.floral_healing.description": "The user restores the target's HP by up to half of its max HP. It restores more HP when the terrain is grass.",
    "attack.gear_up": "Gear Up",
    "attack.gear_up.description": "The user engages its gears to raise the Attack and Sp. Atk stats of ally Pokémon with the Plus or Minus Ability.",
    "attack.high_horsepower": "High Horsepower",
    "attack.high_horsepower.description": "The user fiercely attacks the target using its entire body.",
    "attack.ice_hammer": "Ice Hammer",
    "attack.ice_hammer.description": "The user swings and hits with its strong, heavy fist. It lowers the user's Speed, however.",
    "attack.instruct": "Instruct",
    "attack.instruct.description": "The user instructs the target to use the target's last move again.",
    "attack.laser_focus": "Laser Focus",
    "attack.laser_focus.description": "The user concentrates intensely. The attack on the next turn always results in a critical hit.",
    "attack.leafage": "Leafage",
    "attack.leafage.description": "The user attacks by pelting the target with leaves.",
    "attack.liquidation": "Liquidation",
    "attack.liquidation.description": "The user slams into the target using a full-force blast of water. This may also lower the target's Defense stat.",
    "attack.lunge": "Lunge",
    "attack.lunge.description": "The user makes a lunge at the target, attacking with full force. This also lowers the target's Attack stat.",
    "attack.mind_blown": "Mind Blown",
    "attack.mind_blown.description": "The user attacks everything around it by causing its own head to explode. This also damages the user.",
    "attack.moongeist_beam": "Moongeist Beam",
    "attack.moongeist_beam.description": "The user emits a sinister ray to attack the target. This move can be used on the target regardless of its Abilities.",
    "attack.multi-attack": "Multi-Attack",
    "attack.multi-attack.description": "Cloaking itself in high energy, the user slams into the target. The memory held determines the move’s type.",
    "attack.nature's_madness": "Nature's Madness",
    "attack.nature's_madness.description": "The user hits the target with the force of nature. It halves the target's HP.",
    "attack.photon_geyser": "Photon Geyser",
    "attack.photon_geyser.description": "The user attacks a target with a pillar of light. This move inflicts Attack or Sp. Atk damage—whichever stat is higher for the user.",
    "attack.plasma_fists": "Plasma Fists",
    "attack.plasma_fists.description": "The user attacks with electrically charged fists. This move changes Normal-type moves to Electric-type moves.",
    "attack.pollen_puff": "Pollen Puff",
    "attack.pollen_puff.description": "The user attacks the enemy with a pollen puff that explodes. If the target is an ally, it gives the ally a pollen puff that restores its HP instead.",
    "attack.poltergeist": "Poltergeist",
    "attack.poltergeist.description": "The user attacks the target by controlling the target's item. It fails if the target doesn't have an item.",
    "attack.power_trip": "Power Trip",
    "attack.power_trip.description": "The user boasts its strength and attacks the target. The more the user's stats are raised, the greater the move's power.",
    "attack.prismatic_laser": "Prismatic Laser",
    "attack.prismatic_laser.description": "The user shoots powerful lasers using the power of a prism. The user can't move on the next turn.",
    "attack.psychic_fangs": "Psychic Fangs",
    "attack.psychic_fangs.description": "The user bites the target with its psychic capabilities. This can also destroy Light Screen and Reflect.",
    "attack.psychic_terrain": "Psychic Terrain",
    "attack.psychic_terrain.description": "This protects Pokémon on the ground from priority moves and powers up Psychic-type moves for five turns.",
    "attack.purify": "Purify",
    "attack.purify.description": "The user heals the target's status condition. If the move succeeds, it also restores the user's own HP.",
    "attack.shadow_bone": "Shadow Bone",
    "attack.shadow_bone.description": "The user attacks by beating the target with a bone that contains a spirit. This may also lower the target's Defense stat.",
    "attack.shell_side_arm": "Shell Side Arm",
    "attack.shell_side_arm.description": "This move inflicts physical or special damage, whichever will be more effective. This may also poison the target.",
    "attack.shell_trap": "Shell Trap",
    "attack.shell_trap.description": "The user sets a shell trap. If the user is hit by a physical move, the trap will explode and inflict damage on the opposing Pokémon.",
    "attack.dual_wingbeat": "Dual Wingbeat",
    "attack.dual_wingbeat.description": "The user slams the target with its wings. The target is hit twice in a row.",
    "attack.grassy_glide": "Grassy Glide",
    "attack.grassy_glide.description": "Gliding on the ground, the user attacks the target. This move always goes first on Grassy Terrain.",
    "attack.shore_up": "Shore Up",
    "attack.shore_up.description": "The user regains up to half of its max HP. It restores more HP in a sandstorm.",
    "attack.smart_strike": "Smart Strike",
    "attack.smart_strike.description": "The user stabs the target with a sharp horn. This attack never misses.",
    "attack.solar_blade": "Solar Blade",
    "attack.solar_blade.description": "In this two-turn attack, the user gathers light and fills a blade with the light's energy, attacking the target on the next turn.",
    "attack.sparkling_aria": "Sparkling Aria",
    "attack.sparkling_aria.description": "The user bursts into song, emitting many bubbles. Any Pokémon suffering from a burn will be healed by the touch of these bubbles.",
    "attack.spectral_thief": "Spectral Thief",
    "attack.spectral_thief.description": "The user hides in the target's shadow, steals the target's stat boosts, and then attacks.",
    "attack.triple_axel": "Triple Axel",
    "attack.triple_axel.description": "A consecutive three-kick attack that becomes more powerful with each successful hit.",
    "attack.speed_swap": "Speed Swap",
    "attack.speed_swap.description": "The user exchanges Speed stats with the target.",
    "attack.spirit_shackle": "Spirit Shackle",
    "attack.spirit_shackle.description": "The user attacks while simultaneously stitching the target's shadow to the ground to prevent the target from escaping.",
    "attack.spotlight": "Spotlight",
    "attack.spotlight.description": "The user shines a spotlight on the target so that only the target will be attacked during the turn.",
    "attack.stomping_tantrum": "Stomping Tantrum",
    "attack.stomping_tantrum.description": "Driven by frustration, the user attacks the target. If the user's previous move has failed, the power of this move doubles.",
    "attack.strength_sap": "Strength Sap",
    "attack.strength_sap.description": "The user restores its HP by the same amount as the target's Attack stat. It also lowers the target's Attack stat.",
    "attack.sunsteel_strike": "Sunsteel Strike",
    "attack.sunsteel_strike.description": "The user slams into the target with the force of a meteor. This move can be used on the target regardless of its Abilities.",
    "attack.tearful_look": "Tearful Look",
    "attack.tearful_look.description": "The user gets teary eyed to make the target lose its combative spirit. This lowers the target's Attack and Sp. Atk stats.",
    "attack.teatime": "Teatime",
    "attack.teatime.description": "The user has teatime with all the Pokémon in the battle. Each Pokémon eats its held Berry.",
    "attack.throat_chop": "Throat Chop",
    "attack.throat_chop.description": "The user attacks the target's throat, and the resultant suffering prevents the target from using moves that emit sound for two turns.",
    "attack.toxic_thread": "Toxic Thread",
    "attack.toxic_thread.description": "The user shoots poisonous threads to poison the target and lower the target's Speed stat.",
    "attack.trop_kick": "Trop Kick",
    "attack.trop_kick.description": "The user lands an intense kick of tropical origins on the target. This also lowers the target's Attack stat.",
    "attack.zing_zap": "Zing Zap",
    "attack.zing_zap.description": "A strong electric blast crashes down on the target, giving it an electric shock. This may also make the target flinch.",
    "attack.apple_acid": "Apple Acid",
    "attack.apple_acid.description": "The user attacks the target with an acidic liquid created from tart apples. This also lowers the target's Sp. Def stat.",
    "attack.aura_wheel": "Aura Wheel",
    "attack.aura_wheel.description": "Morpeko attacks and raises its Speed with the energy stored in its cheeks. This move's type changes depending on the user's form.",
    "attack.behemoth_bash": "Behemoth Bash",
    "attack.behemoth_bash.description": "The user becomes a gigantic shield and slams into the target. This move deals twice the damage if the target is Dynamaxed.",
    "attack.behemoth_blade": "Behemoth Blade",
    "attack.behemoth_blade.description": "The user becomes a gigantic sword and cuts the target. This move deals twice the damage if the target is Dynamaxed.",
    "attack.body_press": "Body Press",
    "attack.body_press.description": "The user attacks by slamming its body into the target. The higher the user's Defense, the more damage it can inflict on the target.",
    "attack.bolt_beak": "Bolt Beak",
    "attack.bolt_beak.description": "The user stabs the target with its electrified beak. If the user attacks before the target, the power of this move is doubled.",
    "attack.branch_poke": "Branch Poke",
    "attack.branch_poke.description": "The user attacks the target by poking it with a sharply pointed branch.",
    "attack.breaking_swipe": "Breaking Swipe",
    "attack.breaking_swipe.description": "The user swings its tough tail wildly and attacks opposing Pokémon. This also lowers their Attack stats.",
    "attack.clangorous_soul": "Clangorous Soul",
    "attack.clangorous_soul.description": "The user raises all its stats by using some of its HP.",
    "attack.court_change": "Court Change",
    "attack.court_change.description": "With its mysterious power, the user swaps the effects on either side of the field.",
    "attack.decorate": "Decorate",
    "attack.decorate.description": "The user sharply raises the target's Attack and Sp. Atk stats by decorating the target.",
    "attack.dragon_darts": "Dragon Darts",
    "attack.dragon_darts.description": "The user attacks twice using Dreepy. If there are two targets, this move hits each target once.",
    "attack.drum_beating": "Drum Beating",
    "attack.drum_beating.description": "The user plays its drum, controlling the drum's roots to attack the target. This also lowers the target's Speed stat.",
    "attack.dynamax_cannon": "Dynamax Cannon",
    "attack.dynamax_cannon.description": "The user unleashes a strong beam from its core. This move deals twice the damage if the target is Dynamaxed.",
    "attack.eternabeam": "Eternabeam",
    "attack.eternabeam.description": "This is Eternatus's most powerful attack in its original form. The user can't move on the next turn.",
    "attack.false_surrender": "False Surrender",
    "attack.false_surrender.description": "The user pretends to bow its head, but then it stabs the target with its disheveled hair. This attack never misses.",
    "attack.fishious_rend": "Fishious Rend",
    "attack.fishious_rend.description": "The user rends the target with its hard gills. If the user attacks before the target, the power of this move is doubled.",
    "attack.grav_apple": "Grav Apple",
    "attack.grav_apple.description": "The user inflicts damage by dropping an apple from high above. This also lowers the target's Defense stat.",
    "attack.jaw_lock": "Jaw Lock",
    "attack.jaw_lock.description": "This move prevents the user and the target from switching out until either of them faints. The effect goes away if either of the Pokémon leaves the field.",
    "attack.life_dew": "Life Dew",
    "attack.life_dew.description": "The user scatters mysterious water around and restores the HP of itself and its ally Pokémon in the battle.",
    "attack.magic_powder": "Magic Powder",
    "attack.magic_powder.description": "The user scatters a cloud of magic powder that changes the target to Psychic type.",
    "attack.meteor_assault": "Meteor Assault",
    "attack.meteor_assault.description": "The user attacks wildly with its thick leek. The user can't move on the next turn, because the force of this move makes it stagger.",
    "attack.no_retreat": "No Retreat",
    "attack.no_retreat.description": "This move raises all the user's stats but prevents the user from switching out or fleeing.",
    "attack.obstruct": "Obstruct",
    "attack.obstruct.description": "This move enables the user to protect itself from all attacks. Its chance of failing rises if it is used in succession. Direct contact harshly lowers the attacker's Defense stat.",
    "attack.snap_trap": "Snap Trap",
    "attack.snap_trap.description": "Traps opponent, damaging them for 4-5 turns.",
    "attack.snipe_shot": "Snipe Shot",
    "attack.snipe_shot.description": "The user ignores the effects of opposing Pokémon's moves and Abilities that draw in moves, allowing this move to hit the chosen target.",
    "attack.stuff_cheeks": "Stuff Cheeks",
    "attack.stuff_cheeks.description": "The user eats its held Berry, then sharply raises its Defense stat.",
    "attack.tar_shot": "Tar Shot",
    "attack.tar_shot.description": "The user pours sticky tar over the target, lowering the target's Speed stat. The target becomes weaker to Fire-type moves.",
    "attack.overdrive": "Overdrive",
    "attack.overdrive.description": "The user attacks opposing Pokémon by twanging a guitar or bass guitar, causing a huge echo and strong vibration.",
    "attack.spirit_break": "Spirit Break",
    "attack.spirit_break.description": "The user attacks the target with so much force that it could break the target's spirit. This also lowers the target's Sp. Atk stat.",
    "attack.strange_steam": "Strange Steam",
    "attack.strange_steam.description": "The user attacks the target by emitting steam. This may also confuse the target.",
    "attack.steel_beam": "Steel Beam",
    "attack.steel_beam.description": "The user fires a beam of steel that it collected from its entire body. This also damages the user.",
    "attack.stone_axe": "Stone Axe",
    "attack.stone_axe.description": "The user swings its stone axes at the target, aiming to land a critical hit. Stone splinters left behind by this attack continue to damage the target for several turns.",
    "attack.ceaseless_edge": "Ceaseless Edge",
    "attack.ceaseless_edge.description": "The user slashes its shell blade at the target, aiming to land a critical hit. Shell splinters left behind by this attack will continue to damage the target for several turns.",
    "attack.wildbolt_storm": "Wildbolt Storm",
    "attack.wildbolt_storm.description": "The user summons a thunderous tempest and savagely attacks with lightning and wind. This may also leave the target with paralysis. ",
    "attack.springtide_storm": "Springtide Storm",
    "attack.springtide_storm.description": "The user attacks by wrapping the target in fierce winds brimming with love and hate. This move’s additional effects depend on the user’s form.",
    "attack.triple_arrows": "Triple Arrows",
    "attack.triple_arrows.description": "The user delivers an axe kick, then fires three arrows. This raises the chance of its future attacks landing critical hits and also lowers the target's defensive stats.",
    "attack.raging_fury": "Raging Fury",
    "attack.raging_fury.description": "The user rampages and spews vicious flames to inflict damage on the target, then becomes fixated on using this move.",
    "attack.bleakwind_storm": "Bleakwind Storm",
    "attack.bleakwind_storm.description": "The user attacks with savagely cold winds that cause both body and spirit to tremble. This may also leave the target with frostbite.",
    "attack.bitter_malice": "Bitter Malice",
    "attack.bitter_malice.description": "The user attacks its target with spine-chilling resentment. This may also leave the target with frostbite. This move's power is doubled if the target has a status condition.",
    "attack.infernal_parade": "Infernal Parade",
    "attack.infernal_parade.description": "The user attacks with myriad fireballs. This may also leave the target with a burn. This move's power is doubled if the target has a status condition.",
    "attack.chloroblast": "Chloroblast",
    "attack.chloroblast.description": "The user launches its amassed chlorophyll to inflict damage on the target. This also damages the user and lowers the user's action speed.",
    "attack.sandsear_storm": "Sandsear Storm",
    "attack.sandsear_storm.description": "The user attacks by wrapping the target in fierce winds and searingly hot sand. This also leaves the target with a burn.",
    "attack.mountain_gale": "Mountain Gale",
    "attack.mountain_gale.description": "The user hurls giant chunks of ice at the target to inflict damage.",
    "attack.power_shift": "Power Shift",
    "attack.power_shift.description": "The user swaps its offensive and defensive stats.",
    "attack.barb_barrage": "Barb Barrage",
    "attack.barb_barrage.description": "The user launches countless toxic barbs to inflict damage. This may also poison the target. This move's power is doubled if the target has a status condition.",
    "attack.psyshield_bash": "Psyshield Bash",
    "attack.psyshield_bash.description": "Cloaking itself in psychic energy, the user slams into the target. This may also raise the user's defensive stats.",
    "attack.shelter": "Shelter",
    "attack.shelter.description": "The user makes its skin as hard as an iron shield, raising its defensive stats. Incoming moves also become more likely to miss.",
    "attack.wave_crash": "Wave Crash",
    "attack.wave_crash.description": "The user shrouds itself in water and slams into the target with its whole body to inflict damage. This also damages the user and raises the user's action speed.",
    "attack.dire_claw": "Dire Claw",
    "attack.dire_claw.description": "The user lashes out at the target with ruinous claws, aiming to land a critical hit. This may also leave the target poisoned, paralyzed, or drowsy.",
    "attack.esper_wing": "Esper Wing",
    "attack.esper_wing.description": "The user slashes the target with aura-enriched wings. This also raises the user's action speed. This move has a heightened chance of landing a critical hit.",
    "attack.headlong_rush": "Headlong Rush",
    "attack.headlong_rush.description": "The user smashes into the target in a full-body tackle. This also lowers the user's defensive stats.",
    "attack.lunar_blessing": "Lunar Blessing",
    "attack.lunar_blessing.description": "The user heals its own status conditions and restores its HP. Incoming moves also become more likely to miss.",
    "attack.mystical_power": "Mystical Power",
    "attack.mystical_power.description": "The user strengthens itself with a mysterious power. If it excels in offense, its offensive stats are raised. If it excels in defense, its defensive stats are raised.",
    "attack.take_heart": "Take Heart",
    "attack.take_heart.description": "The user lifts its spirits, healing its own status conditions and raising its offensive and defensive stats.",
    "attack.victory_dance": "Victory Dance",
    "attack.victory_dance.description": "The user performs a dance to usher in victory. This raises the user's offensive and defensive stats and increases the damage dealt by the user's moves by 50 percent.",

    "attack.breakneck_blitz": "Breakneck Blitz",
    "attack.breakneck_blitz.description": "The user builds up its momentum using its Z-Power and crashes into the target at full speed. The power varies, depending on the original move.",
    "attack.all-out_pummeling": "All-Out Pummeling",
    "attack.all-out_pummeling.description": "The user rams an energy orb created by its Z-Power into the target with full force. The power varies, depending on the original move.",
    "attack.supersonic_skystrike": "Supersonic Skystrike",
    "attack.supersonic_skystrike.description": "The user soars up with its Z-Power and plummets toward the target at full speed. The power varies, depending on the original move.",
    "attack.acid_downpour": "Acid Downpour",
    "attack.acid_downpour.description": "The user creates a poisonous swamp using its Z-Power and sinks the target into it at full force. The power varies, depending on the original move.",
    "attack.tectonic_rage": "Tectonic Rage",
    "attack.tectonic_rage.description": "The user burrows deep into the ground and slams into the target with the full force of its Z-Power. The power varies, depending on the original move.",
    "attack.continental_crush": "Continental Crush",
    "attack.continental_crush.description": "The user summons a huge rock mountain using its Z-Power and drops it onto the target with full force. The power varies, depending on the original move.",
    "attack.savage_spin-out": "Savage Spin-Out",
    "attack.savage_spin-out.description": "The user binds the target with full force with threads of silk that the user spits using its Z-Power. The power varies, depending on the original move.",
    "attack.never-ending_nightmare": "Never-Ending Nightmare",
    "attack.never-ending_nightmare.description": "Deep-seated grudges summoned by the user's Z-Power trap the target. The power varies, depending on the original move.",
    "attack.corkscrew_crash": "Corkscrew Crash",
    "attack.corkscrew_crash.description": "The user spins very fast and rams into the target with the full force of its Z-Power. The power varies, depending on the original move.",
    "attack.inferno_overdrive": "Inferno Overdrive",
    "attack.inferno_overdrive.description": "The user breathes a stream of intense fire toward the target with the full force of its Z-Power. The power varies depending on the original move.",
    "attack.hydro_vortex": "Hydro Vortex",
    "attack.hydro_vortex.description": "The user creates a huge whirling current using its Z-Power to swallow the target with full force. The power varies, depending on the original move.",
    "attack.bloom_doom": "Bloom Doom",
    "attack.bloom_doom.description": "The user collects energy from plants using its Z-Power and attacks the target with full force. The power varies, depending on the original move.",
    "attack.gigavolt_havoc": "Gigavolt Havoc",
    "attack.gigavolt_havoc.description": "The user hits the target with a powerful electric current collected by its Z-Power. The power varies, depending on the original move.",
    "attack.shattered_psyche": "Shattered Psyche",
    "attack.shattered_psyche.description": "The user controls the target with its Z-Power and hurts the target with full force. The power varies, depending on the original move.",
    "attack.subzero_slammer": "Subzero Slammer",
    "attack.subzero_slammer.description": "The user dramatically drops the temperature using its Z-Power and freezes the target with full force. The power varies, depending on the original move.",
    "attack.devastating_drake": "Devastating Drake",
    "attack.devastating_drake.description": "The user materializes its aura using its Z-Power and attacks the target with full force. The power varies, depending on the original move.",
    "attack.black_hole_eclipse": "Black Hole Eclipse",
    "attack.black_hole_eclipse.description": "The user gathers dark energy using its Z-Power and sucks the target into it. The power varies, depending on the original move.",
    "attack.twinkle_tackle": "Twinkle Tackle",
    "attack.twinkle_tackle.description": "The user creates a very charming space using its Z-Power and totally toys with the target. The power varies, depending on the original move.",
    "attack.catastropika": "Catastropika",
    "attack.catastropika.description": "The user, Pikachu, surrounds itself with the maximum amount of electricity using its Z-Power and pounces on its target with full force.",
    "attack.10,000,000_volt_thunderbolt": "10,000,000 Volt Thunderbolt",
    "attack.10,000,000_volt_thunderbolt.description": "The user, Pikachu wearing a cap, powers up a jolt of electricity using its Z-Power and unleashes it. Critical hits land more easily.",
    "attack.stoked_sparksurfer": "Stoked Sparksurfer",
    "attack.stoked_sparksurfer.description": "After obtaining Z-Power, the user, Alolan Raichu, attacks the target with full force. This move leaves the target with paralysis.",
    "attack.extreme_evoboost": "Extreme Evoboost",
    "attack.extreme_evoboost.description": "After obtaining Z-Power, the user, Eevee, gets energy from its evolved friends and boosts its stats sharply.",
    "attack.pulverizing_pancake": "Pulverizing Pancake",
    "attack.pulverizing_pancake.description": "Z-Power brings out the true capabilities of the user, Snorlax. The Pokémon moves its enormous body energetically and attacks the target with full force.",
    "attack.genesis_supernova": "Genesis Supernova",
    "attack.genesis_supernova.description": "After obtaining Z-Power, the user, Mew, attacks the target with full force. The terrain will be charged with psychic energy.",
    "attack.sinister_arrow_raid": "Sinister Arrow Raid",
    "attack.sinister_arrow_raid.description": "The user, Decidueye, creates countless arrows using its Z-Power and shoots the target with full force.",
    "attack.malicious_moonsault": "Malicious Moonsault",
    "attack.malicious_moonsault.description": "The user, Incineroar, strengthens its body using its Z-Power and crashes into the target with full force.",
    "attack.oceanic_operetta": "Oceanic Operetta",
    "attack.oceanic_operetta.description": "The user, Primarina, summons a massive amount of water using its Z-Power and attacks the target with full force.",
    "attack.splintered_stormshards": "Splintered Stormshards",
    "attack.splintered_stormshards.description": "After obtaining Z-Power, the user, Lycanroc, attacks the target with full force. This move negates the effect on the battlefield.",
    "attack.let's_snuggle_forever": "Let's Snuggle Forever",
    "attack.let's_snuggle_forever.description": "After obtaining Z-Power, the user, Mimikyu, punches the target with full force.",
    "attack.clangorous_soulblaze": "Clangorous Soulblaze",
    "attack.clangorous_soulblaze.description": "After obtaining Z-Power, the user, Kommo-o, attacks the opposing Pokémon with full force. This move boosts the user’s stats.",
    "attack.guardian_of_alola": "Guardian of Alola",
    "attack.guardian_of_alola.description": "The user, the Land Spirit Pokémon, obtains Alola's energy using its Z-Power and attacks the target with full force. This reduces the target's HP greatly.",
    "attack.searing_sunraze_smash": "Searing Sunraze Smash",
    "attack.searing_sunraze_smash.description": "After obtaining Z-Power, the user, Solgaleo, attacks the target with full force. This move can ignore the effect of the target's Ability.",
    "attack.menacing_moonraze_maelstrom": "Menacing Moonraze Maelstrom",
    "attack.menacing_moonraze_maelstrom.description": "After obtaining Z-Power, the user, Lunala, attacks the target with full force. This move can ignore the effect of the target's Ability.",
    "attack.light_that_burns_the_sky": "Light That Burns the Sky",
    "attack.light_that_burns_the_sky.description": "This attack inflicts Attack or Sp. Atk damage—whichever stat is higher for the user, Necrozma. This move ignores the target’s Ability.",
    "attack.soul-stealing_7-star_strike": "Soul-Stealing 7-Star Strike",
    "attack.soul-stealing_7-star_strike.description": "After obtaining Z-Power, the user, Marshadow, punches and kicks the target consecutively with full force.",

    "attack.max_flare": "Max Flare",
    "attack.max_flare.description": "This is a Fire-type attack Dynamax Pokémon use. The user intensifies the sun for five turns.",
    "attack.max_flutterby": "Max Flutterby",
    "attack.max_flutterby.description": "This is a Bug-type attack Dynamax Pokémon use. This lowers the target's Sp. Atk stat.",
    "attack.max_lightning": "Max Lightning",
    "attack.max_lightning.description": "This is an Electric-type attack Dynamax Pokémon use. The user turns the ground into Electric Terrain for five turns.",
    "attack.max_strike": "Max Strike",
    "attack.max_strike.description": "This is a Normal-type attack Dynamax Pokémon use. This lowers the target's Speed stat.",
    "attack.max_knuckle": "Max Knuckle",
    "attack.max_knuckle.description": "This is a Fighting-type attack Dynamax Pokémon use. This raises ally Pokémon's Attack stats.",
    "attack.max_phantasm": "Max Phantasm",
    "attack.max_phantasm.description": "This is a Ghost-type attack Dynamax Pokémon use. This lowers the target's Defense stat.",
    "attack.max_hailstorm": "Max Hailstorm",
    "attack.max_hailstorm.description": "This is an Ice-type attack Dynamax Pokémon use. The user summons a hailstorm lasting five turns.",
    "attack.max_ooze": "Max Ooze",
    "attack.max_ooze.description": "This is a Poison-type attack Dynamax Pokémon use. This raises ally Pokémon's Sp. Atk stats.",
    "attack.max_geyser": "Max Geyser",
    "attack.max_geyser.description": "This is a Water-type attack Dynamax Pokémon use. The user summons a heavy rain that falls for five turns.",
    "attack.max_airstream": "Max Airstream",
    "attack.max_airstream.description": "This is a Flying-type attack Dynamax Pokémon use. This raises ally Pokémon's Speed stats.",
    "attack.max_starfall": "Max Starfall",
    "attack.max_starfall.description": "This is a Fairy-type attack Dynamax Pokémon use. The user turns the ground into Misty Terrain for five turns.",
    "attack.max_wyrmwind": "Max Wyrmwind",
    "attack.max_wyrmwind.description": "This is a Dragon-type attack Dynamax Pokémon use. This lowers the target's Attack stat.",
    "attack.max_mindstorm": "Max Mindstorm",
    "attack.max_mindstorm.description": "This is a Psychic-type attack Dynamax Pokémon use. The user turns the ground into Psychic Terrain for five turns.",
    "attack.max_rockfall": "Max Rockfall",
    "attack.max_rockfall.description": "This is a Rock-type attack Dynamax Pokémon use. The user summons a sandstorm lasting five turns.",
    "attack.max_quake": "Max Quake",
    "attack.max_quake.description": "This is a Ground-type attack Dynamax Pokémon use. This raises ally Pokémon's Sp. Def stats.",
    "attack.max_darkness": "Max Darkness",
    "attack.max_darkness.description": "This is a Dark-type attack Dynamax Pokémon use. This lowers the target's Sp. Def stat.",
    "attack.max_overgrowth": "Max Overgrowth",
    "attack.max_overgrowth.description": "This is a Grass-type attack Dynamax Pokémon use. The user turns the ground into Grassy Terrain for five turns.",
    "attack.max_steelspike": "Max Steelspike",
    "attack.max_steelspike.description": "This is a Steel-type attack Dynamax Pokémon use. This raises ally Pokémon's Defense stats.",
    "attack.max_guard": "Max Guard",
    "attack.max_guard.description": "This move enables the user to protect itself from all attacks. Its chance of failing rises if it is used in succession.",

    "attack.g-max_vine_lash": "G-Max Vine Lash",
    "attack.g-max_vine_lash.description": "A Grass-type attack that Gigantamax Venusaur use. This move continues to deal damage to opponents for four turns.",
    "attack.g-max_wildfire": "G-Max Wildfire",
    "attack.g-max_wildfire.description": "A Fire-type attack that Gigantamax Charizard use. This move continues to deal damage to opponents for four turns.",
    "attack.g-max_cannonade": "G-Max Cannonade",
    "attack.g-max_cannonade.description": "A Water-type attack that Gigantamax Blastoise use. This move continues to deal damage to opponents for four turns.",
    "attack.g-max_befuddle": "G-Max Befuddle",
    "attack.g-max_befuddle.description": "A Bug-type attack that Gigantamax Butterfree use. This move inflicts the poisoned, paralyzed, or asleep status condition on opponents.",
    "attack.g-max_volt_crash": "G-Max Volt Crash",
    "attack.g-max_volt_crash.description": "An Electric-type attack that Gigantamax Pikachu use. This move paralyzes opponents.",
    "attack.g-max_gold_rush": "G-Max Gold Rush",
    "attack.g-max_gold_rush.description": "A Normal-type attack that Gigantamax Meowth use. This move confuses opponents and also earns extra money.",
    "attack.g-max_chi_strike": "G-Max Chi Strike",
    "attack.g-max_chi_strike.description": "A Fighting-type attack that Gigantamax Machamp use. This move raises the chance of critical hits.",
    "attack.g-max_terror": "G-Max Terror",
    "attack.g-max_terror.description": "A Ghost-type attack that Gigantamax Gengar use. This Pokémon steps on the opposing Pokémon's shadow to prevent them from escaping.",
    "attack.g-max_foam_burst": "G-Max Foam Burst",
    "attack.g-max_foam_burst.description": "A Water-type attack that Gigantamax Kingler use. This move harshly lowers the Speed of opponents.",
    "attack.g-max_resonance": "G-Max Resonance",
    "attack.g-max_resonance.description": "An Ice-type attack that Gigantamax Lapras use. This move reduces the damage received for five turns.",
    "attack.g-max_cuddle": "G-Max Cuddle",
    "attack.g-max_cuddle.description": "A Normal-type attack that Gigantamax Eevee use. This move infatuates opponents.",
    "attack.g-max_replenish": "G-Max Replenish",
    "attack.g-max_replenish.description": "A Normal-type attack that Gigantamax Snorlax use. This move restores Berries that have been eaten.",
    "attack.g-max_malodor": "G-Max Malodor",
    "attack.g-max_malodor.description": "A Poison-type attack that Gigantamax Garbodor use. This move poisons opponents.",
    "attack.g-max_meltdown": "G-Max Meltdown",
    "attack.g-max_meltdown.description": "A Steel-type attack that Gigantamax Melmetal use. This move makes opponents incapable of using the same move twice in a row.",
    "attack.g-max_drum_solo": "G-Max Drum Solo",
    "attack.g-max_drum_solo.description": "A Grass-type attack that Gigantamax Rillaboom use. This move can be used on the target regardless of its Abilities.",
    "attack.g-max_fireball": "G-Max Fireball",
    "attack.g-max_fireball.description": "A Fire-type attack that Gigantamax Cinderace use. This move can be used on the target regardless of its Abilities.",
    "attack.g-max_hydrosnipe": "G-Max Hydrosnipe",
    "attack.g-max_hydrosnipe.description": "A Water-type attack that Gigantamax Inteleon use. This move can be used on the target regardless of its Abilities.",
    "attack.g-max_wind_rage": "G-Max Wind Rage",
    "attack.g-max_wind_rage.description": "A Flying-type attack that Gigantamax Corviknight use. This move removes the effects of moves like Reflect and Light Screen.",
    "attack.g-max_gravitas": "G-Max Gravitas",
    "attack.g-max_gravitas.description": "A Psychic-type attack that Gigantamax Orbeetle use. This move changes gravity for five turns.",
    "attack.g-max_stonesurge": "G-Max Stonesurge",
    "attack.g-max_stonesurge.description": "A Water-type attack that Gigantamax Drednaw use. This move scatters sharp rocks around the field.",
    "attack.g-max_volcalith": "G-Max Volcalith",
    "attack.g-max_volcalith.description": "A Rock-type attack that Gigantamax Coalossal use. This move continues to deal damage to opponents for four turns.",
    "attack.g-max_tartness": "G-Max Tartness",
    "attack.g-max_tartness.description": "A Grass-type attack that Gigantamax Flapple use. This move reduces the opponents' evasiveness.",
    "attack.g-max_sweetness": "G-Max Sweetness",
    "attack.g-max_sweetness.description": "A Grass-type attack that Gigantamax Appletun use. This move heals the status conditions of allies.",
    "attack.g-max_sandblast": "G-Max Sandblast",
    "attack.g-max_sandblast.description": "A Ground-type attack that Gigantamax Sandaconda use. Opponents are trapped in a raging sandstorm for four to five turns.",
    "attack.g-max_stun_shock": "G-Max Stun Shock",
    "attack.g-max_stun_shock.description": "An Electric-type attack that Gigantamax Toxtricity use. This move poisons or paralyzes opponents.",
    "attack.g-max_centiferno": "G-Max Centiferno",
    "attack.g-max_centiferno.description": "A Fire-type attack that Gigantamax Centiskorch use. This move traps opponents in flames for four to five turns.",
    "attack.g-max_smite": "G-Max Smite",
    "attack.g-max_smite.description": "A Fairy-type attack that Gigantamax Hatterene use. This move confuses opponents.",
    "attack.g-max_snooze": "G-Max Snooze",
    "attack.g-max_snooze.description": "A Dark-type attack that Gigantamax Grimmsnarl use. The user lets loose a huge yawn that lulls the targets into falling asleep on the next turn.",
    "attack.g-max_finale": "G-Max Finale",
    "attack.g-max_finale.description": "A Fairy-type attack that Gigantamax Alcremie use. This move heals the HP of allies.",
    "attack.g-max_steelsurge": "G-Max Steelsurge",
    "attack.g-max_steelsurge.description": "A Steel-type attack that Gigantamax Copperajah use. This move scatters sharp spikes around the field.",
    "attack.g-max_depletion": "G-Max Depletion",
    "attack.g-max_depletion.description": "A Dragon-type attack that Gigantamax Duraludon use. Reduces the PP of the last move used.",
    "attack.g-max_one_blow": "G-Max One Blow",
    "attack.g-max_one_blow.description": "A Dark-type attack that Gigantamax Urshifu use. This single-strike move can ignore Max Guard.",
    "attack.g-max_rapid_flow": "G-Max Rapid Flow",
    "attack.g-max_rapid_flow.description": "A Water-type attack that Gigantamax Urshifu use. This rapid-strike move can ignore Max Guard.",

    "status.burn": "Burned",
    "status.confusion": "Confused",
    "status.cursed": "Cursed",
    "status.infatuated": "Infatuated",
    "status.flee": "Fleeing",
    "status.flinch": "Flinched",
    "status.flying": "Flying",
    "status.freeze": "Frozen",
    "status.leech": "Leeched",
    "status.lightscreen": "Light Screen",
    "status.mist": "Mist",
    "status.paralysis": "Paralyzed",
    "status.poison": "Poisoned",
    "status.poisonbadly": "Badly Poisoned",
    "status.protect": "Protect",
    "status.safeguard": "Safeguard",
    "status.sleep": "Asleep",
    "status.smackeddown": "Smacked Down",
    "status.substitute": "Substitute",
    "status.sunny": "Sunny",
    "status.wait": "Waiting",
    "status.trickroom": "Trick Room",
    "status.perish": "Perishing",
    "status.yawn": "Drowsy",
    "status.disable": "Disabled",
    "status.immobilize": "Immobilized",
    "status.recharge": "Recharging",
    "status.aquaring": "Aqua Ring",
    "status.underground": "Underground",
    "status.transformed": "Transformed",
    "status.meanlook": "Mean Look",
    "status.noretreat": "No Retreat",
    "status.futuresight": "Future Sight",
    "status.magnetrise": "Magnet Rise",
    "status.spikes": "Spikes",
    "status.toxicspikes": "Toxic Spikes",
    "status.stealthrock": "Stealth Rock",
    "status.steelsurge": "Steelsurge",
    "status.partialtrap": "Partially Trapped",
    "status.gmaxrepeatdamage": "Gigantamax Damage",
    "status.reflect": "Reflect",
    "status.submerged": "Submerged",
    "status.raging": "Raging",
    "status.telekinesis": "Telekinesis",
    "status.tailwind": "Tailwind",
    "status.destinybond": "Destiny Bond",
    "status.taunt": "Taunted",
    "status.tempmoveset": "Temporary Moveset",
    "status.healingwish": "Healing Wish",
    "status.roosting": "Roosting",
    "status.wish": "Wish",
    "status.encore": "Encore",
    "status.focus": "Focusing",
    "status.magiccoat": "Magic Coat",
    "status.ingrain": "Ingrained",
    "status.stockpile": "Stockpiling",
    "status.snatch": "Snatched",
    "status.minimize": "Minimized",
    "status.gravity": "Gravity",
    "status.hail": "Hail",
    "status.rainy": "Rain",
    "status.sandstorm": "Sandstorm",
    "status.torment": "Tormented",
    "status.foresight": "Foresight",
    "status.gastroacid": "Gastro Acid",
    "status.guardsplit": "Guard Split",
    "status.powersplit": "Power Split",
    "status.wonderroom": "Wonder Room",
    "status.lockon": "Locked On",
    "status.endure": "Enduring",
    "status.wideguard": "Wide Guard",
    "status.charge": "Charging",
    "status.nightmare": "Nightmare",
    "status.mefirst": "Me First",
    "status.powertrick": "Power Trick",
    "status.autotomize": "Autotomize",
    "status.defensecurl": "Defense Curl",
    "status.skydropping": "Sky Drop",
    "status.skydropped": "Sky Drop",
    "status.followme": "Follow Me",
    "status.imprison": "Imprisoned",
    "status.healblock": "Heal Block",
    "status.mudsport": "Mud Sport",
    "status.watersport": "Water Sport",
    "status.firepledge": "Fire Pledge",
    "status.grasspledge": "Grass Pledge",
    "status.waterpledge": "Water Pledge",
    "status.helpinghand": "Helping Hand",
    "status.quickguard": "Quick Guard",
    "status.embargo": "Embargoed",
    "status.grudge": "Grudge",
    "status.luckychant": "Lucky Chant",
    "status.magicroom": "Magic Room",
    "status.lunardance": "Lunar Dance",
    "status.vanish": "Vanished",
    "status.multiturn": "Multiple Turn",
    "status.bide": "Biding",
    "status.uproar": "Uproar",
    "status.echoedvoice": "Echoed Voice",
    "status.furycutter": "Fury Cutter",
    "status.darkaura": "Dark Aura",
    "status.fairyaura": "Fairy Aura",
    "status.craftyshield": "Crafty Shield",
    "status.none": "None",
    "status.electricterrain": "Electric Terrain",
    "status.electrify": "Electrified",
    "status.fairylock": "Fairy Lock",
    "status.grassyterrain": "Grassy Terrain",
    "status.iondeluge": "Ion Deluge",
    "status.kingsshield": "King's Shield",
    "status.banefulbunker": "Baneful Bunker",
    "status.matblock": "Mat Block",
    "status.mistyterrain": "Misty Terrain",
    "status.powder": "Powder",
    "status.spikyshield": "Spiky Shield",
    "status.stickyweb": "Sticky Web",
    "status.psychicterrain": "Psychic Terrain",
    "status.mysteriousaircurrent": "Delta Stream",
    "status.auroraveil": "Aurora Veil",
    "status.beakblast": "Beak Blast",
    "status.speedswap": "Speed Swap",
    "status.tarshot": "Tar Shot",
    "status.shelltrap": "Shell Trap",
    "status.corrosivegas": "Corrosive Gas",
    "status.throatchop": "Throat Chop",
    "status.maxguard": "Max Guard",

    "pixelmon.abomasnow": "Abomasnow",
    "pixelmon.abomasnow.description": "It blankets wide areas in snow by whipping up blizzards. It is also known as \"The Ice Monster.\"",
    "pixelmon.abra": "Abra",
    "pixelmon.abra.description": "Abra sleeps for eighteen hours a day. However, it can sense the presence of foes even while it is sleeping. In such a situation, this Pokémon immediately teleports to safety.",
    "pixelmon.absol": "Absol",
    "pixelmon.absol.description": "Every time Absol appears before people, it is followed by a disaster such as an earthquake or a tidal wave. As a result, it came to be known as the disaster Pokémon.",
    "pixelmon.accelgor": "Accelgor",
    "pixelmon.accelgor.description": "Having removed its heavy shell, it becomes very light and can fight with ninja-like movements.",
    "pixelmon.aegislash": "Aegislash",
    "pixelmon.aegislash.description": "Generations of kings were attended by these Pokémon, which used their spectral power to manipulate and control people and Pokémon.",
    "pixelmon.aerodactyl": "Aerodactyl",
    "pixelmon.aerodactyl.description": "Aerodactyl is a Pokémon from the age of dinosaurs. It was regenerated from genetic material extracted from amber. It is imagined to have been the king of the skies in ancient times.",
    "pixelmon.aggron": "Aggron",
    "pixelmon.aggron.description": "Aggron claims an entire mountain as its own territory. It mercilessly beats up anything that violates its environment. This Pokémon vigilantly patrols its territory at all times.",
    "pixelmon.aipom": "Aipom",
    "pixelmon.aipom.description": "Aipom's tail ends in a hand-like appendage that can be cleverly manipulated. However, because the Pokémon uses its tail so much, its real hands have become rather clumsy.",
    "pixelmon.alakazam": "Alakazam",
    "pixelmon.alakazam.description": "Alakazam's brain continually grows, making its head far too heavy to support with its neck. This Pokémon holds its head up using its psychokinetic power instead.",
    "pixelmon.alcremie": "Alcremie",
    "pixelmon.alcremie.description": "When it trusts a Trainer, it will treat them to berries it's decorated with cream.",
    "pixelmon.alomomola": "Alomomola",
    "pixelmon.alomomola.description": "It gently holds injured and weak Pokémon in its fins. Its special membrane heals their wounds.",
    "pixelmon.altaria": "Altaria",
    "pixelmon.altaria.description": "Altaria dances and wheels through the sky among billowing, cotton-like clouds. By singing melodies in its crystal-clear voice, this Pokémon makes its listeners experience dreamy wonderment.",
    "pixelmon.amaura": "Amaura",
    "pixelmon.amaura.description": "This ancient Pokémon was restored from part of its body that had been frozen in ice for over 100 million years.",
    "pixelmon.ambipom": "Ambipom",
    "pixelmon.ambipom.description": "They work in large colonies and make rings by linking their tails, apparently in friendship.",
    "pixelmon.amoonguss": "Amoonguss",
    "pixelmon.amoonguss.description": "They show off their Poké Ball caps to lure prey, but very few Pokémon are fooled by this.",
    "pixelmon.ampharos": "Ampharos",
    "pixelmon.ampharos.description": "Ampharos gives off so much light that it can be seen even from space. People in the old days used the light of this Pokémon to send signals back and forth with others far away.",
    "pixelmon.anorith": "Anorith",
    "pixelmon.anorith.description": "Anorith was regenerated from a prehistoric fossil. This primitive Pokémon once lived in warm seas. It grips its prey firmly between its two large claws.",
    "pixelmon.appletun": "Appletun",
    "pixelmon.appletun.description": "Eating a sweet apple caused its evolution. A nectarous scent wafts from its body, luring in the bug Pokémon it preys on.",
    "pixelmon.applin": "Applin",
    "pixelmon.applin.description": "It spends its entire life inside an apple. It hides from its natural enemies, bird Pokémon, by pretending it's just an apple and nothing more.",
    "pixelmon.araquanid": "Araquanid",
    "pixelmon.araquanid.description": "It usually passes its time in the water. When its belly is full, it stores its subdued prey in the water bubble on its head.",
    "pixelmon.arbok": "Arbok",
    "pixelmon.arbok.description": "This Pokémon is terrifically strong in order to constrict things with its body. It can even flatten steel oil drums. Once Arbok wraps its body around its foe, escaping its crunching embrace is impossible.",
    "pixelmon.arcanine": "Arcanine",
    "pixelmon.arcanine.description": "Arcanine is known for its high speed. It is said to be capable of running over 6,200 miles in a single day and night. The fire that blazes wildly within this Pokémon's body is its source of power.",
    "pixelmon.arceus": "Arceus",
    "pixelmon.arceus.description": "According to the legends, this Pokémon emerged from an egg and shaped all there is in this world.",
    "pixelmon.archen": "Archen",
    "pixelmon.archen.description": "Revived from a fossil, this Pokémon is thought to be the ancestor of all bird Pokémon.",
    "pixelmon.archeops": "Archeops",
    "pixelmon.archeops.description": "They are intelligent and will cooperate to catch prey. From the ground, they use a running start to take flight.",
    "pixelmon.arctovish": "Arctovish",
    "pixelmon.arctovish.description": "Though it's able to capture prey by freezing its surroundings, it has trouble eating the prey afterward because its mouth is on top of its head.",
    "pixelmon.arctozolt": "Arctozolt",
    "pixelmon.arctozolt.description": "The shaking of its freezing upper half is what generates its electricity. It has a hard time walking around.",
    "pixelmon.ariados": "Ariados",
    "pixelmon.ariados.description": "Ariados's feet are tipped with tiny hooked claws that enable it to scuttle on ceilings and vertical walls. This Pokémon constricts the foe with thin and strong silk webbing.",
    "pixelmon.armaldo": "Armaldo",
    "pixelmon.armaldo.description": "Armaldo’s tough armor makes all attacks bounce off. This Pokémon’s two enormous claws can be freely extended or contracted. They have the power to punch right through a steel slab.",
    "pixelmon.aromatisse": "Aromatisse",
    "pixelmon.aromatisse.description": "It devises various scents, pleasant and unpleasant, and emits scents that its enemies dislike in order to gain an edge in battle.",
    "pixelmon.aron": "Aron",
    "pixelmon.aron.description": "This Pokémon has a body of steel. To make its body, Aron feeds on iron ore that it digs from mountains. Occasionally, it causes major trouble by eating bridges and rails.",
    "pixelmon.arrokuda": "Arrokuda",
    "pixelmon.arrokuda.description": "If it sees any movement around it, this Pokémon charges for it straightaway, leading with its sharply pointed jaw. It's very proud of that jaw.",
    "pixelmon.articuno": "Articuno",
    "pixelmon.articuno.description": "Articuno is a legendary bird Pokémon that can control ice. The flapping of its wings chills the air. As a result, it is said that when this Pokémon flies, snow will fall.",
    "pixelmon.audino": "Audino",
    "pixelmon.audino.description": "Using the feelers on its ears, it can tell how someone is feeling or when an egg might hatch.",
    "pixelmon.aurorus": "Aurorus",
    "pixelmon.aurorus.description": "The diamond-shaped crystals on its body expel air as cold as -240 degrees Fahrenheit, surrounding its enemies and encasing them in ice.",
    "pixelmon.avalugg": "Avalugg",
    "pixelmon.avalugg.description": "Its ice-covered body is as hard as steel. Its cumbersome frame crushes anything that stands in its way.",
    "pixelmon.axew": "Axew",
    "pixelmon.axew.description": "They use their tusks to crush the berries they eat. Repeated regrowth makes their tusks strong and sharp.",
    "pixelmon.azelf": "Azelf",
    "pixelmon.azelf.description": "Known as \"The Being of Willpower.\" It sleeps at the bottom of a lake to keep the world in balance.",
    "pixelmon.azumarill": "Azumarill",
    "pixelmon.azumarill.description": "Azumarill's long ears are indispensable sensors. By focusing its hearing, this Pokémon can identify what kinds of prey are around, even in rough and fast-running rivers.",
    "pixelmon.azurill": "Azurill",
    "pixelmon.azurill.description": "Azurill spins its tail as if it were a lasso, then hurls it far. The momentum of the throw sends its body flying, too. Using this unique action, one of these Pokémon managed to hurl itself a record 33 feet.",
    "pixelmon.bagon": "Bagon",
    "pixelmon.bagon.description": "Bagon has a dream of one day soaring in the sky. In doomed efforts to fly, this Pokémon hurls itself off cliffs. As a result of its dives, its head has grown tough and as hard as tempered steel.",
    "pixelmon.baltoy": "Baltoy",
    "pixelmon.baltoy.description": "Baltoy moves while spinning around on its one foot. Primitive wall paintings depicting this Pokémon living among people were discovered in some ancient ruins.",
    "pixelmon.banette": "Banette",
    "pixelmon.banette.description": "Banette generates energy for laying strong curses by sticking pins into its own body. This Pokémon was originally a pitiful plush doll that was thrown away.",
    "pixelmon.barbaracle": "Barbaracle",
    "pixelmon.barbaracle.description": "When they evolve, two Binacle multiply into seven. They fight with the power of seven Binacle.",
    "pixelmon.barboach": "Barboach",
    "pixelmon.barboach.description": "Barboach’s sensitive whiskers serve as a superb radar system. This Pokémon hides in mud, leaving only its two whiskers exposed while it waits for prey to come along.",
    "pixelmon.barraskewda": "Barraskewda",
    "pixelmon.barraskewda.description": "This Pokémon has a jaw that's as sharp as a spear and as strong as steel. Apparently Barraskewda's flesh is surprisingly tasty, too.",
    "pixelmon.basculegion": "Basculegion",
    "pixelmon.basculegion.description": "Clads itself in the souls of comrades that perished before fulfilling their goals of journeying upstream. No other species throughout all Hisui's rivers is Basculegion's equal.",
    "pixelmon.basculin": "Basculin",
    "pixelmon.basculin.description": "Red- and blue-striped Basculin are very violent and always fighting. They are also remarkably tasty.",
    "pixelmon.bastiodon": "Bastiodon",
    "pixelmon.bastiodon.description": "When they lined up side by side, no foe could break through. They shielded their young in that way.",
    "pixelmon.bayleef": "Bayleef",
    "pixelmon.bayleef.description": "Bayleef's neck is ringed by curled-up leaves. Inside each tubular leaf is a small shoot of a tree. The fragrance of this shoot makes people peppy.",
    "pixelmon.beartic": "Beartic",
    "pixelmon.beartic.description": "They love the cold seas of the north. They create pathways across the ocean waters by freezing their own breath.",
    "pixelmon.beautifly": "Beautifly",
    "pixelmon.beautifly.description": "Beautifly's favorite food is the sweet pollen of flowers. If you want to see this Pokémon, just leave a potted flower by an open window. Beautifly is sure to come looking for pollen.",
    "pixelmon.beedrill": "Beedrill",
    "pixelmon.beedrill.description": "Beedrill is extremely territorial. No one should ever approach its nest—this is for their own safety. If angered, they will attack in a furious swarm.",
    "pixelmon.beheeyem": "Beheeyem",
    "pixelmon.beheeyem.description": "Apparently, it communicates by flashing its three fingers, but those patterns haven't been decoded.",
    "pixelmon.beldum": "Beldum",
    "pixelmon.beldum.description": "Instead of blood, a powerful magnetic force courses through Beldum's body. This Pokémon communicates with others by sending controlled pulses of magnetism.",
    "pixelmon.bellossom": "Bellossom",
    "pixelmon.bellossom.description": "When Bellossom gets exposed to plenty of sunlight, the leaves ringing its body begin to spin around. This Pokémon's dancing is renowned in the southern lands.",
    "pixelmon.bellsprout": "Bellsprout",
    "pixelmon.bellsprout.description": "Bellsprout's thin and flexible body lets it bend and sway to avoid any attack, however strong it may be. From its mouth, this Pokémon spits a corrosive fluid that melts even iron.",
    "pixelmon.bergmite": "Bergmite",
    "pixelmon.bergmite.description": "It blocks opponents' attacks with the ice that shields its body. It uses cold air to repair any cracks with new ice.",
    "pixelmon.bewear": "Bewear",
    "pixelmon.bewear.description": "It waves its hands wildly in intimidation and warning. Life is over for anyone who doesn’t run away as fast as possible.",
    "pixelmon.bibarel": "Bibarel",
    "pixelmon.bibarel.description": "It busily makes its nest with stacks of branches and roots it has cut up with its sharp incisors.",
    "pixelmon.bidoof": "Bidoof",
    "pixelmon.bidoof.description": "With nerves of steel, nothing can perturb it. It is more agile and active than it appears.",
    "pixelmon.binacle": "Binacle",
    "pixelmon.binacle.description": "Two Binacle live together on one rock. When they fight, one of them will move to a different rock.",
    "pixelmon.bisharp": "Bisharp",
    "pixelmon.bisharp.description": "This pitiless Pokémon commands a group of Pawniard to hound prey into immobility. It then moves in to finish the prey off.",
    "pixelmon.blacephalon": "Blacephalon",
    "pixelmon.blacephalon.description": "It slithers toward people. Then, without warning, it triggers the explosion of its own head. It’s apparently one kind of Ultra Beast.",
    "pixelmon.blastoise": "Blastoise",
    "pixelmon.blastoise.description": "Blastoise has water spouts that protrude from its shell. The water spouts are very accurate. They can shoot bullets of water with enough accuracy to strike empty cans from a distance of over 160 feet.",
    "pixelmon.blaziken": "Blaziken",
    "pixelmon.blaziken.description": "In battle, Blaziken blows out intense flames from its wrists and attacks foes courageously. The stronger the foe, the more intensely this Pokémon’s wrists burn.",
    "pixelmon.blipbug": "Blipbug",
    "pixelmon.blipbug.description": "A constant collector of information, this Pokémon is very smart. Very strong is what it isn't.",
    "pixelmon.blissey": "Blissey",
    "pixelmon.blissey.description": "Blissey senses sadness with its fluffy coat of fur. If it does so, this Pokémon will rush over to a sad person, no matter how far away, to share a Lucky Egg that brings a smile to any face.",
    "pixelmon.blitzle": "Blitzle",
    "pixelmon.blitzle.description": "When thunderclouds cover the sky, it will appear. It can catch lightning with its mane and store the electricity.",
    "pixelmon.boldore": "Boldore",
    "pixelmon.boldore.description": "Because its energy was too great to be contained, the energy leaked and formed orange crystals.",
    "pixelmon.boltund": "Boltund",
    "pixelmon.boltund.description": "This Pokémon generates electricity and channels it into its legs to keep them going strong. Boltund can run nonstop for three full days.",
    "pixelmon.bonsly": "Bonsly",
    "pixelmon.bonsly.description": "It prefers arid environments. It leaks water from its eyes to adjust its body's fluid levels.",
    "pixelmon.bouffalant": "Bouffalant",
    "pixelmon.bouffalant.description": "They charge wildly and headbutt everything. Their headbutts have enough destructive force to derail a train.",
    "pixelmon.bounsweet": "Bounsweet",
    "pixelmon.bounsweet.description": "Because of its sweet, delicious aroma, bird Pokémon are always after it, but it’s not intelligent enough to care.",
    "pixelmon.braixen": "Braixen",
    "pixelmon.braixen.description": "It has a twig stuck in its tail. With friction from its tail fur, it sets the twig on fire and launches into battle.",
    "pixelmon.braviary": "Braviary",
    "pixelmon.braviary.description": "For the sake of its friends, this brave warrior of the sky will not stop battling, even if injured.",
    "pixelmon.breloom": "Breloom",
    "pixelmon.breloom.description": "Breloom closes in on its foe with light and sprightly footwork, then throws punches with its stretchy arms. This Pokémon’s fighting technique puts boxers to shame.",
    "pixelmon.brionne": "Brionne",
    "pixelmon.brionne.description": "It gets excited when it sees a dance it doesn’t know. This hard worker practices diligently until it can learn that dance.",
    "pixelmon.bronzong": "Bronzong",
    "pixelmon.bronzong.description": "In ages past, this Pokémon was revered as a bringer of rain. It was found buried in the ground.",
    "pixelmon.bronzor": "Bronzor",
    "pixelmon.bronzor.description": "Ancient people believed that the pattern on Bronzor's back contained a mysterious power.",
    "pixelmon.bruxish": "Bruxish",
    "pixelmon.bruxish.description": "It burrows beneath the sand, radiating psychic power from the protuberance on its head. It waits for prey as it surveys the area.",
    "pixelmon.budew": "Budew",
    "pixelmon.budew.description": "When it feels the sun's warm touch, it opens its bud to release pollen. It lives alongside clear pools.",
    "pixelmon.buizel": "Buizel",
    "pixelmon.buizel.description": "It swims by rotating its two tails like a screw. When it dives, its flotation sac collapses.",
    "pixelmon.bulbasaur": "Bulbasaur",
    "pixelmon.bulbasaur.description": "Bulbasaur can be seen napping in bright sunlight. There is a seed on its back. By soaking up the sun’s rays, the seed grows progressively larger.",
    "pixelmon.buneary": "Buneary",
    "pixelmon.buneary.description": "Its ears are always rolled up. They can be forcefully extended to shatter even a large boulder.",
    "pixelmon.bunnelby": "Bunnelby",
    "pixelmon.bunnelby.description": "They use their large ears to dig burrows. They will dig the whole night through.",
    "pixelmon.burmy": "Burmy",
    "pixelmon.burmy.description": "To shelter itself from cold, wintry winds, it covers itself with a cloak made of twigs and leaves.",
    "pixelmon.butterfree": "Butterfree",
    "pixelmon.butterfree.description": "Butterfree has a superior ability to search for delicious honey from flowers. It can even search out, extract, and carry honey from flowers that are blooming over six miles from its nest.",
    "pixelmon.buzzwole": "Buzzwole",
    "pixelmon.buzzwole.description": "Buzzwole goes around showing off its abnormally swollen muscles. It is one kind of Ultra Beast.",
    "pixelmon.cacnea": "Cacnea",
    "pixelmon.cacnea.description": "Cacnea lives in arid locations such as deserts. It releases a strong aroma from its flower to attract prey. When prey comes near, this Pokémon shoots sharp thorns from its body to bring the victim down.",
    "pixelmon.cacturne": "Cacturne",
    "pixelmon.cacturne.description": "During the daytime, Cacturne remains unmoving so that it does not lose any moisture to the harsh desert sun. This Pokémon becomes active at night when the temperature drops.",
    "pixelmon.calyrex": "Calyrex",
    "pixelmon.calyrex.description": "Calyrex is a merciful Pokémon, capable of providing healing and blessings. It reigned over the Galar region in times of yore.",
    "pixelmon.camerupt": "Camerupt",
    "pixelmon.camerupt.description": "Camerupt has a volcano inside its body. Magma of 18,000 degrees Fahrenheit courses through its body. Occasionally, the humps on this Pokémon’s back erupt, spewing the superheated magma.",
    "pixelmon.carbink": "Carbink",
    "pixelmon.carbink.description": "Born from temperatures and pressures deep underground, it fires beams from the stone in its head.",
    "pixelmon.carkol": "Carkol",
    "pixelmon.carkol.description": "It forms coal inside its body. Coal dropped by this Pokémon once helped fuel the lives of people in the Galar region.",
    "pixelmon.carnivine": "Carnivine",
    "pixelmon.carnivine.description": "It attracts prey with its sweet-smelling saliva, then chomps down. It takes a whole day to eat prey.",
    "pixelmon.carracosta": "Carracosta",
    "pixelmon.carracosta.description": "They can live both in the ocean and on land. A slap from one of them is enough to open a hole in the bottom of a tanker.",
    "pixelmon.carvanha": "Carvanha",
    "pixelmon.carvanha.description": "Carvanha’s strongly developed jaws and its sharply pointed fangs pack the destructive power to rip out boat hulls. Many boats have been attacked and sunk by this Pokémon.",
    "pixelmon.cascoon": "Cascoon",
    "pixelmon.cascoon.description": "Cascoon makes its protective cocoon by wrapping its body entirely with a fine silk from its mouth. Once the silk goes around its body, it hardens. This Pokémon prepares for its evolution inside the cocoon.",
    "pixelmon.castform": "Castform",
    "pixelmon.castform.description": "Castform’s appearance changes with the weather. This Pokémon gained the ability to use the vast power of nature to protect its tiny body.",
    "pixelmon.caterpie": "Caterpie",
    "pixelmon.caterpie.description": "Caterpie has a voracious appetite. It can devour leaves bigger than its body right before your eyes. From its antenna, this Pokémon releases a terrifically strong odor.",
    "pixelmon.celebi": "Celebi",
    "pixelmon.celebi.description": "This Pokémon came from the future by crossing over time. It is thought that so long as Celebi appears, a bright and shining future awaits us.",
    "pixelmon.celesteela": "Celesteela",
    "pixelmon.celesteela.description": "One of the dangerous UBs, high energy readings can be detected coming from both of its huge arms.",
    "pixelmon.centiskorch": "Centiskorch",
    "pixelmon.centiskorch.description": "When it heats up, its body temperature reaches about 1,500 degrees Fahrenheit. It lashes its body like a whip and launches itself at enemies.",
    "pixelmon.chandelure": "Chandelure",
    "pixelmon.chandelure.description": "Being consumed in Chandelure's flame burns up the spirit, leaving the body behind.",
    "pixelmon.chansey": "Chansey",
    "pixelmon.chansey.description": "Chansey lays nutritionally excellent eggs on an everyday basis. The eggs are so delicious, they are easily and eagerly devoured by even those people who have lost their appetite.",
    "pixelmon.charizard": "Charizard",
    "pixelmon.charizard.description": "Charizard flies around the sky in search of powerful opponents. It breathes fire of such great heat that it melts anything. However, it never turns its fiery breath on any opponent weaker than itself.",
    "pixelmon.charjabug": "Charjabug",
    "pixelmon.charjabug.description": "It buries itself in fallen leaves and barely moves, munching away on humus. If you accidentally step on one, you’ll get a shock!",
    "pixelmon.charmander": "Charmander",
    "pixelmon.charmander.description": "The flame that burns at the tip of its tail is an indication of its emotions. The flame wavers when Charmander is enjoying itself. If the Pokémon becomes enraged, the flame burns fiercely.",
    "pixelmon.charmeleon": "Charmeleon",
    "pixelmon.charmeleon.description": "Charmeleon mercilessly destroys its foes using its sharp claws. If it encounters a strong foe, it turns aggressive. In this excited state, the flame at the tip of its tail flares with a bluish white color.",
    "pixelmon.chatot": "Chatot",
    "pixelmon.chatot.description": "It mimics the cries of other Pokémon to trick them into thinking it's one of them. This way they won't attack it.",
    "pixelmon.cherrim": "Cherrim",
    "pixelmon.cherrim.description": "During times of strong sunlight, its bud blooms, its petals open fully, and it becomes very active.",
    "pixelmon.cherubi": "Cherubi",
    "pixelmon.cherubi.description": "Sunlight colors it red. When the small ball is drained of nutrients, it shrivels to herald evolution.",
    "pixelmon.chesnaught": "Chesnaught",
    "pixelmon.chesnaught.description": "Its Tackle is forceful enough to flip a 50-ton tank. It shields its allies from danger with its own body.",
    "pixelmon.chespin": "Chespin",
    "pixelmon.chespin.description": "The quills on its head are usually soft. When it flexes them, the points become so hard and sharp that they can pierce rock.",
    "pixelmon.chewtle": "Chewtle",
    "pixelmon.chewtle.description": "Apparently the itch of its teething impels it to snap its jaws at anything in front of it.",
    "pixelmon.chikorita": "Chikorita",
    "pixelmon.chikorita.description": "In battle, Chikorita waves its leaf around to keep the foe at bay. However, a sweet fragrance also wafts from the leaf, becalming the battling Pokémon and creating a cozy, friendly atmosphere all around.",
    "pixelmon.chimchar": "Chimchar",
    "pixelmon.chimchar.description": "Its fiery rear end is fueled by gas made in its belly. Even rain can't extinguish the fire.",
    "pixelmon.chimecho": "Chimecho",
    "pixelmon.chimecho.description": "Chimecho makes its cries echo inside its hollow body. When this Pokémon becomes enraged, its cries result in ultrasonic waves that have the power to knock foes flying.",
    "pixelmon.chinchou": "Chinchou",
    "pixelmon.chinchou.description": "Chinchou lets loose positive and negative electrical charges from its two antennas to make its prey faint. This Pokémon flashes its electric lights to exchange signals with others.",
    "pixelmon.chingling": "Chingling",
    "pixelmon.chingling.description": "Each time it hops, it makes a ringing sound. It deafens foes by emitting high-frequency cries.",
    "pixelmon.cinccino": "Cinccino",
    "pixelmon.cinccino.description": "Their white fur feels amazing to touch. Their fur repels dust and prevents static electricity from building up.",
    "pixelmon.cinderace": "Cinderace",
    "pixelmon.cinderace.description": "It juggles a pebble with its feet, turning it into a burning soccer ball. Its shots strike opponents hard and leave them scorched.",
    "pixelmon.siruds_cinderace": "Sirudace",
    "pixelmon.siruds_cinderace.description": "It juggles a pebble with its feet, turning it into a burning soccer ball. Its shots strike opponents hard and leave them scorched.",
    "pixelmon.clamperl": "Clamperl",
    "pixelmon.clamperl.description": "Clamperl’s sturdy shell is not only good for protection—it is also used for clamping and catching prey. A fully grown Clamperl’s shell will be scored with nicks and scratches all over.",
    "pixelmon.clauncher": "Clauncher",
    "pixelmon.clauncher.description": "They knock down flying prey by firing compressed water from their massive claws like shooting a pistol.",
    "pixelmon.clawitzer": "Clawitzer",
    "pixelmon.clawitzer.description": "Their enormous claws launch cannonballs of water powerful enough to pierce tanker hulls.",
    "pixelmon.claydol": "Claydol",
    "pixelmon.claydol.description": "Claydol are said to be dolls of mud made by primitive humans and brought to life by exposure to a mysterious ray. This Pokémon moves about while levitating.",
    "pixelmon.clefable": "Clefable",
    "pixelmon.clefable.description": "Clefable moves by skipping lightly as if it were flying using its wings. Its bouncy step even lets it walk on water. It is known to take strolls on lakes on quiet, moonlit nights.",
    "pixelmon.clefairy": "Clefairy",
    "pixelmon.clefairy.description": "On every night of a full moon, groups of this Pokémon come out to play. When dawn arrives, the tired Clefairy return to their quiet mountain retreats and go to sleep nestled up against each other.",
    "pixelmon.cleffa": "Cleffa",
    "pixelmon.cleffa.description": "On nights with many shooting stars, Cleffa can be seen dancing in a ring. They dance through the night and stop only at the break of day, when these Pokémon quench their thirst with the morning dew.",
    "pixelmon.clobbopus": "Clobbopus",
    "pixelmon.clobbopus.description": "It's very curious, but its means of investigating things is to try to punch them with its tentacles. The search for food is what brings it onto land.",
    "pixelmon.cloyster": "Cloyster",
    "pixelmon.cloyster.description": "Cloyster is capable of swimming in the sea. It does so by swallowing water, then jetting it out toward the rear. This Pokémon shoots spikes from its shell using the same system.",
    "pixelmon.coalossal": "Coalossal",
    "pixelmon.coalossal.description": "It's usually peaceful, but the vandalism of mines enrages it. Offenders will be incinerated with flames that reach 2,700 degrees Fahrenheit.",
    "pixelmon.cobalion": "Cobalion",
    "pixelmon.cobalion.description": "It has a body and heart of steel. Its glare is sufficient to make even an unruly Pokémon obey it.",
    "pixelmon.cofagrigus": "Cofagrigus",
    "pixelmon.cofagrigus.description": "It has been said that they swallow those who get too close and turn them into mummies. They like to eat gold nuggets.",
    "pixelmon.combee": "Combee",
    "pixelmon.combee.description": "The trio is together from birth. It constantly gathers honey from flowers to please Vespiquen.",
    "pixelmon.combusken": "Combusken",
    "pixelmon.combusken.description": "Combusken toughens up its legs and thighs by running through fields and mountains. This Pokémon’s legs possess both speed and power, enabling it to dole out 10 kicks in one second.",
    "pixelmon.comfey": "Comfey",
    "pixelmon.comfey.description": "It stretches sticky vines out from its head and picks flowers to adorn itself with. When it doesn’t have any flowers, it feels uneasy.",
    "pixelmon.conkeldurr": "Conkeldurr",
    "pixelmon.conkeldurr.description": "It is thought that Conkeldurr taught humans how to make concrete more than 2,000 years ago.",
    "pixelmon.copperajah": "Copperajah",
    "pixelmon.copperajah.description": "They came over from another region long ago and worked together with humans. Their green skin is resistant to water.",
    "pixelmon.corphish": "Corphish",
    "pixelmon.corphish.description": "Corphish were originally foreign Pokémon that were imported as pets. They eventually turned up in the wild. This Pokémon is very hardy and has greatly increased its population.",
    "pixelmon.corsola": "Corsola",
    "pixelmon.corsola.description": "Corsola's branches glitter very beautifully in seven colors when they catch sunlight. If any branch breaks off, this Pokémon grows it back in just one night.",
    "pixelmon.corviknight": "Corviknight",
    "pixelmon.corviknight.description": "This Pokémon reigns supreme in the skies of the Galar region. The black luster of its steel body could drive terror into the heart of any foe.",
    "pixelmon.corvisquire": "Corvisquire",
    "pixelmon.corvisquire.description": "Smart enough to use tools in battle, these Pokémon have been seen picking up rocks and flinging them or using ropes to wrap up enemies.",
    "pixelmon.cosmoem": "Cosmoem",
    "pixelmon.cosmoem.description": "The king who ruled Alola in times of antiquity called it the “cocoon of the stars” and built an altar to worship it.",
    "pixelmon.cosmog": "Cosmog",
    "pixelmon.cosmog.description": "Even though its helpless, gaseous body can be blown away by the slightest breeze, it doesn’t seem to care.",
    "pixelmon.cottonee": "Cottonee",
    "pixelmon.cottonee.description": "When attacked, it escapes by shooting cotton from its body. The cotton serves as a decoy to distract the attacker.",
    "pixelmon.crabominable": "Crabominable",
    "pixelmon.crabominable.description": "It stores coldness in its pincers and pummels its foes. It can even smash thick walls of ice to bits!",
    "pixelmon.crabrawler": "Crabrawler",
    "pixelmon.crabrawler.description": "Its hard pincers are well suited to both offense and defense. Fights between two Crabrawler are like boxing matches.",
    "pixelmon.cradily": "Cradily",
    "pixelmon.cradily.description": "Cradily roams around the ocean floor in search of food. This Pokémon freely extends its tree trunk-like neck and captures unwary prey using its eight tentacles.",
    "pixelmon.cramorant": "Cramorant",
    "pixelmon.cramorant.description": "It's so strong that it can knock out some opponents in a single hit, but it also may forget what it's battling midfight.",
    "pixelmon.cranidos": "Cranidos",
    "pixelmon.cranidos.description": "It was resurrected from an iron ball-like fossil. It downs prey with its headbutts.",
    "pixelmon.crawdaunt": "Crawdaunt",
    "pixelmon.crawdaunt.description": "Crawdaunt has an extremely violent nature that compels it to challenge other living things to battle. Other life-forms refuse to live in ponds inhabited by this Pokémon, making them desolate places.",
    "pixelmon.cresselia": "Cresselia",
    "pixelmon.cresselia.description": "Shiny particles are released from its wings like a veil. It is said to represent the crescent moon.",
    "pixelmon.croagunk": "Croagunk",
    "pixelmon.croagunk.description": "Its cheeks hold poison sacs. It tries to catch foes off guard to jab them with toxic fingers.",
    "pixelmon.crobat": "Crobat",
    "pixelmon.crobat.description": "If this Pokémon is flying by fluttering only a pair of wings on either the forelegs or hind legs, it's proof that Crobat has been flying a long distance. It switches the wings it uses if it is tired.",
    "pixelmon.croconaw": "Croconaw",
    "pixelmon.croconaw.description": "Once Croconaw has clamped its jaws on its foe, it will absolutely not let go. Because the tips of its fangs are forked back like barbed fishhooks, they become impossible to remove when they have sunk in.",
    "pixelmon.crustle": "Crustle",
    "pixelmon.crustle.description": "It possesses legs of enormous strength, enabling it to carry heavy slabs for many days, even when crossing arid land.",
    "pixelmon.cryogonal": "Cryogonal",
    "pixelmon.cryogonal.description": "They are born in snow clouds. They use chains made of ice crystals to capture prey.",
    "pixelmon.cubchoo": "Cubchoo",
    "pixelmon.cubchoo.description": "Its nose is always running. It sniffs the snot back up because the mucus provides the raw material for its moves.",
    "pixelmon.cubone": "Cubone",
    "pixelmon.cubone.description": "Cubone pines for the mother it will never see again. Seeing a likeness of its mother in the full moon, it cries. The stains on the skull the Pokémon wears are made by the tears it sheds.",
    "pixelmon.cufant": "Cufant",
    "pixelmon.cufant.description": "It digs up the ground with its trunk. It's also very strong, being able to carry loads of over five tons without any problem at all.",
    "pixelmon.cursola": "Cursola",
    "pixelmon.cursola.description": "Its shell is overflowing with its heightened otherworldly energy. The ectoplasm serves as protection for this Pokémon's core spirit.",
    "pixelmon.cutiefly": "Cutiefly",
    "pixelmon.cutiefly.description": "Nectar and pollen are its favorite fare. In fields of flowers, it gets into skirmishes with Butterfree over food.",
    "pixelmon.cyndaquil": "Cyndaquil",
    "pixelmon.cyndaquil.description": "Cyndaquil protects itself by flaring up the flames on its back. The flames are vigorous if the Pokémon is angry. However, if it is tired, the flames sputter fitfully with incomplete combustion.",
    "pixelmon.darkrai": "Darkrai",
    "pixelmon.darkrai.description": "It chases people and Pokémon from its territory by causing them to experience deep, nightmarish slumbers.",
    "pixelmon.darmanitan": "Darmanitan",
    "pixelmon.darmanitan.description": "When one is injured in a fierce battle, it hardens into a stone-like form. Then it meditates and sharpens its mind.",
    "pixelmon.dartrix": "Dartrix",
    "pixelmon.dartrix.description": "This narcissistic Pokémon is a clean freak. If you don’t groom it diligently, it will stop listening to you.",
    "pixelmon.darumaka": "Darumaka",
    "pixelmon.darumaka.description": "Darumaka's droppings are hot, so people used to put them in their clothes to keep themselves warm.",
    "pixelmon.decidueye": "Decidueye",
    "pixelmon.decidueye.description": "It nocks its arrow quills and shoots them at opponents. When it simply can’t afford to miss, it tugs the vine on its head to improve its focus.",
    "pixelmon.dedenne": "Dedenne",
    "pixelmon.dedenne.description": "Its whiskers serve as antennas. By sending and receiving electrical waves, it can communicate with others over vast distances.",
    "pixelmon.deerling": "Deerling",
    "pixelmon.deerling.description": "Their coloring changes according to the seasons and can be slightly affected by the temperature and humidity as well.",
    "pixelmon.deino": "Deino",
    "pixelmon.deino.description": "They cannot see, so they bite to learn about their surroundings. Their bodies are covered in wounds.",
    "pixelmon.delcatty": "Delcatty",
    "pixelmon.delcatty.description": "Delcatty prefers to live an unfettered existence in which it can do as it pleases at its own pace. Because this Pokémon eats and sleeps whenever it decides, its daily routines are completely random.",
    "pixelmon.delibird": "Delibird",
    "pixelmon.delibird.description": "Delibird carries its food bundled up in its tail. There once was a famous explorer who managed to reach the peak of the world's highest mountain, thanks to one of these Pokémon sharing its food.",
    "pixelmon.delphox": "Delphox",
    "pixelmon.delphox.description": "It gazes into the flame at the tip of its branch to achieve a focused state, which allows it to see into the future.",
    "pixelmon.deoxys": "Deoxys",
    "pixelmon.deoxys.description": "The DNA of a space virus underwent a sudden mutation upon exposure to a laser beam and resulted in Deoxys. The crystalline organ on this Pokémon’s chest appears to be its brain.",
    "pixelmon.dewgong": "Dewgong",
    "pixelmon.dewgong.description": "Dewgong loves to snooze on bitterly cold ice. The sight of this Pokémon sleeping on a glacier was mistakenly thought to be a mermaid by a mariner long ago.",
    "pixelmon.dewott": "Dewott",
    "pixelmon.dewott.description": "Strict training is how it learns its flowing double-scalchop technique.",
    "pixelmon.dewpider": "Dewpider",
    "pixelmon.dewpider.description": "When two Dewpider meet, they display their water bubbles to each other. Then the one with the smaller bubble gets out of the other’s way.",
    "pixelmon.dhelmise": "Dhelmise",
    "pixelmon.dhelmise.description": "It wraps its prey in green seaweed and sucks away their vitality. It only likes to go after big prey like Wailord.",
    "pixelmon.dialga": "Dialga",
    "pixelmon.dialga.description": "A Pokémon spoken of in legend. It is said that time began moving when Dialga was born.",
    "pixelmon.diancie": "Diancie",
    "pixelmon.diancie.description": "A sudden transformation of Carbink, its pink, glimmering body is said to be the loveliest sight in the whole world.",
    "pixelmon.diggersby": "Diggersby",
    "pixelmon.diggersby.description": "With their powerful ears, they can heft boulders of a ton or more with ease. They can be a big help at construction sites.",
    "pixelmon.diglett": "Diglett",
    "pixelmon.diglett.description": "Diglett are raised in most farms. The reason is simple—wherever this Pokémon burrows, the soil is left perfectly tilled for planting crops. This soil is made ideal for growing delicious vegetables.",
    "pixelmon.ditto": "Ditto",
    "pixelmon.ditto.description": "Ditto rearranges its cell structure to transform itself into other shapes. However, if it tries to transform itself into something by relying on its memory, this Pokémon manages to get details wrong.",
    "pixelmon.dodrio": "Dodrio",
    "pixelmon.dodrio.description": "Watch out if Dodrio's three heads are looking in three separate directions. It's a sure sign that it is on its guard. Don't go near this Pokémon if it's being wary-it may decide to peck you.",
    "pixelmon.doduo": "Doduo",
    "pixelmon.doduo.description": "Doduo's two heads never sleep at the same time. Its two heads take turns sleeping, so one head can always keep watch for enemies while the other one sleeps.",
    "pixelmon.donphan": "Donphan",
    "pixelmon.donphan.description": "Donphan's favorite attack is curling its body into a ball, then charging at its foe while rolling at high speed. Once it starts rolling, this Pokémon can't stop very easily.",
    "pixelmon.dottler": "Dottler",
    "pixelmon.dottler.description": "It barely moves, but it's still alive. Hiding in its shell without food or water seems to have awakened its psychic powers.",
    "pixelmon.doublade": "Doublade",
    "pixelmon.doublade.description": "When Honedge evolves, it divides into two swords, which cooperate via telepathy to coordinate attacks and slash their enemies to ribbons.",
    "pixelmon.dracovish": "Dracovish",
    "pixelmon.dracovish.description": "Powerful legs and jaws made it the apex predator of its time. Its own overhunting of its prey was what drove it to extinction.",
    "pixelmon.dracozolt": "Dracozolt",
    "pixelmon.dracozolt.description": "In ancient times, it was unbeatable thanks to its powerful lower body, but it went extinct anyway after it depleted all its plant-based food sources.",
    "pixelmon.dragalge": "Dragalge",
    "pixelmon.dragalge.description": "Their poison is strong enough to eat through the hull of a tanker, and they spit it indiscriminately at anything that enters their territory.",
    "pixelmon.dragapult": "Dragapult",
    "pixelmon.dragapult.description": "When it isn't battling, it keeps Dreepy in the holes on its horns. Once a fight starts, it launches the Dreepy like supersonic missiles.",
    "pixelmon.dragonair": "Dragonair",
    "pixelmon.dragonair.description": "Dragonair stores an enormous amount of energy inside its body. It is said to alter weather conditions in its vicinity by discharging energy from its crystals on its neck and tail.",
    "pixelmon.dragonite": "Dragonite",
    "pixelmon.dragonite.description": "Dragonite is capable of circling the globe in just 16 hours. It is a kindhearted Pokémon that leads lost and foundering ships in a storm to the safety of land.",
    "pixelmon.dragonitebajancanadian": "Bajan's Dragonite",
    "pixelmon.drakloak": "Drakloak",
    "pixelmon.drakloak.description": "It's capable of flying faster than 120 mph. It battles alongside Dreepy and dotes on them until they successfully evolve.",
    "pixelmon.drampa": "Drampa",
    "pixelmon.drampa.description": "If a child it has made friends with is bullied, Drampa will find the bully’s house and burn it to the ground.",
    "pixelmon.drapion": "Drapion",
    "pixelmon.drapion.description": "It takes great pride in its strength. Even though it can tear foes apart, it finishes them off with powerful poison.",
    "pixelmon.dratini": "Dratini",
    "pixelmon.dratini.description": "Dratini continually molts and sloughs off its old skin. It does so because the life energy within its body steadily builds to reach uncontrollable levels.",
    "pixelmon.drednaw": "Drednaw",
    "pixelmon.drednaw.description": "With jaws that can shear through steel rods, this highly aggressive Pokémon chomps down on its unfortunate prey.",
    "pixelmon.dreepy": "Dreepy",
    "pixelmon.dreepy.description": "After being reborn as a ghost Pokémon, Dreepy wanders the areas it used to inhabit back when it was alive in prehistoric seas.",
    "pixelmon.drifblim": "Drifblim",
    "pixelmon.drifblim.description": "It carries people and Pokémon when it flies. But since it only drifts, it can end up anywhere.",
    "pixelmon.drifloon": "Drifloon",
    "pixelmon.drifloon.description": "A Pokémon formed by the spirits of people and Pokémon. It loves damp, humid seasons.",
    "pixelmon.drilbur": "Drilbur",
    "pixelmon.drilbur.description": "It makes its way swiftly through the soil by putting both claws together and rotating at high speed.",
    "pixelmon.drizzile": "Drizzile",
    "pixelmon.drizzile.description": "A clever combatant, this Pokémon battles using water balloons created with moisture secreted from its palms.",
    "pixelmon.drowzee": "Drowzee",
    "pixelmon.drowzee.description": "If your nose becomes itchy while you are sleeping, it's a sure sign that one of these Pokémon is standing above your pillow and trying to eat you dream through your nostrils.",
    "pixelmon.druddigon": "Druddigon",
    "pixelmon.druddigon.description": "It races through narrow caves, using its sharp claws to catch prey. The skin on its face is harder than a rock.",
    "pixelmon.dubwool": "Dubwool",
    "pixelmon.dubwool.description": "Weave a carpet from its springy wool, and you end up with something closer to a trampoline. You'll start to bounce the moment you set foot on it.",
    "pixelmon.ducklett": "Ducklett",
    "pixelmon.ducklett.description": "When attacked, it uses its feathers to splash water, escaping under cover of the spray.",
    "pixelmon.dugtrio": "Dugtrio",
    "pixelmon.dugtrio.description": "Dugtrio are actually triplets that emerged from one body. As a result, each triplet thinks exactly like the other two triplets. They work cooperatively to burrow endlessly.",
    "pixelmon.dunsparce": "Dunsparce",
    "pixelmon.dunsparce.description": "Dunsparce has a drill for its tail. It uses this tail to burrow into the ground backward. This Pokémon is known to make its nest in complex shapes deep under the ground.",
    "pixelmon.duosion": "Duosion",
    "pixelmon.duosion.description": "Since they have two divided brains, at times they suddenly try to take two different actions at once.",
    "pixelmon.duraludon": "Duraludon",
    "pixelmon.duraludon.description": "Its body resembles polished metal, and it's both lightweight and strong. The only drawback is that it rusts easily.",
    "pixelmon.durant": "Durant",
    "pixelmon.durant.description": "Individuals each play different roles in driving Heatmor, their natural predator, away from their colony.",
    "pixelmon.dusclops": "Dusclops",
    "pixelmon.dusclops.description": "Dusclops’s body is completely hollow—there is nothing at all inside. It is said that its body is like a black hole. This Pokémon will absorb anything into its body, but nothing will ever come back out.",
    "pixelmon.dusknoir": "Dusknoir",
    "pixelmon.dusknoir.description": "It is said to take lost spirits into its pliant body and guide them home.",
    "pixelmon.duskull": "Duskull",
    "pixelmon.duskull.description": "Duskull can pass through any wall no matter how thick it may be. Once this Pokémon chooses a target, it will doggedly pursue the intended victim until the break of dawn.",
    "pixelmon.dustox": "Dustox",
    "pixelmon.dustox.description": "Dustox is instinctively drawn to light. Swarms of this Pokémon are attracted by the bright lights of cities, where they wreak havoc by stripping the leaves off roadside trees for food.",
    "pixelmon.dwebble": "Dwebble",
    "pixelmon.dwebble.description": "It makes a hole in a suitable rock. If that rock breaks, the Pokémon remains agitated until it locates a replacement.",
    "pixelmon.eelektrik": "Eelektrik",
    "pixelmon.eelektrik.description": "It wraps itself around its prey and paralyzes it with electricity from the round spots on its sides. Then it chomps.",
    "pixelmon.eelektross": "Eelektross",
    "pixelmon.eelektross.description": "With their sucker mouths, they suck in prey. Then they use their fangs to shock the prey with electricity.",
    "pixelmon.eevee": "Eevee",
    "pixelmon.eevee.description": "Eevee has an unstable genetic makeup that suddenly mutates due to the environment in which it lives. Radiation from various stones causes this Pokémon to evolve.",
    "pixelmon.ghostwolfeevee": "Ghostwolf's Eevee",
    "pixelmon.eiscue": "Eiscue",
    "pixelmon.eiscue.description": "It drifted in on the flow of ocean waters from a frigid place. It keeps its head iced constantly to make sure it stays nice and cold.",
    "pixelmon.ekans": "Ekans",
    "pixelmon.ekans.description": "Ekans curls itself up in a spiral while it rests. Assuming this position allows it to quickly respond to a threat from any direction with a glare from its upraised head.",
    "pixelmon.eldegoss": "Eldegoss",
    "pixelmon.eldegoss.description": "The seeds attached to its cotton fluff are full of nutrients. It spreads them on the wind so that plants and other Pokémon can benefit from them.",
    "pixelmon.electabuzz": "Electabuzz",
    "pixelmon.electabuzz.description": "When a storm arrives, gangs of this Pokémon compete with each other to scale heights that are likely to be stricken by lightning bolts. Some towns use Electabuzz in place of lightning rods.",
    "pixelmon.electivire": "Electivire",
    "pixelmon.electivire.description": "As its electric charge amplifies, blue sparks begin to crackle between its horns.",
    "pixelmon.electrike": "Electrike",
    "pixelmon.electrike.description": "Electrike stores electricity in its long body hair. This Pokémon stimulates its leg muscles with electric charges. These jolts of power give its legs explosive acceleration performance.",
    "pixelmon.electrode": "Electrode",
    "pixelmon.electrode.description": "Electrode eats electricity in the atmosphere. On days when lightning strikes, you can see this Pokémon exploding all over the place from eating too much electricity.",
    "pixelmon.elekid": "Elekid",
    "pixelmon.elekid.description": "Elekid stores electricity in its body. If it touches metal and accidentally discharges all its built-up electricity, this Pokémon begins swinging its arms in circles to recharge itself.",
    "pixelmon.elgyem": "Elgyem",
    "pixelmon.elgyem.description": "It uses its strong psychic power to squeeze its opponent's brain, causing unendurable headaches.",
    "pixelmon.emboar": "Emboar",
    "pixelmon.emboar.description": "It can throw a fire punch by setting its fists on fire with its fiery chin. It cares deeply about its friends.",
    "pixelmon.emolga": "Emolga",
    "pixelmon.emolga.description": "They live on treetops and glide using the inside of a cape-like membrane while discharging electricity.",
    "pixelmon.empoleon": "Empoleon",
    "pixelmon.empoleon.description": "It swims as fast as a jet boat. The edges of its wings are sharp and can slice apart drifting ice.",
    "pixelmon.enamorus": "Enamorus",
    "pixelmon.enamorus.description": "When it flies to this land from across the sea, the bitter winter comes to an end. According to legend, this Pokémon's love gives rise to the budding of fresh life across Hisui.",
    "pixelmon.entei": "Entei",
    "pixelmon.entei.description": "Entei embodies the passion of magma. This Pokémon is thought to have been born in the eruption of a volcano. It sends up massive bursts of fire that utterly consume all that they touch.",
    "pixelmon.escavalier": "Escavalier",
    "pixelmon.escavalier.description": "Wearing the shell covering they stole from Shelmet, they defend themselves and attack with two lances.",
    "pixelmon.espeon": "Espeon",
    "pixelmon.espeon.description": "Espeon is extremely loyal to any Trainer it considers to be worthy. It is said that this Pokémon developed its precognitive powers to protect its Trainer from harm.",
    "pixelmon.espurr": "Espurr",
    "pixelmon.espurr.description": "The organ that emits its intense psychic power is sheltered by its ears to keep power from leaking out.",
    "pixelmon.eternatus": "Eternatus",
    "pixelmon.eternatus.description": "The core on its chest absorbs energy emanating from the lands of the Galar region. This energy is what allows Eternatus to stay active.",
    "pixelmon.excadrill": "Excadrill",
    "pixelmon.excadrill.description": "It can help in tunnel construction. Its drill has evolved into steel strong enough to bore through iron plates.",
    "pixelmon.exeggcute": "Exeggcute",
    "pixelmon.exeggcute.description": "This Pokémon consists of six eggs that form a closely knit cluster. The six eggs attract each other and spin around. When cracks increasingly appear on the eggs, Exeggcute is close to evolution.",
    "pixelmon.exeggutor": "Exeggutor",
    "pixelmon.exeggutor.description": "Exeggutor originally came from the tropics. Its heads steadily grow larger from exposure to strong sunlight. It is said that when the heads fall off, they group together to form Exeggcute.",
    "pixelmon.exploud": "Exploud",
    "pixelmon.exploud.description": "Exploud triggers earthquakes with the tremors it creates by bellowing. If this Pokémon violently inhales from the ports on its body, it’s a sign that it is preparing to let loose a huge bellow.",
    "pixelmon.falinks": "Falinks",
    "pixelmon.falinks.description": "Five of them are troopers, and one is the brass. The brass's orders are absolute.",
    "pixelmon.farfetchd": "Farfetch'd",
    "pixelmon.farfetchd.description": "Farfetch'd is always seen with a stalk from a plant of some sort. Apparently, there are good stalks and bad stalks. This Pokémon has been known to fight with others over stalks.",
    "pixelmon.fearow": "Fearow",
    "pixelmon.fearow.description": "Fearow is recognized by its long neck and elongated beak. They are conveniently shaped for catching prey in soil or water. It deftly moves its long and skinny beak to pluck prey.",
    "pixelmon.feebas": "Feebas",
    "pixelmon.feebas.description": "Feebas’s fins are ragged and tattered from the start of its life. Because of its shoddy appearance, this Pokémon is largely ignored. It is capable of living in both the sea and in rivers.",
    "pixelmon.fennekin": "Fennekin",
    "pixelmon.fennekin.description": "Eating a twig fills it with energy, and its roomy ears give vent to air hotter than 390 degrees Fahrenheit.",
    "pixelmon.feraligatr": "Feraligatr",
    "pixelmon.feraligatr.description": "Feraligatr intimidates its foes by opening its huge mouth. In battle, it will kick the ground hard with its thick and powerful hind legs to charge at the foe at an incredible speed.",
    "pixelmon.ferroseed": "Ferroseed",
    "pixelmon.ferroseed.description": "When threatened, it attacks by shooting a barrage of spikes, which gives it a chance to escape by rolling away.",
    "pixelmon.ferrothorn": "Ferrothorn",
    "pixelmon.ferrothorn.description": "By swinging around its three spiky feelers and shooting spikes, it can obliterate an opponent.",
    "pixelmon.finneon": "Finneon",
    "pixelmon.finneon.description": "The line running down its side can store sunlight. It shines vividly at night.",
    "pixelmon.flaaffy": "Flaaffy",
    "pixelmon.flaaffy.description": "Flaaffy's wool quality changes so that it can generate a high amount of static electricity with a small amount of wool. The bare and slick parts of its hide are shielded against electricity.",
    "pixelmon.flabebe": "Flabébé",
    "pixelmon.flabebe.description": "It draws out and controls the hidden power of flowers. The flower Flabébé holds is most likely part of its body.",
    "pixelmon.flapple": "Flapple",
    "pixelmon.flapple.description": "It ate a sour apple, and that induced its evolution. In its cheeks, it stores an acid capable of causing chemical burns.",
    "pixelmon.flareon": "Flareon",
    "pixelmon.flareon.description": "Flareon's fluffy fur has a functional purpose-it releases heat into the air so that its body does not get excessively hot. This Pokémon's body temperature can rise to a maximum of 1,650 degrees Fahrenheit.",
    "pixelmon.fletchinder": "Fletchinder",
    "pixelmon.fletchinder.description": "From its beak, it expels embers that set the tall grass on fire. Then it pounces on the bewildered prey that pop out of the grass.",
    "pixelmon.fletchling": "Fletchling",
    "pixelmon.fletchling.description": "These friendly Pokémon send signals to one another with beautiful chirps and tail-feather movements.",
    "pixelmon.floatzel": "Floatzel",
    "pixelmon.floatzel.description": "It floats using its well-developed flotation sac. It assists in the rescues of drowning people.",
    "pixelmon.floette": "Floette",
    "pixelmon.floette.description": "It flutters around fields of flowers and cares for flowers that are starting to wilt. It draws out the power of flowers to battle.",
    "pixelmon.florges": "Florges",
    "pixelmon.florges.description": "It claims exquisite flower gardens as its territory, and it obtains power from basking in the energy emitted by flowering plants.",
    "pixelmon.flygon": "Flygon",
    "pixelmon.flygon.description": "Flygon is nicknamed “the elemental spirit of the desert.” Because its flapping wings whip up a cloud of sand, this Pokémon is always enveloped in a sandstorm while flying.",
    "pixelmon.fomantis": "Fomantis",
    "pixelmon.fomantis.description": "When the sun rises, Fomantis spreads its four leaves and bathes in the sunlight. The tip of its head has a pleasant aroma.",
    "pixelmon.foongus": "Foongus",
    "pixelmon.foongus.description": "It lures people in with its Poké Ball pattern, then releases poison spores. Why it resembles a Poké Ball is unknown.",
    "pixelmon.forretress": "Forretress",
    "pixelmon.forretress.description": "Forretress conceals itself inside its hardened steel shell. The shell is opened when the Pokémon is catching prey, but it does so at such a quick pace that the shell's inside cannot be seen.",
    "pixelmon.fraxure": "Fraxure",
    "pixelmon.fraxure.description": "Their tusks can shatter rocks. Territory battles between Fraxure can be intensely violent.",
    "pixelmon.frillish": "Frillish",
    "pixelmon.frillish.description": "They paralyze prey with poison, then drag them down to their lairs, five miles below the surface.",
    "pixelmon.froakie": "Froakie",
    "pixelmon.froakie.description": "It secretes flexible bubbles from its chest and back. The bubbles reduce the damage it would otherwise take when attacked.",
    "pixelmon.frogadier": "Frogadier",
    "pixelmon.frogadier.description": "It can throw bubble-covered pebbles with precise control, hitting empty cans up to a hundred feet away.",
    "pixelmon.froslass": "Froslass",
    "pixelmon.froslass.description": "It freezes foes with an icy breath nearly -60 degrees Fahrenheit. What seems to be its body is actually hollow.",
    "pixelmon.frosmoth": "Frosmoth",
    "pixelmon.frosmoth.description": "Icy scales fall from its wings like snow as it flies over fields and mountains. The temperature of its wings is less than -290 degrees Fahrenheit.",
    "pixelmon.furfrou": "Furfrou",
    "pixelmon.furfrou.description": "Trimming its fluffy fur not only makes it more elegant but also increases the swiftness of its movements.",
    "pixelmon.furret": "Furret",
    "pixelmon.furret.description": "Furret has a very slim build. When under attack, it can slickly squirm through narrow spaces and get away. In spite of its short limbs, this Pokémon is very nimble and fleet.",
    "pixelmon.gabite": "Gabite",
    "pixelmon.gabite.description": "It loves sparkly things. It seeks treasures in caves and hoards the loot in its nest.",
    "pixelmon.gallade": "Gallade",
    "pixelmon.gallade.description": "Because it can sense what its foe is thinking, its attacks burst out first, fast, and fierce.",
    "pixelmon.galvantula": "Galvantula",
    "pixelmon.galvantula.description": "They employ an electrically charged web to trap their prey. While it is immobilized by shock, they leisurely consume it.",
    "pixelmon.garbodor": "Garbodor",
    "pixelmon.garbodor.description": "It clenches opponents with its left arm and finishes them off with foul-smelling poison gas belched from its mouth.",
    "pixelmon.garchomp": "Garchomp",
    "pixelmon.garchomp.description": "When it folds up its body and extends its wings, it looks like a jet plane. It flies at sonic speed.",
    "pixelmon.gardevoir": "Gardevoir",
    "pixelmon.gardevoir.description": "Gardevoir has the ability to read the future. If it senses impending danger to its Trainer, this Pokémon is said to unleash its psychokinetic energy at full power.",
    "pixelmon.gastly": "Gastly",
    "pixelmon.gastly.description": "Gastly is largely composed of gaseous matter. When exposed to a strong wind, the gaseous body quickly dwindles away. Groups of this Pokémon cluster under the eaves of houses to escape the ravages of wind.",
    "pixelmon.gastrodon": "Gastrodon",
    "pixelmon.gastrodon.description": "When its natural enemy attacks, it oozes purple fluid and escapes.",
    "pixelmon.genesect": "Genesect",
    "pixelmon.genesect.description": "This ancient bug Pokémon was altered by Team Plasma. They upgraded the cannon on its back.",
    "pixelmon.gengar": "Gengar",
    "pixelmon.gengar.description": "Sometimes, on a dark night, your shadow thrown by a streetlight will suddenly and startlingly overtake you. It is actually a Gengar running past you, pretending to be your shadow.",
    "pixelmon.geodude": "Geodude",
    "pixelmon.geodude.description": "The longer a Geodude lives, the more its edges are chipped and worn away, making it more rounded in appearance. However, this Pokémon's heart will remain hard, craggy, and rough always.",
    "pixelmon.gible": "Gible",
    "pixelmon.gible.description": "It nests in horizontal holes warmed by geothermal heat. Foes who get too close can expect to be pounced on and bitten.",
    "pixelmon.gigalith": "Gigalith",
    "pixelmon.gigalith.description": "The solar rays it absorbs are processed in its energy core and fired as a ball of light.",
    "pixelmon.girafarig": "Girafarig",
    "pixelmon.girafarig.description": "Girafarig's rear head also has a brain, but it is small. The rear head attacks in response to smells and sounds. Approaching this Pokémon from behind can cause the rear head to suddenly lash out and bite.",
    "pixelmon.giratina": "Giratina",
    "pixelmon.giratina.description": "This Pokémon is said to live in a world on the reverse side of ours, where common knowledge is distorted and strange.",
    "pixelmon.glaceon": "Glaceon",
    "pixelmon.glaceon.description": "By controlling its body heat, it can freeze the atmosphere around it to make a diamond-dust flurry.",
    "pixelmon.glalie": "Glalie",
    "pixelmon.glalie.description": "Glalie has a body made of rock, which it hardens with an armor of ice. This Pokémon has the ability to freeze moisture in the atmosphere into any shape it desires.",
    "pixelmon.glameow": "Glameow",
    "pixelmon.glameow.description": "It claws if displeased and purrs when affectionate. Its fickleness is very popular among some.",
    "pixelmon.glastrier": "Glastrier",
    "pixelmon.glastrier.description": "Glastrier emits intense cold from its hooves. It's also a belligerent Pokémon—anything it wants, it takes by force.",
    "pixelmon.gligar": "Gligar",
    "pixelmon.gligar.description": "Gligar glides through the air without a sound as if it were sliding. This Pokémon hangs on to the face of its foe using its clawed hind legs and the large pincers on its forelegs, then injects the prey with its poison barb.",
    "pixelmon.gliscor": "Gliscor",
    "pixelmon.gliscor.description": "It observes prey while hanging inverted from branches. When the chance presents itself, it swoops!",
    "pixelmon.gloom": "Gloom",
    "pixelmon.gloom.description": "Gloom releases a foul fragrance from the pistil of its flower. When faced with danger, the stench worsens. If this Pokémon is feeling calm and secure, it does not release its usual stinky aroma.",
    "pixelmon.gogoat": "Gogoat",
    "pixelmon.gogoat.description": "It can tell how its trainer is feeling by subtle shifts in the grip on its horns. This empathetic sense lets them run as if one being.",
    "pixelmon.golbat": "Golbat",
    "pixelmon.golbat.description": "Golbat loves to drink the blood of living things. It is particularly active in the pitch black of night. This Pokémon flits around in the night skies, seeking fresh blood.",
    "pixelmon.goldeen": "Goldeen",
    "pixelmon.goldeen.description": "Goldeen is a very beautiful Pokémon with fins that billow elegantly in water. However, don't let your guard down around this Pokémon—it could ram you powerfully with its horn.",
    "pixelmon.golduck": "Golduck",
    "pixelmon.golduck.description": "The webbed flippers on its forelegs and hind legs and the streamlined body of Golduck give it frightening speed. The Pokémon is definitely much faster than even the most athletic swimmer.",
    "pixelmon.golem": "Golem",
    "pixelmon.golem.description": "Golem live up on mountains. If there is a large earthquake, these Pokémon will come rolling down off the mountains en masse to the foothills below.",
    "pixelmon.golett": "Golett",
    "pixelmon.golett.description": "The energy that burns inside it enables it to move, but no one has yet been able to identify this energy.",
    "pixelmon.golisopod": "Golisopod",
    "pixelmon.golisopod.description": "The shell covering its body is as hard as diamond. This Pokémon will do anything it takes to win.",
    "pixelmon.golurk": "Golurk",
    "pixelmon.golurk.description": "It is said that Golurk were ordered to protect people and Pokémon by the ancient people who made them.",
    "pixelmon.goodra": "Goodra",
    "pixelmon.goodra.description": "This very friendly Dragon Pokémon will hug its beloved Trainer, leaving that Trainer covered in sticky slime.",
    "pixelmon.goomy": "Goomy",
    "pixelmon.goomy.description": "The weakest Dragon-type Pokémon, it lives in damp, shady places, so its body doesn't dry out.",
    "pixelmon.gorebyss": "Gorebyss",
    "pixelmon.gorebyss.description": "Gorebyss lives in the southern seas at extreme depths. Its body is built to withstand the enormous pressure of water at incredible depths. Because of this, this Pokémon’s body is unharmed by ordinary attacks.",
    "pixelmon.gossifleur": "Gossifleur",
    "pixelmon.gossifleur.description": "It anchors itself in the ground with its single leg, then basks in the sun. After absorbing enough sunlight, its petals spread as it blooms brilliantly.",
    "pixelmon.gothita": "Gothita",
    "pixelmon.gothita.description": "Their ribbonlike feelers increase their psychic power. They are always staring at something.",
    "pixelmon.gothitelle": "Gothitelle",
    "pixelmon.gothitelle.description": "Starry skies thousands of light-years away are visible in the space distorted by their intense psychic power.",
    "pixelmon.gothorita": "Gothorita",
    "pixelmon.gothorita.description": "Starlight is the source of their power. At night, they mark star positions by using psychic power to float stones.",
    "pixelmon.gourgeist": "Gourgeist",
    "pixelmon.gourgeist.description": "Singing in eerie voices, they wander town streets on the night of the new moon. Anyone who hears their song is cursed.",
    "pixelmon.granbull": "Granbull",
    "pixelmon.granbull.description": "Granbull has a particularly well-developed lower jaw. The enormous fangs are heavy, causing the Pokémon to tip its head back for balance. Unless it is startled, it will not try to bite indiscriminately.",
    "pixelmon.grapploct": "Grapploct",
    "pixelmon.grapploct.description": "A body made up of nothing but muscle makes the grappling moves this Pokémon performs with its tentacles tremendously powerful.",
    "pixelmon.graveler": "Graveler",
    "pixelmon.graveler.description": "Graveler grows by feeding on rocks. Apparently, it prefers to eat rocks that are covered in moss. This Pokémon eats its way through a ton of rocks on a daily basis.",
    "pixelmon.greedent": "Greedent",
    "pixelmon.greedent.description": "It stashes berries in its tail—so many berries that they fall out constantly. But this Pokémon is a bit slow-witted, so it doesn't notice the loss.",
    "pixelmon.greninja": "Greninja",
    "pixelmon.greninja.description": "It creates throwing stars out of compressed water. When it spins them and throws them at high speed, these stars can split metal in two.",
    "pixelmon.grimer": "Grimer",
    "pixelmon.grimer.description": "Grimer's sludgy and rubbery body can be forced through any opening, however small it may be. This Pokémon enters sewer pipes to drink filthy wastewater.",
    "pixelmon.grimmsnarl": "Grimmsnarl",
    "pixelmon.grimmsnarl.description": "With the hair wrapped around its body helping to enhance its muscles, this Pokémon can overwhelm even Machamp.",
    "pixelmon.grookey": "Grookey",
    "pixelmon.grookey.description": "When it uses its special stick to strike up a beat, the sound waves produced carry revitalizing energy to the plants and flowers in the area.",
    "pixelmon.grotle": "Grotle",
    "pixelmon.grotle.description": "It lives along water in forests. In the daytime, it leaves the forest to sunbathe its treed shell.",
    "pixelmon.groudon": "Groudon",
    "pixelmon.groudon.description": "Groudon is said to be the personification of the land itself. Legends tell of its many clashes against Kyogre, as each sought to gain the power of nature.",
    "pixelmon.grovyle": "Grovyle",
    "pixelmon.grovyle.description": "The leaves growing out of Grovyle’s body are convenient for camouflaging it from enemies in the forest. This Pokémon is a master at climbing trees in jungles.",
    "pixelmon.growlithe": "Growlithe",
    "pixelmon.growlithe.description": "Growlithe has a superb sense of smell. Once it smells anything, this Pokémon won't forget the scent, no matter what. It uses its advanced olfactory sense to determine the emotions of other living things.",
    "pixelmon.grubbin": "Grubbin",
    "pixelmon.grubbin.description": "If you find its nest, you shouldn’t stick your hand inside. You’ll get bitten by an irritated Grubbin.",
    "pixelmon.grumpig": "Grumpig",
    "pixelmon.grumpig.description": "Grumpig uses the black pearls on its body to amplify its psychic power waves for gaining total control over its foe. When this Pokémon uses its special power, its snorting breath grows labored.",
    "pixelmon.gulpin": "Gulpin",
    "pixelmon.gulpin.description": "Virtually all of Gulpin’s body is its stomach. As a result, it can swallow something its own size. This Pokémon’s stomach contains a special fluid that digests anything.",
    "pixelmon.gumshoos": "Gumshoos",
    "pixelmon.gumshoos.description": "Although it wasn’t originally found in Alola, this Pokémon was brought over a long time ago when there was a huge Rattata outbreak.",
    "pixelmon.gurdurr": "Gurdurr",
    "pixelmon.gurdurr.description": "With strengthened bodies, they skillfully wield steel beams to take down buildings.",
    "pixelmon.guzzlord": "Guzzlord",
    "pixelmon.guzzlord.description": "An unknown life-form called a UB. It may be constantly hungry—it is certainly always devouring something.",
    "pixelmon.gyarados": "Gyarados",
    "pixelmon.gyarados.description": "When Magikarp evolves into Gyarados, its brain cells undergo a structural transformation. It is said that this transformation is to blame for this Pokémon's wildly violent nature.",
    "pixelmon.hakamo-o": "Hakamo-o",
    "pixelmon.hakamo-o.description": "It makes noise by clanging its scales together. When the rhythm has reached its peak, Hakamo-o attacks.",
    "pixelmon.happiny": "Happiny",
    "pixelmon.happiny.description": "It carries a round, egg-shaped rock in its belly pouch and gives the rock to its friends.",
    "pixelmon.hariyama": "Hariyama",
    "pixelmon.hariyama.description": "Hariyama practices its straight-arm slaps in any number of locations. One hit of this Pokémon’s powerful, openhanded, straight-arm punches could snap a telephone pole in two.",
    "pixelmon.hatenna": "Hatenna",
    "pixelmon.hatenna.description": "Via the protrusion on its head, it senses other creatures' emotions. If you don't have a calm disposition, it will never warm up to you.",
    "pixelmon.hatterene": "Hatterene",
    "pixelmon.hatterene.description": "It emits psychic power strong enough to cause headaches as a deterrent to the approach of others.",
    "pixelmon.hattrem": "Hattrem",
    "pixelmon.hattrem.description": "No matter who you are, if you bring strong emotions near this Pokémon, it will silence you violently.",
    "pixelmon.haunter": "Haunter",
    "pixelmon.haunter.description": "Haunter is a dangerous Pokémon. If one beckons you while floating in darkness, you must never approach it. This Pokémon will try to lick you with its tongue and steal your life away.",
    "pixelmon.hawlucha": "Hawlucha",
    "pixelmon.hawlucha.description": "Although its body is small, its proficient fighting skills enable it to keep up with big bruisers like Machamp and Hariyama.",
    "pixelmon.haxorus": "Haxorus",
    "pixelmon.haxorus.description": "They are kind but can be relentless when defending territory. They challenge foes with tusks that can cut steel.",
    "pixelmon.heatmor": "Heatmor",
    "pixelmon.heatmor.description": "Using their very hot, flame-covered tongues, they burn through Durant's steel bodies and consume their insides.",
    "pixelmon.heatran": "Heatran",
    "pixelmon.heatran.description": "It dwells in volcanic caves. It digs in with its cross-shaped feet to crawl on ceilings and walls.",
    "pixelmon.heliolisk": "Heliolisk",
    "pixelmon.heliolisk.description": "They flare their frills and generate energy. A single Heliolisk can generate sufficient electricity to power a skyscraper.",
    "pixelmon.helioptile": "Helioptile",
    "pixelmon.helioptile.description": "They make their home in deserts. They can generate their energy from basking in the sun, so eating food is not a requirement.",
    "pixelmon.heracross": "Heracross",
    "pixelmon.heracross.description": "Heracross charges in a straight line at its foe, slips beneath the foe's grasp, and then scoops up and hurls the opponent with its mighty horn. This Pokémon even has enough power to topple a massive tree.",
    "pixelmon.herdier": "Herdier",
    "pixelmon.herdier.description": "This very loyal Pokémon helps Trainers, and it also takes care of other Pokémon.",
    "pixelmon.hippopotas": "Hippopotas",
    "pixelmon.hippopotas.description": "It lives in arid places. Instead of perspiration, it expels grainy sand from its body.",
    "pixelmon.hippowdon": "Hippowdon",
    "pixelmon.hippowdon.description": "It brandishes its gaping mouth in a display of fearsome strength. It raises vast quantities of sand while attacking.",
    "pixelmon.hitmonchan": "Hitmonchan",
    "pixelmon.hitmonchan.description": "Hitmonchan is said to possess the spirit of a boxer who had been working toward a world championship. This Pokémon has an indomitable spirit and will never give up in the face of adversity.",
    "pixelmon.hitmonlee": "Hitmonlee",
    "pixelmon.hitmonlee.description": "Hitmonlee's legs freely contract and stretch. Using these springlike legs, it bowls over foes with devastating kicks. After battle, it rubs down its legs and loosens the muscles to overcome fatigue.",
    "pixelmon.hitmontop": "Hitmontop",
    "pixelmon.hitmontop.description": "Hitmontop spins on its head at high speed, all the while delivering kicks. This technique is a remarkable mix of both offense and defense at the same time. The Pokémon travels faster spinning than it does walking.",
    "pixelmon.ho-oh": "Ho-Oh",
    "pixelmon.ho-oh.description": "Ho-Oh's feathers glow in seven colors depending on the angle at which they are struck by light. These feathers are said to bring happiness to the bearers. This Pokémon is said to live at the foot of a rainbow.",
    "pixelmon.honchkrow": "Honchkrow",
    "pixelmon.honchkrow.description": "If one utters a deep cry, many Murkrow gather quickly. For this, it is called \"Summoner of Night.\"",
    "pixelmon.honedge": "Honedge",
    "pixelmon.honedge.description": "Apparently this Pokémon is born when a departed spirit inhabits a sword. It attaches itself to people and drinks their life force.",
    "pixelmon.hoopa": "Hoopa",
    "pixelmon.hoopa.description": "In its true form, it possess a huge amount of power. Legends of its avarice tell how it once carried off an entire castle to gain the treasure hidden within.",
    "pixelmon.hoothoot": "Hoothoot",
    "pixelmon.hoothoot.description": "Hoothoot has an internal organ that senses and tracks the earth's rotation. Using this special organ, this Pokémon begins hooting at precisely the same time every day.",
    "pixelmon.hoppip": "Hoppip",
    "pixelmon.hoppip.description": "This Pokémon drifts and floats with the wind. If it senses the approach of strong winds, Hoppip links its leaves with other Hoppip to prepare against being blown away.",
    "pixelmon.horsea": "Horsea",
    "pixelmon.horsea.description": "Horsea eats small insects and moss off of rocks. If the ocean current turns fast, this Pokémon anchors itself by wrapping its tail around rocks or coral to prevent being washed away.",
    "pixelmon.houndoom": "Houndoom",
    "pixelmon.houndoom.description": "In a Houndoom pack, the one with its horns raked sharply toward the back serves a leadership role. These Pokémon choose their leader by fighting among themselves.",
    "pixelmon.houndour": "Houndour",
    "pixelmon.houndour.description": "Houndour hunt as a coordinated pack. They communicate with each other using a variety of cries to corner their prey. This Pokémon's remarkable teamwork is unparalleled.",
    "pixelmon.huntail": "Huntail",
    "pixelmon.huntail.description": "Huntail’s presence went unnoticed by people for a long time because it lives at extreme depths in the sea. This Pokémon’s eyes can see clearly even in the murky dark depths of the ocean.",
    "pixelmon.hydreigon": "Hydreigon",
    "pixelmon.hydreigon.description": "The heads on their arms do not have brains. They use all three heads to consume and destroy everything.",
    "pixelmon.hypno": "Hypno",
    "pixelmon.hypno.description": "Hypno holds a pendulum in its hand. The arcing movement and glitter of the pendulum lull the foe into a deep state of hypnosis. While this Pokémon searches for prey, it polishes the pendulum.",
    "pixelmon.igglybuff": "Igglybuff",
    "pixelmon.igglybuff.description": "Igglybuff's vocal cords are not sufficiently developed. It would hurt its throat if it were to sing too much. This Pokémon gargles with freshwater from a clean stream.",
    "pixelmon.illumise": "Illumise",
    "pixelmon.illumise.description": "Illumise attracts a swarm of Volbeat using a sweet fragrance. Once the Volbeat have gathered, this Pokémon leads the lit-up swarm in drawing geometric designs on the canvas of the night sky.",
    "pixelmon.impidimp": "Impidimp",
    "pixelmon.impidimp.description": "Through its nose, it sucks in the emanations produced by people and Pokémon when they feel annoyed. It thrives off this negative energy.",
    "pixelmon.incineroar": "Incineroar",
    "pixelmon.incineroar.description": "Although it’s rough mannered and egotistical, it finds beating down unworthy opponents boring. It gets motivated for stronger opponents.",
    "pixelmon.indeedee": "Indeedee",
    "pixelmon.indeedee.description": "It uses the horns on its head to sense the emotions of others. Males will act as valets for those they serve, looking after their every need.",
    "pixelmon.infernape": "Infernape",
    "pixelmon.infernape.description": "Its crown of fire is indicative of its fiery nature. It is beaten by none in terms of quickness.",
    "pixelmon.inkay": "Inkay",
    "pixelmon.inkay.description": "Opponents who stare at the flashing of the light-emitting spots on its body become dazed and lose their will to fight.",
    "pixelmon.inteleon": "Inteleon",
    "pixelmon.inteleon.description": "It has many hidden capabilities, such as fingertips that can shoot water and a membrane on its back that it can use to glide through the air.",
    "pixelmon.ivysaur": "Ivysaur",
    "pixelmon.ivysaur.description": "There is a bud on this Pokémon's back. To support its weight, Ivysaur's legs and trunk grow thick and strong. If it starts spending more time lying in the sunlight, it’s a sign that the bud will bloom into a large flower soon.",
    "pixelmon.jangmo-o": "Jangmo-o",
    "pixelmon.jangmo-o.description": "It smacks the scales on its head against rocks or against the ground to frighten its opponents. It can also contact its friends with these noises.",
    "pixelmon.jellicent": "Jellicent",
    "pixelmon.jellicent.description": "Its body is mostly seawater. It's said there's a castle of ships Jellicent have sunk on the seafloor.",
    "pixelmon.jigglypuff": "Jigglypuff",
    "pixelmon.jigglypuff.description": "Jigglypuff's vocal cords can freely adjust the wavelength of its voice. This Pokémon uses this ability to sing at precisely the right wavelength to make its foes most drowsy.",
    "pixelmon.jirachi": "Jirachi",
    "pixelmon.jirachi.description": "A legend states that Jirachi will make true any wish that is written on notes attached to its head when it awakens. If this Pokémon senses danger, it will fight without awakening.",
    "pixelmon.jolteon": "Jolteon",
    "pixelmon.jolteon.description": "Jolteon's cells generate a low level of electricity. This power is amplified by the static electricity of its fur, enabling the Pokémon to drop thunderbolts. The bristling fur is made of electrically charged needles.",
    "pixelmon.joltik": "Joltik",
    "pixelmon.joltik.description": "Since it can't generate its own electricity, it sticks onto large-bodied Pokémon and absorbs static electricity.",
    "pixelmon.jumpluff": "Jumpluff",
    "pixelmon.jumpluff.description": "Jumpluff rides warm southern winds to cross the sea and fly to foreign lands. The Pokémon descends to the ground when it encounters cold air while it is floating.",
    "pixelmon.jynx": "Jynx",
    "pixelmon.jynx.description": "Jynx walks rhythmically, swaying and shaking its hips as if it were dancing. Its motions are so bouncingly alluring, people seeing it are compelled to shake their hips without giving any thought to what they are doing.",
    "pixelmon.kabuto": "Kabuto",
    "pixelmon.kabuto.description": "Kabuto is a Pokémon that has been regenerated from a fossil. However, in extremely rare cases, living examples have been discovered. The Pokémon has not changed at all for 300 million years.",
    "pixelmon.kabutops": "Kabutops",
    "pixelmon.kabutops.description": "Kabutops swam underwater to hunt for its prey in ancient times. The Pokémon was apparently evolving from being a water-dweller to living on land as evident from the beginnings of change in its gills and legs.",
    "pixelmon.kadabra": "Kadabra",
    "pixelmon.kadabra.description": "Kadabra emits a peculiar alpha wave if it develops a headache. Only those people with a particularly strong psyche can hope to become a trainer of this Pokémon.",
    "pixelmon.kakuna": "Kakuna",
    "pixelmon.kakuna.description": "Kakuna remains virtually immobile as it clings to a tree. However, on the inside, it is extremely busy as it prepares for its coming evolution. This is evident from how hot the shell becomes to the touch.",
    "pixelmon.kangaskhan": "Kangaskhan",
    "pixelmon.kangaskhan.description": "If you come across a young Kangaskhan playing by itself, you must never disturb it or attempt to catch it. The baby Pokémon's parent is sure to be in the area, and it will become violently enraged at you.",
    "pixelmon.karrablast": "Karrablast",
    "pixelmon.karrablast.description": "These mysterious Pokémon evolve when they receive electrical stimulation while they are in the same place as Shelmet.",
    "pixelmon.kartana": "Kartana",
    "pixelmon.kartana.description": "This Ultra Beast’s body, which is as thin as paper, is like a sharpened sword.",
    "pixelmon.kecleon": "Kecleon",
    "pixelmon.kecleon.description": "Kecleon is capable of changing its body colors at will to blend in with its surroundings. There is one exception—this Pokémon can’t change the zigzag pattern on its belly.",
    "pixelmon.keldeo": "Keldeo",
    "pixelmon.keldeo.description": "It crosses the world, running over the surfaces of oceans and rivers. It appears at scenic waterfronts.",
    "pixelmon.kingdra": "Kingdra",
    "pixelmon.kingdra.description": "Kingdra lives at extreme ocean depths that are otherwise uninhabited. It has long been believed that the yawning of this Pokémon creates spiraling ocean currents.",
    "pixelmon.kingler": "Kingler",
    "pixelmon.kingler.description": "Kingler has an enormous, oversized claw. It waves this huge claw in the air to communicate with others. However, because the claw is so heavy, the Pokémon quickly tires.",
    "pixelmon.kirlia": "Kirlia",
    "pixelmon.kirlia.description": "It is said that a Kirlia that is exposed to the positive emotions of its Trainer grows beautiful. This Pokémon controls psychokinetic powers with its highly developed brain.",
    "pixelmon.klang": "Klang",
    "pixelmon.klang.description": "By changing the direction in which it rotates, it communicates its feelings to others. When angry, it rotates faster.",
    "pixelmon.kleavor": "Kleavor",
    "pixelmon.kleavor.description": "A violent creature that fells towering trees with its crude axes and shields itself with hard stone. If one should chance upon this Pokémon in the wilds, one's only recourse is to flee.",
    "pixelmon.klefki": "Klefki",
    "pixelmon.klefki.description": "These key collectors threaten any attackers by fiercely jingling their keys at them.",
    "pixelmon.klink": "Klink",
    "pixelmon.klink.description": "Interlocking two bodies and spinning around generates the energy they need to live.",
    "pixelmon.klinklang": "Klinklang",
    "pixelmon.klinklang.description": "The gear with the red core is rotated at high speed for a rapid energy charge.",
    "pixelmon.koffing": "Koffing",
    "pixelmon.koffing.description": "If Koffing becomes agitated, it raises the toxicity of its internal gases and then jets them out from all over its body. This Pokémon may also overinflate its round body, then explode.",
    "pixelmon.komala": "Komala",
    "pixelmon.komala.description": "It stays asleep from the moment it’s born. When it falls into a deep sleep, it stops moving altogether.",
    "pixelmon.kommo-o": "Kommo-o",
    "pixelmon.kommo-o.description": "When it howls after finishing off its prey, the metallic sounds of its celebrating comrades can be heard from all around.",
    "pixelmon.krabby": "Krabby",
    "pixelmon.krabby.description": "Krabby live on beaches, burrowed inside holes dug into the sand. On sandy beaches with little in the way of food, these Pokémon can be seen squabbling with each other over territory.",
    "pixelmon.kricketot": "Kricketot",
    "pixelmon.kricketot.description": "It chats with others using the sounds of its colliding antennae. These sounds are fall hallmarks.",
    "pixelmon.kricketune": "Kricketune",
    "pixelmon.kricketune.description": "It crosses its knifelike arms in front of its chest when it cries. It can compose melodies ad lib.",
    "pixelmon.krokorok": "Krokorok",
    "pixelmon.krokorok.description": "They live in groups of a few individuals. Protective membranes shield their eyes from sandstorms.",
    "pixelmon.krookodile": "Krookodile",
    "pixelmon.krookodile.description": "Very violent Pokémon, they try to clamp down on anything that moves in front of their eyes.",
    "pixelmon.kubfu": "Kubfu",
    "pixelmon.kubfu.description": "Kubfu trains hard to perfect its moves. The moves it masters will determine which form it takes when it evolves.",
    "pixelmon.kyogre": "Kyogre",
    "pixelmon.kyogre.description": "Through Primal Reversion and with nature’s full power, it will take back its true form. It can summon storms that cause the sea levels to rise.",
    "pixelmon.kyurem": "Kyurem",
    "pixelmon.kyurem.description": "This legendary ice Pokémon waits for a hero to fill in the missing parts of its body with truth or ideals.",
    "pixelmon.lairon": "Lairon",
    "pixelmon.lairon.description": "Lairon tempers its steel body by drinking highly nutritious mineral springwater until it is bloated. This Pokémon makes its nest close to springs of delicious water.",
    "pixelmon.lampent": "Lampent",
    "pixelmon.lampent.description": "The spirits it absorbs fuel its baleful fire. It hangs around hospitals waiting for people to pass on.",
    "pixelmon.landorus": "Landorus",
    "pixelmon.landorus.description": "Lands visited by Landorus grant such bountiful crops that it has been hailed as \"The Guardian of the Fields.\"",
    "pixelmon.lanturn": "Lanturn",
    "pixelmon.lanturn.description": "Lanturn is nicknamed \"the deep-sea star\" for its illuminated antenna. This Pokémon produces light by causing a chemical reaction between bacteria and its bodily fluids inside the antenna.",
    "pixelmon.lapras": "Lapras",
    "pixelmon.lapras.description": "People have driven Lapras almost to the point of extinction. In the evenings, this Pokémon is said to sing plaintively as it seeks what few others of its kind still remain.",
    "pixelmon.larvesta": "Larvesta",
    "pixelmon.larvesta.description": "Said to have been born from the sun, it spews fire from its horns and encases itself in a cocoon of fire when it evolves.",
    "pixelmon.larvitar": "Larvitar",
    "pixelmon.larvitar.description": "Larvitar is born deep under the ground. To come up to the surface, this Pokémon must eat its way through the soil above. Until it does so, Larvitar cannot see its parents.",
    "pixelmon.latias": "Latias",
    "pixelmon.latias.description": "Latias is highly sensitive to the emotions of people. If it senses any hostility, this Pokémon ruffles the feathers all over its body and cries shrilly to intimidate the foe.",
    "pixelmon.latios": "Latios",
    "pixelmon.latios.description": "Latios has the ability to make others see an image of what it has seen or imagines in its head. This Pokémon is intelligent and understands human speech.",
    "pixelmon.leafeon": "Leafeon",
    "pixelmon.leafeon.description": "When you see Leafeon asleep in a patch of sunshine, you'll know it is using photosynthesis to produce clean air.",
    "pixelmon.leavanny": "Leavanny",
    "pixelmon.leavanny.description": "Upon finding a small Pokémon, it weaves clothing for it from leaves by using the sticky silk secreted from its mouth.",
    "pixelmon.ledian": "Ledian",
    "pixelmon.ledian.description": "It is said that in lands with clean air, where the stars fill the sky, there live Ledian in countless numbers. There is a good reason for this—the Pokémon uses the light of the stars as its energy.",
    "pixelmon.ledyba": "Ledyba",
    "pixelmon.ledyba.description": "Ledyba secretes an aromatic fluid from where its legs join its body. This fluid is used for communicating with others. This Pokémon conveys its feelings to others by altering the fluid's scent.",
    "pixelmon.lickilicky": "Lickilicky",
    "pixelmon.lickilicky.description": "It wraps things with its extensible tongue. Getting too close to it will leave you soaked with drool.",
    "pixelmon.lickitung": "Lickitung",
    "pixelmon.lickitung.description": "Whenever Lickitung comes across something new, it will unfailingly give it a lick. It does so because it memorizes things by texture and by taste. It is somewhat put off by sour things.",
    "pixelmon.liepard": "Liepard",
    "pixelmon.liepard.description": "Their beautiful form comes from the muscles they have developed. They run silently in the night.",
    "pixelmon.lileep": "Lileep",
    "pixelmon.lileep.description": "Lileep became extinct approximately a hundred million years ago. This ancient Pokémon attaches itself to a rock on the seafloor and catches approaching prey using tentacles shaped like flower petals.",
    "pixelmon.lilligant": "Lilligant",
    "pixelmon.lilligant.description": "The fragrance of the garland on its head has a relaxing effect. It withers if a trainer does not take good care of it.",
    "pixelmon.lillipup": "Lillipup",
    "pixelmon.lillipup.description": "The long hair around its face provides an amazing radar that lets it sense subtle changes in its surroundings.",
    "pixelmon.linoone": "Linoone",
    "pixelmon.linoone.description": "Linoone always runs full speed and only in straight lines. If facing an obstacle, it makes a right-angle turn to evade it. This Pokémon is very challenged by gently curving roads.",
    "pixelmon.litleo": "Litleo",
    "pixelmon.litleo.description": "The stronger the opponent it faces, the more heat surges from its mane and the more power flows through its body.",
    "pixelmon.litten": "Litten",
    "pixelmon.litten.description": "If you try too hard to get close to it, it won’t open up to you. Even if you do grow close, giving it too much affection is still a no-no.",
    "pixelmon.litwick": "Litwick",
    "pixelmon.litwick.description": "While shining a light and pretending to be a guide, it leeches off the life force of any who follow it.",
    "pixelmon.lombre": "Lombre",
    "pixelmon.lombre.description": "Lombre is nocturnal—it will get active after dusk. It is also a mischief maker. When this Pokémon spots anglers, it tugs on their fishing lines from beneath the surface and enjoys their consternation.",
    "pixelmon.lopunny": "Lopunny",
    "pixelmon.lopunny.description": "Extremely cautious, it quickly bounds off when it senses danger.",
    "pixelmon.lotad": "Lotad",
    "pixelmon.lotad.description": "Lotad live in ponds and lakes, where they float on the surface. It grows weak if its broad leaf dies. On rare occasions, this Pokémon travels on land in search of clean water.",
    "pixelmon.loudred": "Loudred",
    "pixelmon.loudred.description": "Loudred’s bellowing can completely decimate a wood-frame house. It uses its voice to punish its foes. This Pokémon’s round ears serve as loudspeakers.",
    "pixelmon.lucario": "Lucario",
    "pixelmon.lucario.description": "By catching the aura emanating from others, it can read their thoughts and movements.",
    "pixelmon.ludicolo": "Ludicolo",
    "pixelmon.ludicolo.description": "Ludicolo begins dancing as soon as it hears cheerful, festive music. This Pokémon is said to appear when it hears the singing of children on hiking outings.",
    "pixelmon.lugia": "Lugia",
    "pixelmon.lugia.description": "Lugia's wings pack devastating power — a light fluttering of its wings can blow apart regular houses. As a result, this Pokémon chooses to live out of sight deep under the sea.",
    "pixelmon.lumineon": "Lumineon",
    "pixelmon.lumineon.description": "It lives on the deep-sea floor. It attracts prey by flashing the patterns on its four tail fins.",
    "pixelmon.lunala": "Lunala",
    "pixelmon.lunala.description": "Records of it exist in writings from long, long ago, where it was known by the name “the beast that calls the moon.”",
    "pixelmon.lunatone": "Lunatone",
    "pixelmon.lunatone.description": "Lunatone was discovered at a location where a meteoroid fell. As a result, some people theorize that this Pokémon came from space. However, no one has been able to prove this theory so far.",
    "pixelmon.lurantis": "Lurantis",
    "pixelmon.lurantis.description": "For self-protection, it pretends to be a bug Pokémon. Both of its arms bear keen-edged petals.",
    "pixelmon.luvdisc": "Luvdisc",
    "pixelmon.luvdisc.description": "Luvdisc live in shallow seas in the tropics. This heart-shaped Pokémon earned its name by swimming after loving couples it spotted in the ocean’s waves.",
    "pixelmon.luxio": "Luxio",
    "pixelmon.luxio.description": "Its claws loose electricity with enough amperage to cause fainting. They live in small groups.",
    "pixelmon.luxray": "Luxray",
    "pixelmon.luxray.description": "When its eyes gleam gold, it can spot hiding prey--even those taking shelter behind a wall.",
    "pixelmon.lycanroc": "Lycanroc",
    "pixelmon.lycanroc.description": "Lycanroc undergoes a special evolution depending on the time of day. Each form is unique from the others.",
    "pixelmon.machamp": "Machamp",
    "pixelmon.machamp.description": "Machamp has the power to hurl anything aside. However, trying to do any work requiring care and dexterity causes its arms to get tangled. This Pokémon tends to leap into action before it thinks.",
    "pixelmon.machoke": "Machoke",
    "pixelmon.machoke.description": "Machoke's thoroughly toned muscles possess the hardness of steel. This Pokémon has so much strength, it can easily hold aloft a sumo wrestler on just one finger.",
    "pixelmon.machop": "Machop",
    "pixelmon.machop.description": "Machop's muscles are special—they never get sore no matter how much they are used in exercise. This Pokémon has sufficient power to hurl a hundred adult humans.",
    "pixelmon.magby": "Magby",
    "pixelmon.magby.description": "Magby's state of health is determined by observing the fire it breathes. If the Pokémon is spouting yellow flames from its mouth, it is in good health. When it is fatigued, black smoke will be mixed in with the flames.",
    "pixelmon.magcargo": "Magcargo",
    "pixelmon.magcargo.description": "Magcargo's shell is actually its skin that hardened as a result of cooling. Its shell is very brittle and fragile - just touching it causes it to crumble apart. This Pokémon returns to its original size by dipping itself in magma.",
    "pixelmon.magearna": "Magearna",
    "pixelmon.magearna.description": "It synchronizes its consciousness with others to understand their feelings. This faculty makes it useful for taking care of people.",
    "pixelmon.magikarp": "Magikarp",
    "pixelmon.magikarp.description": "Magikarp is a pathetic excuse for a Pokémon that is only capable of flopping and splashing. This behavior prompted scientists to undertake research into it.",
    "pixelmon.magmar": "Magmar",
    "pixelmon.magmar.description": "In battle, Magmar blows out intensely hot flames from all over its body to intimidate its opponent. This Pokémon's fiery bursts create heat waves that ignite grass and trees in its surroundings.",
    "pixelmon.magmortar": "Magmortar",
    "pixelmon.magmortar.description": "It blasts fireballs of over 3,600 degrees Fahrenheit from the ends of its arms. It lives in volcanic craters.",
    "pixelmon.magnemite": "Magnemite",
    "pixelmon.magnemite.description": "Magnemite attaches itself to power lines to feed on electricity. If your house has a power outage, check your circuit breakers. You may find a large number of this Pokémon clinging to the breaker box.",
    "pixelmon.magneton": "Magneton",
    "pixelmon.magneton.description": "Magneton emits a powerful magnetic force that is fatal to mechanical devices. As a result, large cities sound sirens to warn citizens of large-scale outbreaks of this Pokémon.",
    "pixelmon.magnezone": "Magnezone",
    "pixelmon.magnezone.description": "Sometimes the magnetism emitted by Magnezone is too strong, making them attract each other so they cannot move.",
    "pixelmon.makuhita": "Makuhita",
    "pixelmon.makuhita.description": "Makuhita is tenacious—it will keep getting up and attacking its foe however many times it is knocked down. Every time it gets back up, this Pokémon stores more energy in its body for evolving.",
    "pixelmon.malamar": "Malamar",
    "pixelmon.malamar.description": "It wields the most compelling hypnotic powers of any Pokémon, and it forces others to do whatever it wants.",
    "pixelmon.mamoswine": "Mamoswine",
    "pixelmon.mamoswine.description": "A frozen Mamoswine was dug from ice dating back 10,000 years. This Pokémon has been around a long, long, long time.",
    "pixelmon.manaphy": "Manaphy",
    "pixelmon.manaphy.description": "It is born with a wondrous power that lets it bond with any kind of Pokémon.",
    "pixelmon.mandibuzz": "Mandibuzz",
    "pixelmon.mandibuzz.description": "They fly in circles around the sky. When they spot prey, they attack and carry it back to their nest with ease.",
    "pixelmon.manectric": "Manectric",
    "pixelmon.manectric.description": "Manectric is constantly discharging electricity from its mane. The sparks sometimes ignite forest fires. When it enters a battle, this Pokémon creates thunderclouds.",
    "pixelmon.mankey": "Mankey",
    "pixelmon.mankey.description": "When Mankey starts shaking and its nasal breathing turns rough, it's a sure sign that it is becoming angry. However, because it goes into a towering rage almost instantly, it is impossible for anyone to flee its wrath.",
    "pixelmon.mantine": "Mantine",
    "pixelmon.mantine.description": "On sunny days, schools of Mantine can be seen elegantly leaping over the sea's waves. This Pokémon is not bothered by the Remoraid that hitches rides.",
    "pixelmon.mantyke": "Mantyke",
    "pixelmon.mantyke.description": "The pattern on its back varies by region. It often swims in a school of Remoraid.",
    "pixelmon.maractus": "Maractus",
    "pixelmon.maractus.description": "It uses an up-tempo song and dance to drive away the bird Pokémon that prey on its flower seeds.",
    "pixelmon.mareanie": "Mareanie",
    "pixelmon.mareanie.description": "They eat Corsola branches, so Mareanie are hated by craftsmen who work with Corsola branches that have naturally fallen off.",
    "pixelmon.mareep": "Mareep",
    "pixelmon.mareep.description": "Mareep's fluffy coat of wool rubs together and builds a static charge. The more static electricity is charged, the more brightly the lightbulb at the tip of its tail glows.",
    "pixelmon.marill": "Marill",
    "pixelmon.marill.description": "Marill's oil-filled tail acts much like a life preserver. If you see just its tail bobbing on the water's surface, it's a sure indication that this Pokémon is diving beneath the water to feed on aquatic plants.",
    "pixelmon.marowak": "Marowak",
    "pixelmon.marowak.description": "Marowak is the evolved form of a Cubone that has overcome its sadness at the loss of its mother and grown tough. This Pokémon's tempered and hardened spirit is not easily broken.",
    "pixelmon.marshadow": "Marshadow",
    "pixelmon.marshadow.description": "It slips into the shadows of others and mimics their powers and movements. As it improves, it becomes stronger than those it’s imitating.",
    "pixelmon.marshtomp": "Marshtomp",
    "pixelmon.marshtomp.description": "The surface of Marshtomp’s body is enveloped by a thin, sticky film that enables it to live on land. This Pokémon plays in mud on beaches when the ocean tide is low.",
    "pixelmon.masquerain": "Masquerain",
    "pixelmon.masquerain.description": "Masquerain intimidates enemies with the eyelike patterns on its antennas. This Pokémon flaps its four wings to freely fly in any direction—even sideways and backwards—as if it were a helicopter.",
    "pixelmon.mawile": "Mawile",
    "pixelmon.mawile.description": "Mawile’s huge jaws are actually steel horns that have been transformed. Its docile-looking face serves to lull its foe into letting down its guard. When the foe least expects it, Mawile chomps it with its gaping jaws.",
    "pixelmon.medicham": "Medicham",
    "pixelmon.medicham.description": "It is said that through meditation, Medicham heightens energy inside its body and sharpens its sixth sense. This Pokémon hides its presence by merging itself with fields and mountains.",
    "pixelmon.meditite": "Meditite",
    "pixelmon.meditite.description": "Meditite undertakes rigorous mental training deep in the mountains. However, whenever it meditates, this Pokémon always loses its concentration and focus. As a result, its training never ends.",
    "pixelmon.meganium": "Meganium",
    "pixelmon.meganium.description": "The fragrance of Meganium's flower soothes and calms emotions. In battle, this Pokémon gives off more of its becalming scent to blunt the foe's fighting spirit.",
    "pixelmon.melmetal": "Melmetal",
    "pixelmon.melmetal.description": "Revered long ago for its capacity to create iron from nothing, for some reason it has come back to life after 3,000 years.",
    "pixelmon.meloetta": "Meloetta",
    "pixelmon.meloetta.description": "The melodies sung by Meloetta have the power to make Pokémon that hear them happy or sad.",
    "pixelmon.meltan": "Meltan",
    "pixelmon.meltan.description": "It melts particles of iron and other metals found in the subsoil, so it can absorb them into its body of molten steel.",
    "pixelmon.meowstic": "Meowstic",
    "pixelmon.meowstic.description": "When in danger, it raises its ears and releases enough psychic power to grind a 10-ton truck to dust.",
    "pixelmon.meowth": "Meowth",
    "pixelmon.meowth.description": "Meowth withdraws its sharp claws into its paws to slinkily sneak about without making any incriminating footsteps. For some reason, this Pokémon loves shiny coins that glitter with light.",
    "pixelmon.mesprit": "Mesprit",
    "pixelmon.mesprit.description": "Known as \"The Being of Emotion.\" It taught humans the nobility of sorrow, pain, and joy.",
    "pixelmon.metagross": "Metagross",
    "pixelmon.metagross.description": "Metagross has four brains in total. Combined, the four brains can breeze through difficult calculations faster than a supercomputer. This Pokémon can float in the air by tucking in its four legs.",
    "pixelmon.metang": "Metang",
    "pixelmon.metang.description": "When two Beldum fuse together, Metang is formed. The brains of the Beldum are joined by a magnetic nervous system. By linking its brains magnetically, this Pokémon generates strong psychokinetic power.",
    "pixelmon.metapod": "Metapod",
    "pixelmon.metapod.description": "The shell covering this Pokémon’s body is as hard as an iron slab. Metapod does not move very much. It stays still because it is preparing its soft innards for evolution inside the hard shell.",
    "pixelmon.mew": "Mew",
    "pixelmon.mew.description": "Mew is said to possess the genetic composition of all Pokémon. It is capable of making itself invisible at will, so it entirely avoids notice even if it approaches people.",
    "pixelmon.mewtwo": "Mewtwo",
    "pixelmon.mewtwo.description": "Mewtwo is a Pokémon that was created by genetic manipulation. However, even though the scientific power of humans created this Pokémon's body, they failed to endow Mewtwo with a compassionate heart.",
    "pixelmon.slymewtwo": "Slyfox's Mewtwo",
    "pixelmon.mienfoo": "Mienfoo",
    "pixelmon.mienfoo.description": "It takes pride in the speed at which it can use moves. What it loses in power, it makes up for in quantity.",
    "pixelmon.mienshao": "Mienshao",
    "pixelmon.mienshao.description": "It wields the fur on its arm like a whip. Its arm attacks come with such rapidity that they cannot even be seen.",
    "pixelmon.mightyena": "Mightyena",
    "pixelmon.mightyena.description": "Mightyena gives obvious signals when it is preparing to attack. It starts to growl deeply and then flattens its body. This Pokémon will bite savagely with its sharply pointed fangs.",
    "pixelmon.milcery": "Milcery",
    "pixelmon.milcery.description": "This Pokémon was born from sweet-smelling particles in the air. Its body is made of cream.",
    "pixelmon.milotic": "Milotic",
    "pixelmon.milotic.description": "Milotic is said to be the most beautiful of all the Pokémon. It has the power to becalm such emotions as anger and hostility to quell bitter feuding.",
    "pixelmon.miltank": "Miltank",
    "pixelmon.miltank.description": "Miltank gives over five gallons of milk on a daily basis. Its sweet milk is enjoyed by children and grown-ups alike. People who can't drink milk turn it into yogurt and eat it instead.",
    "pixelmon.mimejr": "Mime Jr.",
    "pixelmon.mimejr.description": "In an attempt to confuse its enemy, it mimics the enemy’s movements. Then it wastes no time in making itself scarce!",
    "pixelmon.mimikyu": "Mimikyu",
    "pixelmon.mimikyu.description": "Although it’s a quiet, lonely Pokémon, if you try to look at what’s under its rag, it will become agitated and resist violently.",
    "pixelmon.minccino": "Minccino",
    "pixelmon.minccino.description": "Minccino greet each other by grooming one another thoroughly with their tails.",
    "pixelmon.minior": "Minior",
    "pixelmon.minior.description": "It lives in the ozone layer, where it becomes food for stronger Pokémon. When it tries to run away, it falls to the ground.",
    "pixelmon.minun": "Minun",
    "pixelmon.minun.description": "Minun is more concerned about cheering on its partners than its own safety. It shorts out the electricity in its body to create brilliant showers of sparks to cheer on its teammates.",
    "pixelmon.misdreavus": "Misdreavus",
    "pixelmon.misdreavus.description": "Misdreavus frightens people with a creepy, sobbing cry. The Pokémon apparently uses its red spheres to absorb the fearful feelings of foes and turn them into nutrition.",
    "pixelmon.mismagius": "Mismagius",
    "pixelmon.mismagius.description": "It chants incantations. While they usually torment targets, some chants bring happiness.",
    "pixelmon.missingno": "MissingNo",
    "pixelmon.missingno.description": "Comment",
    "pixelmon.moltres": "Moltres",
    "pixelmon.moltres.description": "Moltres is a legendary bird Pokémon that has the ability to control fire. If this Pokémon is injured, it is said to dip its body in the molten magma of a volcano to burn and heal itself.",
    "pixelmon.monferno": "Monferno",
    "pixelmon.monferno.description": "It skillfully controls the intensity of the fire on its tail to keep its foes at an ideal distance.",
    "pixelmon.morelull": "Morelull",
    "pixelmon.morelull.description": "It scatters its shining spores around itself. Even though they’re dangerous, nighttime tours of forests where Morelull live are popular.",
    "pixelmon.morgrem": "Morgrem",
    "pixelmon.morgrem.description": "When it gets down on all fours as if to beg for forgiveness, it's trying to lure opponents in so that it can stab them with its spear-like hair.",
    "pixelmon.morpeko": "Morpeko",
    "pixelmon.morpeko.description": "As it eats the seeds stored up in its pocket-like pouches, this Pokémon is not just satisfying its constant hunger. It's also generating electricity.",
    "pixelmon.mothim": "Mothim",
    "pixelmon.mothim.description": "It loves the honey of flowers and steals honey collected by Combee.",
    "pixelmon.mrmime": "Mr. Mime",
    "pixelmon.mrmime.description": "Mr. Mime is a master of pantomime. Its gestures and motions convince watchers that something unseeable actually exists. Once the watchers are convinced, the unseeable thing exists as if it were real.",
    "pixelmon.mrrime": "Mr. Rime",
    "pixelmon.mrrime.description": "It's highly skilled at tap-dancing. It waves its cane of ice in time with its graceful movements.",
    "pixelmon.mudbray": "Mudbray",
    "pixelmon.mudbray.description": "It loves playing in the mud. If it isn’t showered with mud on a daily basis, it gets stressed out and stops listening to its Trainer.",
    "pixelmon.mudkip": "Mudkip",
    "pixelmon.mudkip.description": "The fin on Mudkip’s head acts as highly sensitive radar. Using this fin to sense movements of water and air, this Pokémon can determine what is taking place around it without using its eyes.",
    "pixelmon.mudsdale": "Mudsdale",
    "pixelmon.mudsdale.description": "It remains calm and unmoving no matter the situation. It mixes dirt with the saliva in its mouth to make a special kind of mud.",
    "pixelmon.muk": "Muk",
    "pixelmon.muk.description": "From Muk's body seeps a foul fluid that gives off a nose-bendingly horrible stench. Just one drop of this Pokémon's body fluid can turn a pool stagnant and rancid.",
    "pixelmon.munchlax": "Munchlax",
    "pixelmon.munchlax.description": "It hides food under its long body hair. However, it forgets it has hidden the food.",
    "pixelmon.munna": "Munna",
    "pixelmon.munna.description": "This Pokémon appears before people and Pokémon who are having nightmares and eats those dreams.",
    "pixelmon.murkrow": "Murkrow",
    "pixelmon.murkrow.description": "Murkrow was feared and loathed as the alleged bearer of ill fortune. This Pokémon shows strong interest in anything that sparkles or glitters. It will even try to steal rings from women.",
    "pixelmon.musharna": "Musharna",
    "pixelmon.musharna.description": "The mist emanating from their foreheads is packed with the dreams of people and Pokémon.",
    "pixelmon.naganadel": "Naganadel",
    "pixelmon.naganadel.description": "It stores hundreds of liters of poisonous liquid inside its body. It is one of the organisms known as UBs.",
    "pixelmon.natu": "Natu",
    "pixelmon.natu.description": "Natu cannot fly because its wings are not yet fully grown. If your eyes meet with this Pokémon's eyes, it will stare back intently at you. But if you move even slightly, it will hop away to safety.",
    "pixelmon.necrozma": "Necrozma",
    "pixelmon.necrozma.description": "It looks somehow pained as it rages around in search of light, which serves as its energy. It’s apparently from another world.",
    "pixelmon.nickit": "Nickit",
    "pixelmon.nickit.description": "Aided by the soft pads on its feet, it silently raids the food stores of other Pokémon. It survives off its ill-gotten gains.",
    "pixelmon.nidoking": "Nidoking",
    "pixelmon.nidoking.description": "Nidoking's thick tail packs enormously destructive power. With one swing, it can topple a metal transmission tower. Once this Pokémon goes on a rampage, there is no stopping it.",
    "pixelmon.nidoqueen": "Nidoqueen",
    "pixelmon.nidoqueen.description": "Nidoqueen's body is encased in extremely hard scales. It is adept at sending foes flying with harsh tackles. This Pokémon is at its strongest when it is defending its young.",
    "pixelmon.nidoranfemale": "Nidoran♀",
    "pixelmon.nidoranfemale.description": "Nidoran♀ has barbs that secrete a powerful poison. They are thought to have developed as protection for this small-bodied Pokémon. When enraged, it releases a horrible toxin from its horn.",
    "pixelmon.nidoranmale": "Nidoran♂",
    "pixelmon.nidoranmale.description": "Nidoran♂ has developed muscles for moving its ears. Thanks to them, the ears can be freely moved in any direction. Even the slightest sound does not escape this Pokémon's notice.",
    "pixelmon.nidorina": "Nidorina",
    "pixelmon.nidorina.description": "When Nidorina are with their friends or family, they keep their barbs tucked away to prevent hurting each other. This Pokémon appears to become nervous if separated from the others.",
    "pixelmon.nidorino": "Nidorino",
    "pixelmon.nidorino.description": "Nidorino has a horn that is harder than a diamond. If it senses a hostile presence, all the barbs on its back bristle up at once, and it challenges the foe with all its might.",
    "pixelmon.nihilego": "Nihilego",
    "pixelmon.nihilego.description": "A life-form from another world, it was dubbed a UB and is thought to produce a strong neurotoxin.",
    "pixelmon.nincada": "Nincada",
    "pixelmon.nincada.description": "Nincada lives underground for many years in complete darkness. This Pokémon absorbs nutrients from the roots of trees. It stays motionless as it waits for evolution.",
    "pixelmon.ninetales": "Ninetales",
    "pixelmon.ninetales.description": "Ninetales casts a sinister light from its bright red eyes to gain total control over its foe's mind. This Pokémon is said to live for one thousand years.",
    "pixelmon.ninjask": "Ninjask",
    "pixelmon.ninjask.description": "Ninjask moves around at such a high speed that it cannot be seen, even while its crying can be clearly heard. For that reason, this Pokémon was long believed to be invisible.",
    "pixelmon.noctowl": "Noctowl",
    "pixelmon.noctowl.description": "Noctowl never fails at catching prey in darkness. This Pokémon owes its success to its superior vision that allows it to see in minimal light, and to its soft, supple wings that make no sound in flight.",
    "pixelmon.noibat": "Noibat",
    "pixelmon.noibat.description": "They live in pitch black caves. Their enormous ears can emit ultrasonic waves of 200,000 hertz.",
    "pixelmon.noivern": "Noivern",
    "pixelmon.noivern.description": "They fly around on moonless nights and attack careless prey. Nothing can beat them in a battle in the dark.",
    "pixelmon.nosepass": "Nosepass",
    "pixelmon.nosepass.description": "Nosepass’s magnetic nose is always pointed to the north. If two of these Pokémon meet, they cannot turn their faces to each other when they are close because their magnetic noses repel one another.",
    "pixelmon.numel": "Numel",
    "pixelmon.numel.description": "Numel is extremely dull witted—it doesn’t notice being hit. However, it can’t stand hunger for even a second. This Pokémon’s body is a seething cauldron of boiling magma.",
    "pixelmon.nuzleaf": "Nuzleaf",
    "pixelmon.nuzleaf.description": "Nuzleaf live in densely overgrown forests. They occasionally venture out of the forest to startle people. This Pokémon dislikes having its long nose pinched.",
    "pixelmon.obstagoon": "Obstagoon",
    "pixelmon.obstagoon.description": "Its voice is staggering in volume. Obstagoon has a tendency to take on a threatening posture and shout—this move is known as Obstruct.",
    "pixelmon.octillery": "Octillery",
    "pixelmon.octillery.description": "Octillery grabs onto its foe using its tentacles. This Pokémon tries to immobilize it before delivering the finishing blow. If the foe turns out to be too strong, Octillery spews ink to escape.",
    "pixelmon.oddish": "Oddish",
    "pixelmon.oddish.description": "During the daytime, Oddish buries itself in soil to absorb nutrients from the ground using its entire body. The more fertile the soil, the glossier its leaves become.",
    "pixelmon.omanyte": "Omanyte",
    "pixelmon.omanyte.description": "Omanyte is one of the ancient and long-since-extinct Pokémon that have been regenerated from fossils by people. If attacked by an enemy, it withdraws itself inside its hard shell.",
    "pixelmon.omastar": "Omastar",
    "pixelmon.omastar.description": "Omastar uses its tentacles to capture its prey. It is believed to have become extinct because its shell grew too large and heavy, causing its movements to become too slow and ponderous.",
    "pixelmon.onix": "Onix",
    "pixelmon.onix.description": "Onix has a magnet in its brain. It acts as a compass so that this Pokémon does not lose direction while it is tunneling. As it grows older, its body becomes increasingly rounder and smoother.",
    "pixelmon.oranguru": "Oranguru",
    "pixelmon.oranguru.description": "It normally spends its time meditating in the treetops. It throws Poké Balls and gives other Pokémon orders as it pleases.",
    "pixelmon.orbeetle": "Orbeetle",
    "pixelmon.orbeetle.description": "It's famous for its high level of intelligence, and the large size of its brain is proof that it also possesses immense psychic power.",
    "pixelmon.oricorio": "Oricorio",
    "pixelmon.oricorio.description": "It lifts its opponents’ spirits with its cheerful dance moves. It changes form by sipping nectar of certain flowers.",
    "pixelmon.oshawott": "Oshawott",
    "pixelmon.oshawott.description": "The scalchop on its stomach isn't just used for battle—it can be used to break open hard berries as well.",
    "pixelmon.overqwil": "Overqwil",
    "pixelmon.overqwil.description": "Its lancelike spikes and savage temperament have earned it the nickname \"sea fiend.\" It slurps up poison to nourish itself.",
    "pixelmon.pachirisu": "Pachirisu",
    "pixelmon.pachirisu.description": "It makes fur balls that crackle with static electricity. It stores them with berries in tree holes.",
    "pixelmon.palkia": "Palkia",
    "pixelmon.palkia.description": "It is said to live in a gap in the spatial dimension parallel to ours. It appears in mythology.",
    "pixelmon.palossand": "Palossand",
    "pixelmon.palossand.description": "Each of its grains of sand has its own will. Palossand eats small Pokémon and siphons away their vital essence while they’re still alive.",
    "pixelmon.palpitoad": "Palpitoad",
    "pixelmon.palpitoad.description": "When they vibrate the bumps on their heads, they can make waves in water or earthquake-like vibrations on land.",
    "pixelmon.pancham": "Pancham",
    "pixelmon.pancham.description": "It does its best to be taken seriously by its enemies, but its glare is not sufficiently intimidating. Chewing on a leaf is its trademark.",
    "pixelmon.pangoro": "Pangoro",
    "pixelmon.pangoro.description": "Although it possesses a violent temperament, it won’t put up with bullying. It uses the leaf in its mouth to sense the movements of its enemies.",
    "pixelmon.panpour": "Panpour",
    "pixelmon.panpour.description": "The water stored inside the tuft on its head is full of nutrients. It waters plants with it using its tail.",
    "pixelmon.pansage": "Pansage",
    "pixelmon.pansage.description": "It shares the leaf on its head with weary-looking Pokémon. These leaves are known to relieve stress.",
    "pixelmon.pansear": "Pansear",
    "pixelmon.pansear.description": "Very intelligent, it roasts berries before eating them. It likes to help people.",
    "pixelmon.paras": "Paras",
    "pixelmon.paras.description": "Paras has parasitic mushrooms growing on its back called tochukaso. They grow large by drawing nutrients from this Bug Pokémon host. They are highly valued as a medicine for extending life.",
    "pixelmon.parasect": "Parasect",
    "pixelmon.parasect.description": "Parasect is known to infest large trees en masse and drain nutrients from the lower trunk and roots. When an infested tree dies, they move onto another tree all at once.",
    "pixelmon.passimian": "Passimian",
    "pixelmon.passimian.description": "They use their saliva to stick leaves to their shoulders. You can tell what troop they belong to from the position of the leaves.",
    "pixelmon.patrat": "Patrat",
    "pixelmon.patrat.description": "Using food stored in cheek pouches, they can keep watch for days. They use their tails to communicate with others.",
    "pixelmon.pawniard": "Pawniard",
    "pixelmon.pawniard.description": "Blades comprise this Pokémon's entire body. If battling dulls the blades, it sharpens them on stones by the river.",
    "pixelmon.pelipper": "Pelipper",
    "pixelmon.pelipper.description": "Pelipper is a flying transporter that carries small Pokémon and eggs inside its massive bill. This Pokémon builds its nest on steep cliffs facing the sea.",
    "pixelmon.perrserker": "Perrserker",
    "pixelmon.perrserker.description": "What appears to be an iron helmet is actually hardened hair. This Pokémon lives for the thrill of battle.",
    "pixelmon.persian": "Persian",
    "pixelmon.persian.description": "Persian has six bold whiskers that give it a look of toughness. The whiskers sense air movements to determine what is in the Pokémon's surrounding vicinity. It becomes docile if grabbed by the whiskers.",
    "pixelmon.petilil": "Petilil",
    "pixelmon.petilil.description": "The leaves on its head are very bitter. Eating one of these leaves is known to refresh a tired body.",
    "pixelmon.phanpy": "Phanpy",
    "pixelmon.phanpy.description": "For its nest, Phanpy digs a vertical pit in the ground at the edge of a river. It marks the area around its nest with its trunk to let the others know that the area has been claimed.",
    "pixelmon.phantump": "Phantump",
    "pixelmon.phantump.description": "These Pokémon are created when spirits possess rotten tree stumps. They prefer to live in abandoned forests.",
    "pixelmon.pheromosa": "Pheromosa",
    "pixelmon.pheromosa.description": "A life-form that lives in another world, its body is thin and supple, but it also possesses great power.",
    "pixelmon.phione": "Phione",
    "pixelmon.phione.description": "When the water warms, they inflate the flotation sac on their heads and drift languidly on the sea in packs.",
    "pixelmon.pichu": "Pichu",
    "pixelmon.pichu.description": "Pichu charges itself with electricity more easily on days with thunderclouds or when the air is very dry. You can hear the crackling of static electricity coming off this Pokémon.",
    "pixelmon.pidgeot": "Pidgeot",
    "pixelmon.pidgeot.description": "This Pokémon has a dazzling plumage of beautifully glossy feathers. Many Trainers are captivated by the striking beauty of the feathers on its head, compelling them to choose Pidgeot as their Pokémon.",
    "pixelmon.pidgeotto": "Pidgeotto",
    "pixelmon.pidgeotto.description": "Pidgeotto claims a large area as its own territory. This Pokémon flies around, patrolling its living space. If its territory is violated, it shows no mercy in thoroughly punishing the foe with its sharp claws.",
    "pixelmon.pidgey": "Pidgey",
    "pixelmon.pidgey.description": "Pidgey has an extremely sharp sense of direction. It is capable of unerringly returning home to its nest, however far it may be removed from its familiar surroundings.",
    "pixelmon.pidove": "Pidove",
    "pixelmon.pidove.description": "This very forgetful Pokémon will wait for a new order from its Trainer even though it already has one.",
    "pixelmon.pignite": "Pignite",
    "pixelmon.pignite.description": "The more it eats, the more fuel it has to make the fire in its stomach stronger. This fills it with even more power.",
    "pixelmon.pikachu": "Pikachu",
    "pixelmon.pikachu.description": "Whenever Pikachu comes across something new, it blasts it with a jolt of electricity. If you come across a blackened berry, it's evidence that this Pokémon mistook the intensity of its charge.",
    "pixelmon.pikipek": "Pikipek",
    "pixelmon.pikipek.description": "It pecks at trees with its hard beak. You can get some idea of its mood or condition from the rhythm of its pecking.",
    "pixelmon.piloswine": "Piloswine",
    "pixelmon.piloswine.description": "Piloswine is covered by a thick coat of long hair that enables it to endure the freezing cold. This Pokémon uses its tusks to dig up food that has been buried under ice.",
    "pixelmon.pincurchin": "Pincurchin",
    "pixelmon.pincurchin.description": "It feeds on seaweed, using its teeth to scrape it off rocks. Electric current flows from the tips of its spines.",
    "pixelmon.pineco": "Pineco",
    "pixelmon.pineco.description": "Pineco hangs from a tree branch and patiently waits for prey to come along. If the Pokémon is disturbed while eating by someone shaking its tree, it drops down to the ground and explodes with no warning.",
    "pixelmon.pinsir": "Pinsir",
    "pixelmon.pinsir.description": "Pinsir is astoundingly strong. It can grip a foe weighing twice its weight in its horns and easily lift it. This Pokémon's movements turn sluggish in cold places.",
    "pixelmon.piplup": "Piplup",
    "pixelmon.piplup.description": "It doesn't like to be taken care of. It's difficult to bond with since it won't listen to its Trainer.",
    "pixelmon.plusle": "Plusle",
    "pixelmon.plusle.description": "Plusle always acts as a cheerleader for its partners. Whenever a teammate puts out a good effort in battle, this Pokémon shorts out its body to create the crackling noises of sparks to show its joy.",
    "pixelmon.poipole": "Poipole",
    "pixelmon.poipole.description": "This Ultra Beast is well enough liked to be chosen as a first partner in its own world.",
    "pixelmon.politoed": "Politoed",
    "pixelmon.politoed.description": "The curled hair on Politoed's head is proof of its status as a king. It is said that the longer and more curled the hair, the more respect this Pokémon earns from its peers.",
    "pixelmon.poliwag": "Poliwag",
    "pixelmon.poliwag.description": "Poliwag has a very thin skin. It is possible to see the Pokémon's spiral innards right through the skin. Despite its thinness, however, the skin is also very flexible. Even sharp fangs bounce right off it.",
    "pixelmon.poliwhirl": "Poliwhirl",
    "pixelmon.poliwhirl.description": "The surface of Poliwhirl's body is always wet and slick with an oily fluid. Because of this greasy covering, it can easily slip and slide out of the clutches of any enemy in battle.",
    "pixelmon.poliwrath": "Poliwrath",
    "pixelmon.poliwrath.description": "Poliwrath's highly developed, brawny muscles never grow fatigued, however much it exercises. It is so tirelessly strong, this Pokémon can swim back and forth across the ocean without effort.",
    "pixelmon.polteageist": "Polteageist",
    "pixelmon.polteageist.description": "This species lives in antique teapots. Most pots are forgeries, but on rare occasions, an authentic work is found.",
    "pixelmon.ponyta": "Ponyta",
    "pixelmon.ponyta.description": "Ponyta is very weak at birth. It can barely stand up. This Pokémon becomes stronger by stumbling and falling to keep up with its parent.",
    "pixelmon.poochyena": "Poochyena",
    "pixelmon.poochyena.description": "At first sight, Poochyena takes a bite at anything that moves. This Pokémon chases after prey until the victim becomes exhausted. However, it may turn tail if the prey strikes back.",
    "pixelmon.popplio": "Popplio",
    "pixelmon.popplio.description": "The balloons it inflates with its nose grow larger and larger as it practices day by day.",
    "pixelmon.porygon-z": "Porygon-Z",
    "pixelmon.porygon-z.description": "Additional software was installed to make it a better Pokémon. It began acting oddly, however.",
    "pixelmon.porygonzjerome": "Jerome's Porygon",
    "pixelmon.porygon": "Porygon",
    "pixelmon.porygon.description": "Porygon is capable of reverting itself entirely back to program data and entering cyberspace. This Pokémon is copy-protected so it cannot be duplicated by copying.",
    "pixelmon.porygon2": "Porygon2",
    "pixelmon.porygon2.description": "Porygon2 was created by humans using the power of science. The man-made Pokémon has been endowed with artificial intelligence that enables it to learn new gestures and emotions on its own.",
    "pixelmon.primarina": "Primarina",
    "pixelmon.primarina.description": "To Primarina, every battle is a stage. It takes down its prey with beautiful singing and dancing.",
    "pixelmon.primeape": "Primeape",
    "pixelmon.primeape.description": "When Primeape becomes furious, its blood circulation is boosted. In turn, its muscles are made even stronger. However, it also becomes much less intelligent at the same time.",
    "pixelmon.prinplup": "Prinplup",
    "pixelmon.prinplup.description": "It lives alone, away from others. Apparently, every one of them believes it is the most important.",
    "pixelmon.probopass": "Probopass",
    "pixelmon.probopass.description": "It exudes strong magnetism from all over. It controls three small units called Mini-Noses.",
    "pixelmon.psyduck": "Psyduck",
    "pixelmon.psyduck.description": "Psyduck uses a mysterious power. When it does so, this Pokémon generates brain waves that are supposedly only seen in sleepers. This discovery spurred controversy among scholars.",
    "pixelmon.pumpkaboo": "Pumpkaboo",
    "pixelmon.pumpkaboo.description": "The pumpkin body is inhabited by a spirit trapped in this world. As the sun sets, it becomes restless and active.",
    "pixelmon.pupitar": "Pupitar",
    "pixelmon.pupitar.description": "Pupitar creates a gas inside its body that it compresses and forcefully ejects to propel itself like a jet. The body is very durable--it avoids damage even if it hits solid steel.",
    "pixelmon.purrloin": "Purrloin",
    "pixelmon.purrloin.description": "Its cute act is a ruse. When victims let down their guard, they find their items taken. It attacks with sharp claws.",
    "pixelmon.purugly": "Purugly",
    "pixelmon.purugly.description": "It would claim another Pokémon's nest as its own if it finds a nest sufficiently comfortable.",
    "pixelmon.pyroar": "Pyroar",
    "pixelmon.pyroar.description": "The male with the largest mane of fire is the leader of the pride.",
    "pixelmon.pyukumuku": "Pyukumuku",
    "pixelmon.pyukumuku.description": "The tradition known as Pyukumuku chucking started from the custom of throwing Pyukumuku back into the sea after they wash onshore.",
    "pixelmon.quagsire": "Quagsire",
    "pixelmon.quagsire.description": "Quagsire hunts for food by leaving its mouth wide open in water and waiting for its prey to blunder in unaware. Because the Pokémon does not move, it does not get very hungry.",
    "pixelmon.quilava": "Quilava",
    "pixelmon.quilava.description": "Quilava keeps its foes at bay with the intensity of its flames and gusts of superheated air. This Pokémon applies its outstanding nimbleness to dodge attacks even while scorching the foes with flames.",
    "pixelmon.quilladin": "Quilladin",
    "pixelmon.quilladin.description": "It relies on its sturdy shell to deflect predators' attacks. It counterattacks with its sharp quills.",
    "pixelmon.qwilfish": "Qwilfish",
    "pixelmon.qwilfish.description": "Qwilfish sucks in water, inflating itself. This Pokémon uses the pressure of the water it swallowed to shoot toxic quills all at once from all over its body. It finds swimming somewhat challenging.",
    "pixelmon.raboot": "Raboot",
    "pixelmon.raboot.description": "Its thick and fluffy fur protects it from the cold and enables it to use hotter fire moves.",
    "pixelmon.raichu": "Raichu",
    "pixelmon.raichu.description": "If the electrical sacs become excessively charged, Raichu plants its tail in the ground and discharges. Scorched patches of ground will be found near this Pokémon's nest.",
    "pixelmon.raikou": "Raikou",
    "pixelmon.raikou.description": "Raikou embodies the speed of lightning. The roars of this Pokémon send shock waves shuddering through the air and shake the ground as if lightning bolts had come crashing down.",
    "pixelmon.ralts": "Ralts",
    "pixelmon.ralts.description": "Ralts senses the emotions of people using the horns on its head. This Pokémon rarely appears before people. But when it does, it draws closer if it senses that the person has a positive disposition.",
    "pixelmon.rampardos": "Rampardos",
    "pixelmon.rampardos.description": "Its skull withstands impacts of any magnitude. As a result, its brain never gets the chance to grow.",
    "pixelmon.rapidash": "Rapidash",
    "pixelmon.rapidash.description": "Rapidash usually can be seen casually cantering in the fields and plains. However, when this Pokémon turns serious, its fiery manes flare and blaze as it gallops its way up to 150 mph.",
    "pixelmon.raticate": "Raticate",
    "pixelmon.raticate.description": "Raticate’s sturdy fangs grow steadily. To keep them ground down, it gnaws on rocks and logs. It may even chew on the walls of houses.",
    "pixelmon.rattata": "Rattata",
    "pixelmon.rattata.description": "Rattata is cautious in the extreme. Even while it is asleep, it constantly listens by moving its ears around. It is not picky about where it lives—it will make its nest anywhere.",
    "pixelmon.rayquaza": "Rayquaza",
    "pixelmon.rayquaza.description": "Rayquaza is said to have lived for hundreds of millions of years. Legends remain of how it put to rest the clash between Kyogre and Groudon.",
    "pixelmon.regice": "Regice",
    "pixelmon.regice.description": "Regice’s body was made during an ice age. The deep-frozen body can’t be melted, even by fire. This Pokémon controls frigid air of -328 degrees Fahrenheit.",
    "pixelmon.regigigas": "Regigigas",
    "pixelmon.regigigas.description": "It is said to have made Pokémon that look like itself from a special ice mountain, rocks, and magma.",
    "pixelmon.regirock": "Regirock",
    "pixelmon.regirock.description": "Regirock was sealed away by people long ago. If this Pokémon’s body is damaged in battle, it is said to seek out suitable rocks on its own to repair itself.",
    "pixelmon.registeel": "Registeel",
    "pixelmon.registeel.description": "Registeel has a body that is harder than any kind of metal. Its body is apparently hollow. No one has any idea what this Pokémon eats.",
    "pixelmon.relicanth": "Relicanth",
    "pixelmon.relicanth.description": "Relicanth is a Pokémon species that existed for a hundred million years without ever changing its form. This ancient Pokémon feeds on microscopic organisms with its toothless mouth.",
    "pixelmon.remoraid": "Remoraid",
    "pixelmon.remoraid.description": "Remoraid sucks in water, then expels it at high velocity using its abdominal muscles to shoot down flying prey. When evolution draws near, this Pokémon travels downstream from rivers.",
    "pixelmon.reshiram": "Reshiram",
    "pixelmon.reshiram.description": "This legendary Pokémon can scorch the world with fire. It helps those who want to build a world of truth.",
    "pixelmon.reuniclus": "Reuniclus",
    "pixelmon.reuniclus.description": "They use psychic power to control their arms, which are made of a special liquid. They can crush boulders psychically.",
    "pixelmon.regidrago": "Regidrago",
    "pixelmon.regidrago.description": "According to legend, Regidrago was created by Regigigas using crystallized dragon energy, but it ran out of crystals after building Regidrago's head.",
    "pixelmon.regieleki": "Regieleki",
    "pixelmon.regieleki.description": "Researchers have determined that Regieleki’s body is fitted with what appears to be special insulating equipment that does not conduct electricity.",
    "pixelmon.rhydon": "Rhydon",
    "pixelmon.rhydon.description": "Rhydon's horn can crush even uncut diamonds. One sweeping blow of its tail can topple a building. This Pokémon's hide is extremely tough. Even direct cannon hits don't leave a scratch.",
    "pixelmon.rhyhorn": "Rhyhorn",
    "pixelmon.rhyhorn.description": "Rhyhorn runs in a straight line, smashing everything in its path. It is not bothered even if it rushes headlong into a block of steel. This Pokémon may feel some pain from the collision the next day, however.",
    "pixelmon.rhyperior": "Rhyperior",
    "pixelmon.rhyperior.description": "From holes in its palms, it fires out Geodude. Its carapace can withstand volcanic eruptions.",
    "pixelmon.ribombee": "Ribombee",
    "pixelmon.ribombee.description": "Rain makes pollen damp, so Ribombee hates rain. When it sees ominous clouds, it finds a hollow in a tree, where it waits stock-still.",
    "pixelmon.rillaboom": "Rillaboom",
    "pixelmon.rillaboom.description": "By drumming, it taps into the power of its special tree stump. The roots of the stump follow its direction in battle.",
    "pixelmon.riolu": "Riolu",
    "pixelmon.riolu.description": "It uses the shapes of auras, which change according to emotion, to communicate with others.",
    "pixelmon.rockruff": "Rockruff",
    "pixelmon.rockruff.description": "As they develop, their disposition grows more violent and aggressive. Many Trainers find them too much to handle and abandon them.",
    "pixelmon.roggenrola": "Roggenrola",
    "pixelmon.roggenrola.description": "Its ear is hexagonal in shape. Compressed underground, its body is as hard as steel.",
    "pixelmon.rolycoly": "Rolycoly",
    "pixelmon.rolycoly.description": "Most of its body has the same composition as coal. Fittingly, this Pokémon was first discovered in coal mines about 400 years ago.",
    "pixelmon.rookidee": "Rookidee",
    "pixelmon.rookidee.description": "It will bravely challenge any opponent, no matter how powerful. This Pokémon benefits from every battle—even a defeat increases its strength a bit.",
    "pixelmon.roselia": "Roselia",
    "pixelmon.roselia.description": "Roselia shoots sharp thorns as projectiles at any opponent that tries to steal the flowers on its arms. The aroma of this Pokémon brings serenity to living things.",
    "pixelmon.roserade": "Roserade",
    "pixelmon.roserade.description": "Luring prey with a sweet scent, it uses poison whips on its arms to poison, bind, and finish off the prey.",
    "pixelmon.rotom": "Rotom",
    "pixelmon.rotom.description": "Research continues on this Pokémon, which could be the power source of a unique motor.",
    "pixelmon.rowlet": "Rowlet",
    "pixelmon.rowlet.description": "It sends its feathers, which are as sharp as blades, flying in attack. Its legs are strong, so its kicks are also formidable.",
    "pixelmon.rufflet": "Rufflet",
    "pixelmon.rufflet.description": "They crush berries with their talons. They bravely stand up to any opponent, no matter how strong it is.",
    "pixelmon.runerigus": "Runerigus",
    "pixelmon.runerigus.description": "A powerful curse was woven into an ancient painting. After absorbing the spirit of a Yamask, the painting began to move.",
    "pixelmon.sableye": "Sableye",
    "pixelmon.sableye.description": "Sableye lead quiet lives deep inside caverns. They are feared, however, because these Pokémon are thought to steal the spirits of people when their eyes burn with a sinister glow in the darkness.",
    "pixelmon.salamence": "Salamence",
    "pixelmon.salamence.description": "Salamence came about as a result of a strong, long-held dream of growing wings. It is said that this powerful desire triggered a sudden mutation in this Pokémon’s cells, causing it to sprout its magnificent wings.",
    "pixelmon.salandit": "Salandit",
    "pixelmon.salandit.description": "The males will do whatever the females tell them. They give the females most of their food. Due to malnutrition, the males can’t evolve.",
    "pixelmon.salazzle": "Salazzle",
    "pixelmon.salazzle.description": "Salazzle lives deep in caves and forces the Salandit it has attracted with its pheromones to serve it.",
    "pixelmon.samurott": "Samurott",
    "pixelmon.samurott.description": "In the time it takes a foe to blink, it can draw and sheathe the seamitars attached to its front legs.",
    "pixelmon.sandaconda": "Sandaconda",
    "pixelmon.sandaconda.description": "When it contracts its body, over 220 pounds of sand sprays from its nose. If it ever runs out of sand, it becomes disheartened.",
    "pixelmon.sandile": "Sandile",
    "pixelmon.sandile.description": "It moves along below the sand's surface, except for its nose and eyes. A dark membrane shields its eyes from the sun.",
    "pixelmon.sandshrew": "Sandshrew",
    "pixelmon.sandshrew.description": "Sandshrew's body is configured to absorb water without waste, enabling it to survive in an arid desert. This Pokémon curls up to protect itself from its enemies.",
    "pixelmon.sandslash": "Sandslash",
    "pixelmon.sandslash.description": "Sandslash's body is covered by tough spikes, which are hardened sections of its hide. Once a year, the old spikes fall out, to be replaced with new spikes that grow out from beneath the old ones.",
    "pixelmon.sandygast": "Sandygast",
    "pixelmon.sandygast.description": "It likes the shovel on its head, so Sandygast will get serious and fight any children who come to take it back.",
    "pixelmon.sawk": "Sawk",
    "pixelmon.sawk.description": "Desiring the strongest karate chop, they seclude themselves in mountains and train without sleeping.",
    "pixelmon.sawsbuck": "Sawsbuck",
    "pixelmon.sawsbuck.description": "They migrate according to the seasons. People can tell the season by looking at Sawsbuck's horns.",
    "pixelmon.scatterbug": "Scatterbug",
    "pixelmon.scatterbug.description": "When under attack from bird Pokémon, it spews a poisonous black powder that causes paralysis on contact.",
    "pixelmon.sceptile": "Sceptile",
    "pixelmon.sceptile.description": "The leaves growing on Sceptile’s body are very sharp edged. This Pokémon is very agile—it leaps all over the branches of trees and jumps on its foe from above or behind.",
    "pixelmon.scizor": "Scizor",
    "pixelmon.scizor.description": "Scizor has a body with the hardness of steel. It is not easily fazed by ordinary sorts of attacks. This Pokémon flaps its wings to regulate its body temperature.",
    "pixelmon.scolipede": "Scolipede",
    "pixelmon.scolipede.description": "It clasps its prey with the claws on its neck until it stops moving. Then it finishes it off with deadly poison.",
    "pixelmon.scorbunny": "Scorbunny",
    "pixelmon.scorbunny.description": "A warm-up of running around gets fire energy coursing through this Pokémon's body. Once that happens, it's ready to fight at full power.",
    "pixelmon.scrafty": "Scrafty",
    "pixelmon.scrafty.description": "It pulls up its shed skin to protect itself while it kicks. The bigger the crest, the more respected it is.",
    "pixelmon.scraggy": "Scraggy",
    "pixelmon.scraggy.description": "Its skin has a rubbery elasticity, so it can reduce damage by defensively pulling its skin up to its neck.",
    "pixelmon.scyther": "Scyther",
    "pixelmon.scyther.description": "Scyther is blindingly fast. Its blazing speed enhances the effectiveness of the twin scythes on its forearms. This Pokémon's scythes are so effective, they can slice through thick logs in one wicked stroke.",
    "pixelmon.seadra": "Seadra",
    "pixelmon.seadra.description": "Seadra sleeps after wriggling itself between the branches of coral. Those trying to harvest coral are occasionally stung by this Pokémon's poison barbs if they fail to notice it.",
    "pixelmon.seaking": "Seaking",
    "pixelmon.seaking.description": "In the autumn, Seaking males can be seen performing courtship dances in riverbeds to woo females. During this season, this Pokémon's body coloration is at its most beautiful.",
    "pixelmon.sealeo": "Sealeo",
    "pixelmon.sealeo.description": "Sealeo has the habit of always juggling on the tip of its nose anything it sees for the first time. This Pokémon occasionally entertains itself by balancing and rolling a Spheal on its nose.",
    "pixelmon.seedot": "Seedot",
    "pixelmon.seedot.description": "Seedot attaches itself to a tree branch using the top of its head. It sucks moisture from the tree while hanging off the branch. The more water it drinks, the glossier this Pokémon’s body becomes.",
    "pixelmon.seel": "Seel",
    "pixelmon.seel.description": "Seel hunts for prey in the frigid sea underneath sheets of ice. When it needs to breathe, it punches a hole through the ice with the sharply protruding section of its head.",
    "pixelmon.seismitoad": "Seismitoad",
    "pixelmon.seismitoad.description": "It increases the power of its punches by vibrating the bumps on its fists. It can turn a boulder to rubble with one punch.",
    "pixelmon.sentret": "Sentret",
    "pixelmon.sentret.description": "When Sentret sleeps, it does so while another stands guard. The sentry wakes the others at the first sign of danger. When this Pokémon becomes separated from its pack, it becomes incapable of sleep due to fear.",
    "pixelmon.pixeldipsentret": "Pixeldip's Sentret",
    "pixelmon.serperior": "Serperior",
    "pixelmon.serperior.description": "It only gives its all against strong opponents who are not fazed by the glare from Serperior's noble eyes.",
    "pixelmon.servine": "Servine",
    "pixelmon.servine.description": "It moves along the ground as if sliding. Its swift movements befuddle its foes, and it then attacks with a vine whip.",
    "pixelmon.seviper": "Seviper",
    "pixelmon.seviper.description": "Seviper shares a generations-long feud with Zangoose. The scars on its body are evidence of vicious battles. This Pokémon attacks using its sword-edged tail.",
    "pixelmon.sewaddle": "Sewaddle",
    "pixelmon.sewaddle.description": "This Pokémon makes clothes for itself. It chews up leaves and sews them with sticky thread extruded from its mouth.",
    "pixelmon.sharpedo": "Sharpedo",
    "pixelmon.sharpedo.description": "Nicknamed \"the bully of the sea,\" Sharpedo is widely feared. Its cruel fangs grow back immediately if they snap off. Just one of these Pokémon can thoroughly tear apart a supertanker.",
    "pixelmon.shaymin": "Shaymin",
    "pixelmon.shaymin.description": "It can dissolve toxins in the air to instantly transform ruined land into a lush field of flowers.",
    "pixelmon.shedinja": "Shedinja",
    "pixelmon.shedinja.description": "Shedinja’s hard body doesn’t move—not even a twitch. In fact, its body appears to be merely a hollow shell. It is believed that this Pokémon will steal the spirit of anyone peering into its hollow body from its back.",
    "pixelmon.shelgon": "Shelgon",
    "pixelmon.shelgon.description": "Inside Shelgon’s armor-like shell, cells are in the midst of transformation to create an entirely new body. This Pokémon’s shell is extremely heavy, making its movements sluggish.",
    "pixelmon.shellder": "Shellder",
    "pixelmon.shellder.description": "At night, this Pokémon uses its broad tongue to burrow a hole in the seafloor sand and then sleep in it. While it is sleeping, Shellder closes its shell, but leaves its tongue hanging out.",
    "pixelmon.shellos": "Shellos",
    "pixelmon.shellos.description": "Beware of pushing strongly on its squishy body, as it makes a mysterious purple fluid ooze out.",
    "pixelmon.shelmet": "Shelmet",
    "pixelmon.shelmet.description": "When it and Karrablast are together, and both receive electrical stimulation, they both evolve.",
    "pixelmon.shieldon": "Shieldon",
    "pixelmon.shieldon.description": "It habitually polishes its face by rubbing it against tree trunks. It is weak to attacks from behind.",
    "pixelmon.shiftry": "Shiftry",
    "pixelmon.shiftry.description": "Shiftry is a mysterious Pokémon that is said to live atop towering trees dating back over a thousand years. It creates terrific windstorms with the fans it holds.",
    "pixelmon.shiinotic": "Shiinotic",
    "pixelmon.shiinotic.description": "It puts its prey to sleep and siphons off their vitality through the tip of its arms. If one of its kind is weakened, it helps by sending it vitality.",
    "pixelmon.shinx": "Shinx",
    "pixelmon.shinx.description": "The extension and contraction of its muscles generates electricity. It glows when in trouble.",
    "pixelmon.shroomish": "Shroomish",
    "pixelmon.shroomish.description": "Shroomish live in damp soil in the dark depths of forests. They are often found keeping still under fallen leaves. This Pokémon feeds on compost that is made up of fallen, rotted leaves.",
    "pixelmon.shuckle": "Shuckle",
    "pixelmon.shuckle.description": "Shuckle quietly hides itself under rocks, keeping its body concealed inside its hard shell while eating berries it has stored away. The berries mix with its body fluids to become a juice.",
    "pixelmon.shuppet": "Shuppet",
    "pixelmon.shuppet.description": "Shuppet is attracted by feelings of jealousy and vindictiveness. If someone develops strong feelings of vengeance, this Pokémon will appear in a swarm and line up beneath the eaves of that person’s home.",
    "pixelmon.sigilyph": "Sigilyph",
    "pixelmon.sigilyph.description": "The guardians of an ancient city, they use their psychic power to attack enemies that invade their territory.",
    "pixelmon.silcoon": "Silcoon",
    "pixelmon.silcoon.description": "Silcoon tethers itself to a tree branch using silk to keep from falling. There, this Pokémon hangs quietly while it awaits evolution. It peers out of the silk cocoon through a small hole.",
    "pixelmon.silicobra": "Silicobra",
    "pixelmon.silicobra.description": "As it digs, it swallows sand and stores it in its neck pouch. The pouch can hold more than 17 pounds of sand.",
    "pixelmon.silvally": "Silvally",
    "pixelmon.silvally.description": "This Pokémon is said to change based on the memory it holds. It is loyal to its trainer and will risk it's life for them.",
    "pixelmon.simipour": "Simipour",
    "pixelmon.simipour.description": "The high-pressure water expelled from its tail is so powerful, it can destroy a concrete wall.",
    "pixelmon.simisage": "Simisage",
    "pixelmon.simisage.description": "It attacks enemies with strikes of its thorn-covered tail. This Pokémon is wild tempered.",
    "pixelmon.simisear": "Simisear",
    "pixelmon.simisear.description": "A flame burns inside its body. It scatters embers from its head and tail to sear its opponents.",
    "pixelmon.sinistea": "Sinistea",
    "pixelmon.sinistea.description": "This Pokémon is said to have been born when a lonely spirit possessed a cold, leftover cup of tea.",
    "pixelmon.sirfetchd": "Sirfetch'd",
    "pixelmon.sirfetchd.description": "Only Farfetch'd that have survived many battles can attain this evolution. When this Pokémon's leek withers, it will retire from combat.",
    "pixelmon.sizzlipede": "Sizzlipede",
    "pixelmon.sizzlipede.description": "It stores flammable gas in its body and uses it to generate heat. The yellow sections on its belly get particularly hot.",
    "pixelmon.skarmory": "Skarmory",
    "pixelmon.skarmory.description": "Skarmory is entirely encased in hard, protective armor. This Pokémon flies at close to 190 mph. It slashes foes with its wings that possess swordlike cutting edges.",
    "pixelmon.skiddo": "Skiddo",
    "pixelmon.skiddo.description": "Thought to be one of the first Pokémon to live in harmony with humans, it has a placid disposition.",
    "pixelmon.skiploom": "Skiploom",
    "pixelmon.skiploom.description": "Skiploom's flower blossoms when the temperature rises above 64 degrees Fahrenheit. How much the flower opens depends on the temperature. For that reason, this Pokémon is sometimes used as a thermometer.",
    "pixelmon.skitty": "Skitty",
    "pixelmon.skitty.description": "Skitty has the habit of becoming fascinated by moving objects and chasing them around. This Pokémon is known to chase after its own tail and become dizzy.",
    "pixelmon.skorupi": "Skorupi",
    "pixelmon.skorupi.description": "It grips prey with its tail claws and injects poison. It tenaciously hangs on until the poison takes.",
    "pixelmon.skrelp": "Skrelp",
    "pixelmon.skrelp.description": "Camouflaged as rotten kelp, they spray liquid poison on prey that approaches unawares and then finish it off.",
    "pixelmon.skuntank": "Skuntank",
    "pixelmon.skuntank.description": "It sprays a vile-smelling fluid from the tip of its tail to attack. Its range is over 160 feet.",
    "pixelmon.skwovet": "Skwovet",
    "pixelmon.skwovet.description": "Found throughout the Galar region, this Pokémon becomes uneasy if its cheeks are ever completely empty of berries.",
    "pixelmon.slaking": "Slaking",
    "pixelmon.slaking.description": "Slaking spends all day lying down and lolling about. It eats grass growing within its reach. If it eats all the grass it can reach, this Pokémon reluctantly moves to another spot.",
    "pixelmon.slakoth": "Slakoth",
    "pixelmon.slakoth.description": "Slakoth lolls around for over 20 hours every day. Because it moves so little, it does not need much food. This Pokémon’s sole daily meal consists of just three leaves.",
    "pixelmon.sliggoo": "Sliggoo",
    "pixelmon.sliggoo.description": "It drives away opponents by excreting a sticky liquid that can dissolve anything. Its eyes devolved, so it can't see anything.",
    "pixelmon.slowbro": "Slowbro",
    "pixelmon.slowbro.description": "Slowbro's tail has a Shellder firmly attached with a bite. As a result, the tail can't be used for fishing anymore. This causes Slowbro to grudgingly swim and catch prey instead.",
    "pixelmon.slowking": "Slowking",
    "pixelmon.slowking.description": "Slowking undertakes research every day in an effort to solve the mysteries of the world. However, this Pokémon apparently forgets everything it has learned if the Shellder on its head comes off.",
    "pixelmon.slowpoke": "Slowpoke",
    "pixelmon.slowpoke.description": "Slowpoke uses its tail to catch prey by dipping it in water at the side of a river. However, this Pokémon often forgets what it's doing and often spends entire days just loafing at water's edge.",
    "pixelmon.slugma": "Slugma",
    "pixelmon.slugma.description": "Molten magma courses throughout Slugma's circulatory system. If this Pokémon is chilled, the magma cools and hardens. Its body turns brittle and chunks fall off, reducing its size.",
    "pixelmon.slurpuff": "Slurpuff",
    "pixelmon.slurpuff.description": "It can distinguish the faintest of scents. It puts its sensitive sense of smell to use by helping pastry chefs in their work.",
    "pixelmon.smeargle": "Smeargle",
    "pixelmon.smeargle.description": "Smeargle marks the boundaries of its territory using a body fluid that leaks out from the tip of its tail. Over 5,000 different marks left by this Pokémon have been found.",
    "pixelmon.smoochum": "Smoochum",
    "pixelmon.smoochum.description": "Smoochum actively runs about, but also falls quite often. Whenever the chance arrives, it will look for its reflection to make sure its face hasn't become dirty.",
    "pixelmon.sneasel": "Sneasel",
    "pixelmon.sneasel.description": "Sneasel scales trees by punching its hooked claws into bark. It seeks out unguarded nests and steals Eggs for food while its parents are away.",
    "pixelmon.sneasler": "Sneasler",
    "pixelmon.sneasler.description": "Because of Sneasler's virulent poison and daunting physical prowess, no other species could hope to best it on the frozen highlands. Preferring solitude, this species does not form packs.",
    "pixelmon.snivy": "Snivy",
    "pixelmon.snivy.description": "Being exposed to sunlight makes its movements swifter. It uses vines more adeptly than its hands.",
    "pixelmon.snom": "Snom",
    "pixelmon.snom.description": "It spits out thread imbued with a frigid sort of energy and uses it to tie its body to branches, disguising itself as an icicle while it sleeps.",
    "pixelmon.snorlax": "Snorlax",
    "pixelmon.snorlax.description": "Snorlax's typical day consists of nothing more than eating and sleeping. It is such a docile Pokémon that there are children who use its expansive belly as a place to play.",
    "pixelmon.snorunt": "Snorunt",
    "pixelmon.snorunt.description": "Snorunt live in regions with heavy snowfall. In seasons without snow, such as spring and summer, this Pokémon steals away to live quietly among stalactites and stalagmites deep in caverns.",
    "pixelmon.snover": "Snover",
    "pixelmon.snover.description": "During cold seasons, it migrates to the mountain's lower reaches. It returns to the snow-covered summit in the spring.",
    "pixelmon.snubbull": "Snubbull",
    "pixelmon.snubbull.description": "By baring its fangs and making a scary face, Snubbull sends smaller Pokémon scurrying away in terror. However, this Pokémon seems a little sad at making its foes flee.",
    "pixelmon.sobble": "Sobble",
    "pixelmon.sobble.description": "When scared, this Pokémon cries. Its tears pack the chemical punch of 100 onions, and attackers won't be able to resist weeping.",
    "pixelmon.solgaleo": "Solgaleo",
    "pixelmon.solgaleo.description": "Sometimes the result of its opening an Ultra Wormhole is that energy and life-forms from other worlds are called here to this world.",
    "pixelmon.solosis": "Solosis",
    "pixelmon.solosis.description": "Because their bodies are enveloped in a special liquid, they are fine in any environment, no matter how severe.",
    "pixelmon.solrock": "Solrock",
    "pixelmon.solrock.description": "Solrock is a new species of Pokémon that is said to have fallen from space. It floats in air and moves silently. In battle, this Pokémon releases intensely bright light.",
    "pixelmon.spearow": "Spearow",
    "pixelmon.spearow.description": "Spearow has a very loud cry that can be heard over half a mile away. If its high, keening cry is heard echoing all around, it is a sign that they are warning each other of danger.",
    "pixelmon.spectrier": "Spectrier",
    "pixelmon.spectrier.description": "It probes its surroundings with all its senses save one—it doesn't use its sense of sight. Spectrier's kicks are said to separate soul from body.",
    "pixelmon.spewpa": "Spewpa",
    "pixelmon.spewpa.description": "It lives hidden within thicket shadows. When predators attack, it quickly bristles the fur covering its body in an effort to threaten them.",
    "pixelmon.spheal": "Spheal",
    "pixelmon.spheal.description": "Spheal is much faster rolling than walking to get around. When groups of this Pokémon eat, they all clap at once to show their pleasure. Because of this, their mealtimes are noisy.",
    "pixelmon.spinarak": "Spinarak",
    "pixelmon.spinarak.description": "The web spun by Spinarak can be considered its second nervous system. It is said that this Pokémon can determine what kind of prey is touching its web just by the tiny vibrations it feels through the web's strands.",
    "pixelmon.spinda": "Spinda",
    "pixelmon.spinda.description": "All the Spinda that exist in the world are said to have utterly unique spot patterns. The shaky, tottering steps of this Pokémon give it the appearance of dancing.",
    "pixelmon.spiritomb": "Spiritomb",
    "pixelmon.spiritomb.description": "A Pokémon that was formed by 108 spirits. It is bound to a fissure in an Odd Keystone.",
    "pixelmon.spoink": "Spoink",
    "pixelmon.spoink.description": "Spoink bounces around on its tail. The shock of its bouncing makes its heart pump. As a result, this Pokémon cannot afford to stop bouncing—if it stops, its heart will stop.",
    "pixelmon.spritzee": "Spritzee",
    "pixelmon.spritzee.description": "It emits a scent that enraptures those who smell it. This fragrance changes depending on what it has eaten.",
    "pixelmon.squirtle": "Squirtle",
    "pixelmon.squirtle.description": "Squirtle’s shell is not merely used for protection. The shell’s rounded shape and the grooves on its surface help minimize resistance in water, enabling this Pokémon to swim at high speeds.",
    "pixelmon.stakataka": "Stakataka",
    "pixelmon.stakataka.description": "When stone walls started moving and attacking, the brute's true identity was this mysterious life-form, which brings to mind an Ultra Beast.",
    "pixelmon.stantler": "Stantler",
    "pixelmon.stantler.description": "Stantler's magnificent antlers were traded at high prices as works of art. As a result, this Pokémon was hunted close to extinction by those who were after the priceless antlers.",
    "pixelmon.staraptor": "Staraptor",
    "pixelmon.staraptor.description": "The muscles in its wings and legs are strong. It can easily fly while gripping a small Pokémon.",
    "pixelmon.staravia": "Staravia",
    "pixelmon.staravia.description": "They maintain huge flocks, although fierce scuffles break out between various flocks.",
    "pixelmon.starly": "Starly",
    "pixelmon.starly.description": "They flock in great numbers. Though small, they flap their wings with great power.",
    "pixelmon.starmie": "Starmie",
    "pixelmon.starmie.description": "Starmie's center section-the core-glows brightly in seven colors. Because of its luminous nature, this Pokémon has been given the nickname \"the gem of the sea.\"",
    "pixelmon.staryu": "Staryu",
    "pixelmon.staryu.description": "Staryu's center section has an organ called the core that shines bright red. If you go to a beach toward the end of summer, the glowing cores of these Pokémon look like the stars in the sky.",
    "pixelmon.steelix": "Steelix",
    "pixelmon.steelix.description": "Steelix lives even further underground than Onix. This Pokémon is known to dig toward the earth's core. There are records of this Pokémon reaching a depth of over six-tenths of a mile underground.",
    "pixelmon.steenee": "Steenee",
    "pixelmon.steenee.description": "It’s protected by its hard sepals, so it plays with bird Pokémon without worry. They peck it relentlessly, but it doesn’t care.",
    "pixelmon.stonjourner": "Stonjourner",
    "pixelmon.stonjourner.description": "It stands in grasslands, watching the sun's descent from zenith to horizon. This Pokémon has a talent for delivering dynamic kicks.",
    "pixelmon.stoutland": "Stoutland",
    "pixelmon.stoutland.description": "It rescues people stranded by blizzards in the mountains. Its shaggy fur shields it from the cold.",
    "pixelmon.stufful": "Stufful",
    "pixelmon.stufful.description": "It boasts power enough to split large trees in half. The organ on its rear releases an odor that it uses to communicate with others of its kind.",
    "pixelmon.stunfisk": "Stunfisk",
    "pixelmon.stunfisk.description": "Its skin is very hard, so it is unhurt even if stepped on by sumo wrestlers. It smiles when transmitting electricity.",
    "pixelmon.stunky": "Stunky",
    "pixelmon.stunky.description": "It sprays a foul fluid from its rear. Its stench spreads over a mile radius, driving Pokémon away.",
    "pixelmon.sudowoodo": "Sudowoodo",
    "pixelmon.sudowoodo.description": "Sudowoodo camouflages itself as a tree to avoid being attacked by enemies. However, because its hands remain green throughout the year, the Pokémon is easily identified as a fake during the winter.",
    "pixelmon.suicune": "Suicune",
    "pixelmon.suicune.description": "Suicune embodies the compassion of a pure spring of water. It runs across the land with gracefulness. This Pokémon has the power to purify dirty water.",
    "pixelmon.sunflora": "Sunflora",
    "pixelmon.sunflora.description": "Sunflora converts solar energy into nutrition. It moves around actively in the daytime when it is warm. It stops moving as soon as the sun goes down for the night.",
    "pixelmon.sunkern": "Sunkern",
    "pixelmon.sunkern.description": "Sunkern tries to move as little as it possibly can. It does so because it tries to conserve all the nutrients it has stored in its body for its evolution. It will not eat a thing, subsisting only on morning dew.",
    "pixelmon.surskit": "Surskit",
    "pixelmon.surskit.description": "From the tips of its feet, Surskit secretes an oil that enables it to walk on water as if it were skating. This Pokémon feeds on microscopic organisms in ponds and lakes.",
    "pixelmon.swablu": "Swablu",
    "pixelmon.swablu.description": "Swablu has light and fluffy wings that are like cottony clouds. This Pokémon is not frightened of people. It lands on the heads of people and sits there like a cotton-fluff hat.",
    "pixelmon.swadloon": "Swadloon",
    "pixelmon.swadloon.description": "Forests where Swadloon live have superb foliage because the nutrients they make from fallen leaves nourish the plant life.",
    "pixelmon.swalot": "Swalot",
    "pixelmon.swalot.description": "When Swalot spots prey, it spurts out a hideously toxic fluid from its pores and sprays the target. Once the prey has weakened, this Pokémon gulps it down whole with its cavernous mouth.",
    "pixelmon.swampert": "Swampert",
    "pixelmon.swampert.description": "Swampert is very strong. It has enough power to easily drag a boulder weighing more than a ton. This Pokémon also has powerful vision that lets it see even in murky water.",
    "pixelmon.swanna": "Swanna",
    "pixelmon.swanna.description": "Despite their elegant appearance, they can flap their wings strongly and fly for thousands of miles.",
    "pixelmon.swellow": "Swellow",
    "pixelmon.swellow.description": "Swellow flies high above our heads, making graceful arcs in the sky. This Pokémon dives at a steep angle as soon as it spots its prey. The hapless prey is tightly grasped by Swellow’s clawed feet, preventing escape.",
    "pixelmon.swinub": "Swinub",
    "pixelmon.swinub.description": "Swinub roots for food by rubbing its snout against the ground. Its favorite food is a mushroom that grows under the cover of dead grass. This Pokémon occasionally roots out hot springs.",
    "pixelmon.swirlix": "Swirlix",
    "pixelmon.swirlix.description": "To entangle its opponents in battle, it extrudes white threads as sweet and sticky as cotton candy.",
    "pixelmon.swoobat": "Swoobat",
    "pixelmon.swoobat.description": "It shakes its tail vigorously when it emits ultrasonic waves strong enough to reduce concrete to rubble.",
    "pixelmon.sylveon": "Sylveon",
    "pixelmon.sylveon.description": "It sends a soothing aura from its ribbonlike feelers to calm fights.",
    "pixelmon.taillow": "Taillow",
    "pixelmon.taillow.description": "Taillow courageously stands its ground against foes, however strong they may be. This gutsy Pokémon will remain defiant even after a loss. On the other hand, it cries loudly if it becomes hungry.",
    "pixelmon.talonflame": "Talonflame",
    "pixelmon.talonflame.description": "In the fever of an exciting battle, it showers embers from the gaps between its feathers and takes to the air.",
    "pixelmon.tangela": "Tangela",
    "pixelmon.tangela.description": "Tangela's vines snap off easily if they are grabbed. This happens without pain, allowing it to make a quick getaway. The lost vines are replaced by newly grown vines the very next day.",
    "pixelmon.tangrowth": "Tangrowth",
    "pixelmon.tangrowth.description": "It ensnares prey by extending arms made of vines. Losing arms to predators does not trouble it.",
    "pixelmon.tapubulu": "Tapu Bulu",
    "pixelmon.tapubulu.description": "Although it’s called a guardian deity, it’s violent enough to crush anyone it sees as an enemy.",
    "pixelmon.tapufini": "Tapu Fini",
    "pixelmon.tapufini.description": "This guardian deity of Poni Island manipulates water. Because it lives deep within a thick fog, it came to be both feared and revered.",
    "pixelmon.tapukoko": "Tapu Koko",
    "pixelmon.tapukoko.description": "Although it’s called a guardian deity, if a person or Pokémon puts it in a bad mood, it will become a malevolent deity and attack.",
    "pixelmon.tapulele": "Tapu Lele",
    "pixelmon.tapulele.description": "It heals the wounds of people and Pokémon by sprinkling them with its sparkling scales. This guardian deity is worshiped on Akala.",
    "pixelmon.tauros": "Tauros",
    "pixelmon.tauros.description": "This Pokémon is not satisfied unless it is rampaging at all times. If there is no opponent for Tauros to battle, it will charge at thick trees and knock them down to calm itself.",
    "pixelmon.teddiursa": "Teddiursa",
    "pixelmon.teddiursa.description": "This Pokémon likes to lick its palms that are sweetened by being soaked in honey. Teddiursa concocts its own honey by blending fruits and pollen collected by Beedrill.",
    "pixelmon.tentacool": "Tentacool",
    "pixelmon.tentacool.description": "Tentacool's body is largely composed of water. If it is removed from the sea, it dries up like parchment. If this Pokémon happens to become dehydrated, put it back into the sea.",
    "pixelmon.tentacruel": "Tentacruel",
    "pixelmon.tentacruel.description": "Tentacruel has large red orbs on its head. The orbs glow before lashing the vicinity with a harsh ultrasonic blast. This Pokémon's outburst creates rough waves around it.",
    "pixelmon.tepig": "Tepig",
    "pixelmon.tepig.description": "It can deftly dodge its foe's attacks while shooting fireballs from its nose. It roasts berries before it eats them.",
    "pixelmon.terrakion": "Terrakion",
    "pixelmon.terrakion.description": "Its charge is strong enough to break through a giant castle wall in one blow. This Pokémon is spoken of in legends.",
    "pixelmon.thievul": "Thievul",
    "pixelmon.thievul.description": "It secretly marks potential targets with a scent. By following the scent, it stalks its targets and steals from them when they least expect it.",
    "pixelmon.throh": "Throh",
    "pixelmon.throh.description": "When it tightens its belt, it becomes stronger. Wild Throh use vines to weave their own belts.",
    "pixelmon.thundurus": "Thundurus",
    "pixelmon.thundurus.description": "The spikes on its tail discharge immense bolts of lightning. It flies around the world firing off lightning bolts.",
    "pixelmon.thwackey": "Thwackey",
    "pixelmon.thwackey.description": "The faster a Thwackey can beat out a rhythm with its two sticks, the more respect it wins from its peers.",
    "pixelmon.timburr": "Timburr",
    "pixelmon.timburr.description": "These Pokémon appear at building sites and help out with construction. They always carry squared logs.",
    "pixelmon.tirtouga": "Tirtouga",
    "pixelmon.tirtouga.description": "About 100 million years ago, these Pokémon swam in oceans. It is thought they also went on land to attack prey.",
    "pixelmon.togedemaru": "Togedemaru",
    "pixelmon.togedemaru.description": "When it’s surprised or agitated, the 14 fur spikes on its back will stand up involuntarily.",
    "pixelmon.togekiss": "Togekiss",
    "pixelmon.togekiss.description": "As everyone knows, it visits peaceful regions, bringing them gifts of kindness and sweet blessings.",
    "pixelmon.togepi": "Togepi",
    "pixelmon.togepi.description": "As its energy, Togepi uses the positive emotions of compassion and pleasure exuded by people and Pokémon. This Pokémon then stores up feelings of happiness inside its shell, then shares them with others.",
    "pixelmon.togetic": "Togetic",
    "pixelmon.togetic.description": "Togetic is said to be a Pokémon that brings good fortune. When the Pokémon spots someone who is pure of heart, it is said to appear and share its happiness with that person.",
    "pixelmon.torchic": "Torchic",
    "pixelmon.torchic.description": "Torchic sticks with its Trainer, following behind with unsteady steps. This Pokémon breathes fire of over 1,800 degrees Fahrenheit, including fireballs that leave the foe scorched black.",
    "pixelmon.torkoal": "Torkoal",
    "pixelmon.torkoal.description": "Torkoal digs through mountains in search of coal. If it finds some, it fills hollow spaces on its shell with the coal and burns it. If it is attacked, this Pokémon spouts thick black smoke to beat a retreat.",
    "pixelmon.tornadus": "Tornadus",
    "pixelmon.tornadus.description": "The lower half of its body is wrapped in a cloud of energy. It zooms through the sky at 200 mph.",
    "pixelmon.torracat": "Torracat",
    "pixelmon.torracat.description": "It can act spoiled if it grows close to its Trainer. A powerful Pokémon, its sharp claws can leave its Trainer’s whole body covered in scratches.",
    "pixelmon.torterra": "Torterra",
    "pixelmon.torterra.description": "Ancient people imagined that beneath the ground, a gigantic Torterra dwelled.",
    "pixelmon.totodile": "Totodile",
    "pixelmon.totodile.description": "Despite the smallness of its body, Totodile's jaws are very powerful. While the Pokémon may think it is just playfully nipping, its bite has enough power to cause serious injury.",
    "pixelmon.toucannon": "Toucannon",
    "pixelmon.toucannon.description": "They smack beaks with others of their kind to communicate. The strength and number of hits tell each other how they feel.",
    "pixelmon.toxapex": "Toxapex",
    "pixelmon.toxapex.description": "To attack, this Pokémon sends toxic spikes flying at its enemies. Ones that come close get mown down by the claws on its feet.",
    "pixelmon.toxel": "Toxel",
    "pixelmon.toxel.description": "It stores poison in an internal poison sac and secretes that poison through its skin. If you touch this Pokémon, a tingling sensation follows.",
    "pixelmon.toxicroak": "Toxicroak",
    "pixelmon.toxicroak.description": "It has a poison sac at its throat. When it croaks, the stored poison is churned for greater potency.",
    "pixelmon.toxtricity": "Toxtricity",
    "pixelmon.toxtricity.description": "When this Pokémon sounds as if it's strumming a guitar, it's actually clawing at the protrusions on its chest to generate electricity.",
    "pixelmon.tranquill": "Tranquill",
    "pixelmon.tranquill.description": "Many people believe that, deep in the forest where Tranquill live, there is a peaceful place where there is no war.",
    "pixelmon.trapinch": "Trapinch",
    "pixelmon.trapinch.description": "Trapinch’s nest is a sloped, bowl-like pit dug in sand. This Pokémon patiently waits for prey to tumble down the pit. Its giant jaws have enough strength to crush even boulders.",
    "pixelmon.treecko": "Treecko",
    "pixelmon.treecko.description": "Treecko has small hooks on the bottom of its feet that enable it to scale vertical walls. This Pokémon attacks by slamming foes with its thick tail.",
    "pixelmon.trevenant": "Trevenant",
    "pixelmon.trevenant.description": "It can control trees at will. It will trap people who harm the forest, so they can never leave.",
    "pixelmon.tropius": "Tropius",
    "pixelmon.tropius.description": "The bunches of fruit around Tropius’s neck are very popular with children. This Pokémon loves fruit, and eats it continuously. Apparently, its love for fruit resulted in its own outgrowth of fruit.",
    "pixelmon.trubbish": "Trubbish",
    "pixelmon.trubbish.description": "The combination of garbage bags and industrial waste caused the chemical reaction that created this Pokémon.",
    "pixelmon.trumbeak": "Trumbeak",
    "pixelmon.trumbeak.description": "It can bend the tip of its beak to produce over a hundred different cries at will.",
    "pixelmon.tsareena": "Tsareena",
    "pixelmon.tsareena.description": "A master of grand and beautiful kicks, it can knock out even kickboxing champions with a single blow.",
    "pixelmon.turtonator": "Turtonator",
    "pixelmon.turtonator.description": "It lives in volcanoes and eats sulfur and other minerals. Materials from the food it eats form the basis of its explosive shell.",
    "pixelmon.turtwig": "Turtwig",
    "pixelmon.turtwig.description": "Photosynthesis occurs across its body under the sun. The shell on its back is actually hardened soil.",
    "pixelmon.tympole": "Tympole",
    "pixelmon.tympole.description": "By vibrating its cheeks, it emits sound waves imperceptible to humans and warns others of danger.",
    "pixelmon.tynamo": "Tynamo",
    "pixelmon.tynamo.description": "While one alone doesn't have much power, a chain of many Tynamo can be as powerful as lightning.",
    "pixelmon.typenull": "Type: Null",
    "pixelmon.typenull.description": "A Pokémon weapon developed for a specific mission, it went berserk during an experiment, so it was cryogenically frozen.",
    "pixelmon.typhlosion": "Typhlosion",
    "pixelmon.typhlosion.description": "Typhlosion obscures itself behind a shimmering heat haze that it creates using its intensely hot flames. This Pokémon creates blazing explosive blasts that burn everything to cinders.",
    "pixelmon.tyranitar": "Tyranitar",
    "pixelmon.tyranitar.description": "Tyranitar is so overwhelmingly powerful, it can bring down a whole mountain to make its nest. This Pokémon wanders about in mountains seeking new opponents to fight.",
    "pixelmon.tyrantrum": "Tyrantrum",
    "pixelmon.tyrantrum.description": "Thanks to its gargantuan jaws, which could shred thick metal plates as if they were paper, it was invincible in the ancient world it once inhabited.",
    "pixelmon.tyrogue": "Tyrogue",
    "pixelmon.tyrogue.description": "Tyrogue becomes stressed out if it does not get to train every day. When raising this Pokémon, the Trainer must establish and uphold various training methods.",
    "pixelmon.tyrunt": "Tyrunt",
    "pixelmon.tyrunt.description": "This Pokémon was restored from a fossil. If something happens that it doesn't like, it throws a tantrum and runs wild.",
    "pixelmon.umbreon": "Umbreon",
    "pixelmon.umbreon.description": "Umbreon evolved as a result of exposure to the moon's waves. It hides silently in darkness and waits for its foes to make a move. The rings on its body glow when it leaps to attack.",
    "pixelmon.unfezant": "Unfezant",
    "pixelmon.unfezant.description": "Males swing their head plumage to threaten opponents. The females' flying abilities surpass those of the males.",
    "pixelmon.unown": "Unown",
    "pixelmon.unown.description": "This Pokémon is shaped like ancient writing. It is a mystery as to which came first, the ancient writings or the various Unown. Research into this topic is ongoing but nothing is known.",
    "pixelmon.ursaluna": "Ursaluna",
    "pixelmon.ursaluna.description": "It was Hisui's swampy terrain that gave Ursaluna its burly physique and newfound capacity to manipulate peat at will.",
    "pixelmon.ursaring": "Ursaring",
    "pixelmon.ursaring.description": "In the forests inhabited by Ursaring, it is said that there are many streams and towering trees where they gather food. This Pokémon walks through its forest gathering food every day.",
    "pixelmon.urshifu": "Urshifu",
    "pixelmon.urshifu.description": "This form of Urshifu is a strong believer in the one-hit KO. Its strategy is to leap in close to foes and land a devastating blow with a hardened fist.",
    "pixelmon.uxie": "Uxie",
    "pixelmon.uxie.description": "Known as \"The Being of Knowledge.\" It is said that it can wipe out the memory of those who see its eyes.",
    "pixelmon.vanillish": "Vanillish",
    "pixelmon.vanillish.description": "They cool down the surrounding air and create ice particles, which they use to freeze their foes.",
    "pixelmon.vanillite": "Vanillite",
    "pixelmon.vanillite.description": "The temperature of their breath is -58 degrees Fahrenheit. They create snow crystals and make snow fall in the areas around them.",
    "pixelmon.vanilluxe": "Vanilluxe",
    "pixelmon.vanilluxe.description": "If both heads get angry simultaneously, this Pokémon expels a blizzard, burying everything in snow.",
    "pixelmon.vaporeon": "Vaporeon",
    "pixelmon.vaporeon.description": "Vaporeon underwent a spontaneous mutation and grew fins and gills that allow it to live underwater. This Pokémon has the ability to freely control water.",
    "pixelmon.venipede": "Venipede",
    "pixelmon.venipede.description": "It discovers what is going on around it by using the feelers on its head and tail. It is brutally aggressive.",
    "pixelmon.venomoth": "Venomoth",
    "pixelmon.venomoth.description": "Venomoth is nocturnal—it is a Pokémon that only becomes active at night. Its favorite prey are small insects that gather around streetlights, attracted by the light in the darkness.",
    "pixelmon.venonat": "Venonat",
    "pixelmon.venonat.description": "Venonat is said to have evolved with a coat of thin, stiff hair that covers its entire body for protection. It possesses large eyes that never fail to spot even miniscule prey.",
    "pixelmon.venusaur": "Venusaur",
    "pixelmon.venusaur.description": "There is a large flower on Venusaur's back. The flower is said to take on vivid colors if it gets plenty of nutrition and sunlight. The flower’s aroma soothes the emotions of people.",
    "pixelmon.vespiquen": "Vespiquen",
    "pixelmon.vespiquen.description": "It houses its colony in cells in its body and releases various pheromones to make those grubs do its bidding.",
    "pixelmon.vibrava": "Vibrava",
    "pixelmon.vibrava.description": "To make prey faint, Vibrava generates ultrasonic waves by vigorously making its two wings vibrate. This Pokémon’s ultrasonic waves are so powerful, they can bring on headaches in people.",
    "pixelmon.victini": "Victini",
    "pixelmon.victini.description": "This Pokémon brings victory. It is said that Trainers with Victini always win, regardless of the type of encounter.",
    "pixelmon.victreebel": "Victreebel",
    "pixelmon.victreebel.description": "Victreebel has a long vine that extends from its head. This vine is waved and flicked about as if it were an animal to attract prey. When an unsuspecting prey draws near, this Pokémon swallows it whole.",
    "pixelmon.vigoroth": "Vigoroth",
    "pixelmon.vigoroth.description": "Vigoroth is always itching and agitated to go on a wild rampage. It simply can’t tolerate sitting still for even a minute. This Pokémon’s stress level rises if it can’t be moving constantly.",
    "pixelmon.vikavolt": "Vikavolt",
    "pixelmon.vikavolt.description": "It has an organ that generates electricity in its abdomen. It concentrates energy in its strong jaws and fires off powerful jolts of electricity.",
    "pixelmon.vileplume": "Vileplume",
    "pixelmon.vileplume.description": "Vileplume's toxic pollen triggers atrocious allergy attacks. That's why it is advisable never to approach any attractive flowers in a jungle, however pretty they may be.",
    "pixelmon.virizion": "Virizion",
    "pixelmon.virizion.description": "Its head sprouts horns as sharp as blades. Using whirlwind-like movements, it confounds and swiftly cuts opponents.",
    "pixelmon.vivillon": "Vivillon",
    "pixelmon.vivillon.description": "Vivillon with many different patterns are found all over the world. These patterns are affected by the climate of their habitat.",
    "pixelmon.volbeat": "Volbeat",
    "pixelmon.volbeat.description": "With the arrival of night, Volbeat emits light from its tail. It communicates with others by adjusting the intensity and flashing of its light. This Pokémon is attracted by the sweet aroma of Illumise.",
    "pixelmon.volcanion": "Volcanion",
    "pixelmon.volcanion.description": "It lets out billows of steam and disappears into the dense fog. It's said to live in mountains where humans do not tread.",
    "pixelmon.volcarona": "Volcarona",
    "pixelmon.volcarona.description": "A sea of fire engulfs the surroundings of their battles, since they use their six wings to scatter their ember scales.",
    "pixelmon.voltorb": "Voltorb",
    "pixelmon.voltorb.description": "Voltorb was first sighted at a company that manufactures Poké Balls. The link between that sighting and the fact that this Pokémon looks very similar to a Poké Ball remains a mystery.",
    "pixelmon.vullaby": "Vullaby",
    "pixelmon.vullaby.description": "Its wings are too tiny to allow it to fly. As the time approaches for it to evolve, it discards the bones it was wearing.",
    "pixelmon.vulpix": "Vulpix",
    "pixelmon.vulpix.description": "At the time of its birth, Vulpix has one white tail. The tail separates into six if this Pokémon receives plenty of love from its trainer. The six tails become magnificently curled.",
    "pixelmon.wailmer": "Wailmer",
    "pixelmon.wailmer.description": "Wailmer’s nostrils are located above its eyes. This playful Pokémon loves to startle people by forcefully snorting out seawater it stores inside its body out of its nostrils.",
    "pixelmon.wailord": "Wailord",
    "pixelmon.wailord.description": "Wailord is the largest of all identified Pokémon up to now. This giant Pokémon swims languorously in the vast open sea, eating massive amounts of food at once with its enormous mouth.",
    "pixelmon.walrein": "Walrein",
    "pixelmon.walrein.description": "Walrein’s two massively developed tusks can totally shatter blocks of ice weighing 10 tons with one blow. This Pokémon’s thick coat of blubber insulates it from subzero temperatures.",
    "pixelmon.wartortle": "Wartortle",
    "pixelmon.wartortle.description": "Its tail is large and covered with a rich, thick fur. The tail becomes increasingly deeper in color as Wartortle ages. The scratches on its shell are evidence of this Pokémon’s toughness as a battler.",
    "pixelmon.watchog": "Watchog",
    "pixelmon.watchog.description": "Using luminescent matter, it makes its eyes and body glow and stuns attacking opponents.",
    "pixelmon.weavile": "Weavile",
    "pixelmon.weavile.description": "It lives in snowy regions. It carves patterns in trees with its claws as a signal to others.",
    "pixelmon.weedle": "Weedle",
    "pixelmon.weedle.description": "Weedle has an extremely acute sense of smell. It is capable of distinguishing its favorite kinds of leaves from those it dislikes just by sniffing with its big red proboscis (nose).",
    "pixelmon.weepinbell": "Weepinbell",
    "pixelmon.weepinbell.description": "Weepinbell has a large hook on its rear end. At night, the Pokémon hooks on to a tree branch and goes to sleep. If it moves around in its sleep, it may wake up to find itself on the ground.",
    "pixelmon.weezing": "Weezing",
    "pixelmon.weezing.description": "Weezing loves the gases given off by rotted kitchen garbage. This Pokémon will find a dirty, unkempt house and make it its home. At night, when the people in the house are asleep, it will go through the trash.",
    "pixelmon.whimsicott": "Whimsicott",
    "pixelmon.whimsicott.description": "They appear along with whirlwinds. They pull pranks, such as moving furniture and leaving balls of cotton in homes.",
    "pixelmon.whirlipede": "Whirlipede",
    "pixelmon.whirlipede.description": "Protected by a hard shell, it spins its body like a wheel and crashes furiously into its enemies.",
    "pixelmon.whiscash": "Whiscash",
    "pixelmon.whiscash.description": "Whiscash is extremely territorial. Just one of these Pokémon will claim a large pond as its exclusive territory. If a foe approaches it, it thrashes about and triggers a massive earthquake.",
    "pixelmon.whismur": "Whismur",
    "pixelmon.whismur.description": "Normally, Whismur’s voice is very quiet—it is barely audible even if one is paying close attention. However, if this Pokémon senses danger, it starts crying at an earsplitting volume.",
    "pixelmon.wigglytuff": "Wigglytuff",
    "pixelmon.wigglytuff.description": "Wigglytuff has large, saucerlike eyes. The surfaces of its eyes are always covered with a thin layer of tears. If any dust gets in this Pokémon's eyes, it is quickly washed away.",
    "pixelmon.wimpod": "Wimpod",
    "pixelmon.wimpod.description": "It will pick up anything it finds on the ground. Sometimes it finds coins, so Murkrow and Meowth will go after it.",
    "pixelmon.wingull": "Wingull",
    "pixelmon.wingull.description": "Wingull has the habit of carrying prey and valuables in its beak and hiding them in all sorts of locations. This Pokémon rides the winds and flies as if it were skating across the sky.",
    "pixelmon.wishiwashi": "Wishiwashi",
    "pixelmon.wishiwashi.description": "They’re weak, so they move in schools. However, they can also often be seen all alone, having strayed from the school.",
    "pixelmon.wobbuffet": "Wobbuffet",
    "pixelmon.wobbuffet.description": "If two or more Wobbuffet meet, they will turn competitive and try to outdo each other's endurance. However, they may try to see which one can endure the longest without food. Trainers need to beware of this habit.",
    "pixelmon.woobat": "Woobat",
    "pixelmon.woobat.description": "Its habitat is dark forests and caves. It emits ultrasonic waves from its nose to learn about its surroundings.",
    "pixelmon.wooloo": "Wooloo",
    "pixelmon.wooloo.description": "Its curly fleece is such an effective cushion that this Pokémon could fall off a cliff and stand right back up at the bottom, unharmed.",
    "pixelmon.wooper": "Wooper",
    "pixelmon.wooper.description": "Wooper usually lives in water. However, it occasionally comes out onto land in search of food. On land, it coats its body with a gooey, toxic film.",
    "pixelmon.wormadam": "Wormadam",
    "pixelmon.wormadam.description": "Its appearance changes depending on where it evolved. The materials on hand become a part of its body.",
    "pixelmon.wurmple": "Wurmple",
    "pixelmon.wurmple.description": "Using the spikes on its rear end, Wurmple peels the bark off trees and feeds on the sap that oozes out. This Pokémon's feet are tipped with suction pads that allow it to cling to glass without slipping.",
    "pixelmon.wynaut": "Wynaut",
    "pixelmon.wynaut.description": "Wynaut can always be seen with a big, happy smile on its face. Look at its tail to determine if it is angry. When angered, this Pokémon will be slapping the ground with its tail.",
    "pixelmon.wyrdeer": "Wyrdeer",
    "pixelmon.wyrdeer.description": "The black orbs shine with an uncanny light when the Pokémon is erecting invisible barriers. The fur shed from its beard retains heat well and is a highly useful material for winter clothing.",
    "pixelmon.xatu": "Xatu",
    "pixelmon.xatu.description": "Xatu stands rooted and still in one spot all day long. People believe that this Pokémon does so out of fear of the terrible things it has foreseen in the future.",
    "pixelmon.xerneas": "Xerneas",
    "pixelmon.xerneas.description": "Legends say it can share eternal life. It slept for a thousand years in the form of a tree before its revival.",
    "pixelmon.xerneasmoosecraft": "Moose's Xerneas",
    "pixelmon.xurkitree": "Xurkitree",
    "pixelmon.xurkitree.description": "They've been dubbed Ultra Beasts. Some of them stand unmoving, like trees, with their arms and legs stuck into the ground.",
    "pixelmon.yamask": "Yamask",
    "pixelmon.yamask.description": "These Pokémon arose from the spirits of people interred in graves. Each retains memories of its former life.",
    "pixelmon.yamper": "Yamper",
    "pixelmon.yamper.description": "This Pokémon is very popular as a herding dog in the Galar region. As it runs, it generates electricity from the base of its tail.",
    "pixelmon.yanma": "Yanma",
    "pixelmon.yanma.description": "Yanma is capable of seeing 360 degrees without having to move its eyes. It is a great flier that is adept at making sudden stops and turning midair. This Pokémon uses its flying ability to quickly chase down targeted prey.",
    "pixelmon.yanmega": "Yanmega",
    "pixelmon.yanmega.description": "It prefers to battle by biting apart foes' heads instantly while flying by at high speed.",
    "pixelmon.yungoos": "Yungoos",
    "pixelmon.yungoos.description": "Its stomach takes up most of its long torso. It’s a big eater, so the amount Trainers have to spend on its food is no laughing matter.",
    "pixelmon.yveltal": "Yveltal",
    "pixelmon.yveltal.description": "When this legendary Pokémon's wings and tail feathers spread wide and glow red, it absorbs the life force of living creatures.",
    "pixelmon.zacian": "Zacian",
    "pixelmon.zacian.description": "Known as a legendary hero, this Pokémon absorbs metal particles, transforming them into a weapon it uses to battle.",
    "pixelmon.zamazenta": "Zamazenta",
    "pixelmon.zamazenta.description": "In times past, it worked together with a king of the people to save the Galar region. It absorbs metal that it then uses in battle.",
    "pixelmon.zangoose": "Zangoose",
    "pixelmon.zangoose.description": "Memories of battling its archrival Seviper are etched into every cell of Zangoose’s body. This Pokémon adroitly dodges attacks with incredible agility.",
    "pixelmon.zapdos": "Zapdos",
    "pixelmon.zapdos.description": "Zapdos is a legendary bird Pokémon that has the ability to control electricity. It usually lives in thunderclouds. The Pokémon gains power if it is stricken by lightning bolts.",
    "pixelmon.zarude": "Zarude",
    "pixelmon.zarude.description": "Within dense forests, this Pokémon lives in a pack with others of its kind. It's incredibly aggressive, and the other Pokémon of the forest fear it.",
    "pixelmon.zebstrika": "Zebstrika",
    "pixelmon.zebstrika.description": "When this ill-tempered Pokémon runs wild, it shoots lightning from its mane in all directions.",
    "pixelmon.zekrom": "Zekrom",
    "pixelmon.zekrom.description": "This legendary Pokémon can scorch the world with lightning. It assists those who want to build an ideal world.",
    "pixelmon.zeraora": "Zeraora",
    "pixelmon.zeraora.description": "It electrifies its claws and tears its opponents apart with them. Even if they dodge its attack, they’ll be electrocuted by the flying sparks.",
    "pixelmon.zigzagoon": "Zigzagoon",
    "pixelmon.zigzagoon.description": "Zigzagoon restlessly wanders everywhere at all times. This Pokémon does so because it is very curious. It becomes interested in anything that it happens to see.",
    "pixelmon.zoroark": "Zoroark",
    "pixelmon.zoroark.description": "Each has the ability to fool a large group of people simultaneously. They protect their lair with illusory scenery.",
    "pixelmon.zorua": "Zorua",
    "pixelmon.zorua.description": "It changes so it looks like its foe, tricks it, and then uses that opportunity to flee.",
    "pixelmon.zubat": "Zubat",
    "pixelmon.zubat.description": "Zubat remains quietly unmoving in a dark spot during the bright daylight hours. It does so because prolonged exposure to the sun causes its body to become slightly burned.",
    "pixelmon.zweilous": "Zweilous",
    "pixelmon.zweilous.description": "The two heads do not get along. Whichever head eats more than the other gets to be the leader.",
    "pixelmon.zygarde": "Zygarde",
    "pixelmon.zygarde.description": "When the world's ecosystem falls into disarray, it appears and reveals its secret power.",

    "pixelmon.unimplemented.description": "This Pokémon is not implemented in Pixelmon yet.",

    "pixelmon.ricarro": "Ricarro",

    "pixelmon.palette.strawberry_vanilla_cream": "Strawberry Vanilla Cream",
    "pixelmon.palette.strawberry_ruby_cream": "Strawberry Ruby Cream",
    "pixelmon.palette.strawberry_matcha_cream": "Strawberry Matcha Cream",
    "pixelmon.palette.strawberry_mint_cream": "Strawberry Mint Cream",
    "pixelmon.palette.strawberry_lemon_cream": "Strawberry Lemon Cream",
    "pixelmon.palette.strawberry_salted_cream": "Strawberry Salted Cream",
    "pixelmon.palette.strawberry_ruby_swirl": "Strawberry Ruby Swirl",
    "pixelmon.palette.strawberry_caramel_swirl": "Strawberry Caramel Swirl",
    "pixelmon.palette.strawberry_rainbow_swirl": "Strawberry Rainbow Swirl",
    "pixelmon.palette.strawberry_shiny": "Shiny Strawberry",
    "pixelmon.palette.berry_vanilla_cream": "Berry Vanilla Cream",
    "pixelmon.palette.berry_ruby_cream": "Berry Ruby Cream",
    "pixelmon.palette.berry_matcha_cream": "Berry Matcha Cream",
    "pixelmon.palette.berry_mint_cream": "Berry Mint Cream",
    "pixelmon.palette.berry_lemon_cream": "Berry Lemon Cream",
    "pixelmon.palette.berry_salted_cream": "Berry Salted Cream",
    "pixelmon.palette.berry_ruby_swirl": "Berry Ruby Swirl",
    "pixelmon.palette.berry_caramel_swirl": "Berry Caramel Swirl",
    "pixelmon.palette.berry_rainbow_swirl": "Berry Rainbow Swirl",
    "pixelmon.palette.berry_shiny": "Shiny Berry",
    "pixelmon.palette.love_vanilla_cream": "Love Vanilla Cream",
    "pixelmon.palette.love_ruby_cream": "Love Ruby Cream",
    "pixelmon.palette.love_matcha_cream": "Love Matcha Cream",
    "pixelmon.palette.love_mint_cream": "Love Mint Cream",
    "pixelmon.palette.love_lemon_cream": "Love Lemon Cream",
    "pixelmon.palette.love_salted_cream": "Love Salted Cream",
    "pixelmon.palette.love_ruby_swirl": "Love Ruby Swirl",
    "pixelmon.palette.love_caramel_swirl": "Love Caramel Swirl",
    "pixelmon.palette.love_rainbow_swirl": "Love Rainbow Swirl",
    "pixelmon.palette.love_shiny": "Shiny Love",
    "pixelmon.palette.star_vanilla_cream": "Star Vanilla Cream",
    "pixelmon.palette.star_ruby_cream": "Star Ruby Cream",
    "pixelmon.palette.star_matcha_cream": "Star Matcha Cream",
    "pixelmon.palette.star_mint_cream": "Star Mint Cream",
    "pixelmon.palette.star_lemon_cream": "Star Lemon Cream",
    "pixelmon.palette.star_salted_cream": "Star Salted Cream",
    "pixelmon.palette.star_ruby_swirl": "Star Ruby Swirl",
    "pixelmon.palette.star_caramel_swirl": "Star Caramel Swirl",
    "pixelmon.palette.star_rainbow_swirl": "Star Rainbow Swirl",
    "pixelmon.palette.star_shiny": "Shiny Star",
    "pixelmon.palette.clover_vanilla_cream": "Clover Vanilla Cream",
    "pixelmon.palette.clover_ruby_cream": "Clover Ruby Cream",
    "pixelmon.palette.clover_matcha_cream": "Clover Matcha Cream",
    "pixelmon.palette.clover_mint_cream": "Clover Mint Cream",
    "pixelmon.palette.clover_lemon_cream": "Clover Lemon Cream",
    "pixelmon.palette.clover_salted_cream": "Clover Salted Cream",
    "pixelmon.palette.clover_ruby_swirl": "Clover Ruby Swirl",
    "pixelmon.palette.clover_caramel_swirl": "Clover Caramel Swirl",
    "pixelmon.palette.clover_rainbow_swirl": "Clover Rainbow Swirl",
    "pixelmon.palette.clover_shiny": "Shiny Clover",
    "pixelmon.palette.flower_vanilla_cream": "Flower Vanilla Cream",
    "pixelmon.palette.flower_ruby_cream": "Flower Ruby Cream",
    "pixelmon.palette.flower_matcha_cream": "Flower Matcha Cream",
    "pixelmon.palette.flower_mint_cream": "Flower Mint Cream",
    "pixelmon.palette.flower_lemon_cream": "Flower Lemon Cream",
    "pixelmon.palette.flower_salted_cream": "Flower Salted Cream",
    "pixelmon.palette.flower_ruby_swirl": "Flower Ruby Swirl",
    "pixelmon.palette.flower_caramel_swirl": "Flower Caramel Swirl",
    "pixelmon.palette.flower_rainbow_swirl": "Flower Rainbow Swirl",
    "pixelmon.palette.flower_shiny": "Shiny Flower",
    "pixelmon.palette.ribbon_vanilla_cream": "Ribbon Vanilla Cream",
    "pixelmon.palette.ribbon_ruby_cream": "Ribbon Ruby Cream",
    "pixelmon.palette.ribbon_matcha_cream": "Ribbon Matcha Cream",
    "pixelmon.palette.ribbon_mint_cream": "Ribbon Mint Cream",
    "pixelmon.palette.ribbon_lemon_cream": "Ribbon Lemon Cream",
    "pixelmon.palette.ribbon_salted_cream": "Ribbon Salted Cream",
    "pixelmon.palette.ribbon_ruby_swirl": "Ribbon Ruby Swirl",
    "pixelmon.palette.ribbon_caramel_swirl": "Ribbon Caramel Swirl",
    "pixelmon.palette.ribbon_rainbow_swirl": "Ribbon Rainbow Swirl",
    "pixelmon.palette.ribbon_shiny": "Shiny Ribbon",
    "pixelmon.palette.pumpkin": "Pumpkin Spice",
    "pixelmon.palette.pumpkin_shiny": "Shiny Pumpkin Spice",
    "pixelmon.palette.archipelago_shiny": "Shiny Archipelago",
    "pixelmon.palette.continental_shiny": "Shiny Continental",
    "pixelmon.palette.elegant_shiny": "Shiny Elegant",
    "pixelmon.palette.fancy_shiny": "Shiny Fancy",
    "pixelmon.palette.garden_shiny": "Shiny Garden",
    "pixelmon.palette.high_plains_shiny": "Shiny High Plains",
    "pixelmon.palette.icy_snow_shiny": "Shiny Icy Snow",
    "pixelmon.palette.jungle_shiny": "Shiny Jungle",
    "pixelmon.palette.marine_shiny": "Shiny Marine",
    "pixelmon.palette.meadow_shiny": "Shiny Meadow",
    "pixelmon.palette.modern_shiny": "Shiny Modern",
    "pixelmon.palette.monsoon_shiny": "Shiny Monsoon",
    "pixelmon.palette.ocean_shiny": "Shiny Ocean",
    "pixelmon.palette.poke_ball_shiny": "Shiny Poké Ball",
    "pixelmon.palette.polar_shiny": "Shiny Polar",
    "pixelmon.palette.river_shiny": "Shiny River",
    "pixelmon.palette.sandstorm_shiny": "Shiny Sandstorm",
    "pixelmon.palette.savanna_shiny": "Shiny Savanna",
    "pixelmon.palette.sun_shiny": "Shiny Sun",
    "pixelmon.palette.tundra_shiny": "Shiny Tundra",
    "pixelmon.palette.main_circular": "Primary Circular",
    "pixelmon.palette.secondary_circular": "Secondary Circular",
    "pixelmon.palette.dark": "Dark",
    "pixelmon.palette.none": "None",

    "pixelmon.arbok.form.normal": "Regenerative",
    "pixelmon.authentic.form.phony": "Phony",
    "pixelmon.authentic.form.antique": "Antique",
    "pixelmon.aegislash.form.shield": "Shield",
    "pixelmon.aegislash.form.blade": "Blade",
    "pixelmon.aegislash.form.shield_alter": "Alter Shield",
    "pixelmon.aegislash.form.blade_alter": "Alter Blade",
    "pixelmon.basculin.form.red": "Red",
    "pixelmon.basculin.form.blue": "Blue",
    "pixelmon.basculin.form.white": "White",
    "pixelmon.bidoof.form.normal": "Normal",
    "pixelmon.bidoof.form.sirdoofusiii": "Sir. Doof III",
    "pixelmon.burmy.form.plant": "Plant",
    "pixelmon.burmy.form.sandy": "Sandy",
    "pixelmon.burmy.form.trash": "Trash",
    "pixelmon.calyrex.form.ordinary": "Ordinary",
    "pixelmon.calyrex.form.ordinary.description": "Calyrex is a merciful Pokémon, capable of providing healing and blessings. It reigned over the Galar region in times of yore.",
    "pixelmon.calyrex.form.icerider": "Ice Rider",
    "pixelmon.calyrex.form.icerider.description": "It's said that this Pokémon once moved a large forest—and all the Pokémon living there—to a new location overnight.",
    "pixelmon.calyrex.form.shadowrider": "Shadow Rider",
    "pixelmon.calyrex.form.shadowrider.description": "It's said that Calyrex and a Pokémon that had bonded with it ran all across the Galar region to bring green to the wastelands.",
    "pixelmon.castform.form.normal": "Normal",
    "pixelmon.castform.form.ice": "Ice",
    "pixelmon.castform.form.rain": "Rain",
    "pixelmon.castform.form.sun": "Sun",
    "pixelmon.cherrim.form.overcast": "Overcast",
    "pixelmon.cherrim.form.sunshine": "Sunshine",
    "pixelmon.palette.normal": "Classic",
    "pixelmon.palette.irish": "Irish",
    "pixelmon.palette.diamonds": "Diamonds",
    "pixelmon.palette.clubs": "Spades",
    "pixelmon.palette.martian": "Martian",
    "pixelmon.palette.starry": "Starry",
    "pixelmon.palette.yellow_ringed": "Yellow-Ringed",
    "pixelmon.palette.red_ringed": "Red-Ringed",
    "pixelmon.palette.alien": "Alien",
    "pixelmon.cramorant.form.normal": "Normal",
    "pixelmon.cramorant.form.gulping": "Gulping",
    "pixelmon.cramorant.form.gorging": "Gorging",
    "pixelmon.darmanitan.form.standard": "Standard Mode",
    "pixelmon.darmanitan.form.zen": "Zen Mode",
    "pixelmon.darmanitan.form.galarian": "Galarian Standard Mode",
    "pixelmon.darmanitan.form.galarian_zen": "Galarian Zen Mode",
    "pixelmon.deoxys.form.normal": "Normal",
    "pixelmon.deoxys.form.attack": "Attack",
    "pixelmon.deoxys.form.defense": "Defense",
    "pixelmon.deoxys.form.speed": "Speed",
    "pixelmon.deoxys.form.sus": "Sus",
    "pixelmon.dragonite.form.creator": "Creator",
    "pixelmon.eiscue.form.ice_face": "Ice Face",
    "pixelmon.eiscue.form.noice_face": "Noice Face",
    "pixelmon.eternatus.form.ordinary": "Ordinary",
    "pixelmon.eternatus.form.ordinary.description": "The core on its chest absorbs energy emanating from the lands of the Galar region. This energy is what allows Eternatus to stay active.",
    "pixelmon.eternatus.form.eternamax": "True Eternamax",
    "pixelmon.eternatus.form.eternamax.description": "Infinite amounts of energy pour from this Pokémon's enlarged core, warping the surrounding space-time.",
    "pixelmon.eternatus.form.eternamaxcosmetic": "Eternamax",
    "pixelmon.eternatus.form.eternamaxcosmetic.description": "Infinite amounts of energy pour from this Pokémon's enlarged core, warping the surrounding space-time.",
    "pixelmon.feebas.form.normal": "Normal",
    "pixelmon.palette.karp": "Karp",
    "pixelmon.palette.red": "Red",
    "pixelmon.palette.yellow": "Yellow",
    "pixelmon.palette.orange": "Orange",
    "pixelmon.palette.blue": "Blue",
    "pixelmon.palette.white": "White",
    "pixelmon.palette.redshiny": "Shiny Red",
    "pixelmon.palette.yellowshiny": "Shiny Yellow",
    "pixelmon.palette.orangeshiny": "Shiny Orange",
    "pixelmon.palette.blueshiny": "Shiny Blue",
    "pixelmon.palette.whiteshiny": "Shiny White",
    "pixelmon.floette.form.az": "AZ",
    "pixelmon.gastrodon.form.east": "East",
    "pixelmon.gastrodon.form.west": "West",
    "pixelmon.genesect.form.normal": "Normal",
    "pixelmon.genesect.form.burn": "Burn",
    "pixelmon.genesect.form.chill": "Chill",
    "pixelmon.genesect.form.douse": "Douse",
    "pixelmon.genesect.form.shock": "Shock",
    "pixelmon.giratina.form.altered": "Altered",
    "pixelmon.giratina.form.origin": "Origin",
    "pixelmon.greninja.form.base": "Normal",
    "pixelmon.greninja.form.battle_bond": "Battle Bond",
    "pixelmon.greninja.form.ash": "Ash-Greninja",
    "pixelmon.greninja.form.zombie": "Zombie",
    "pixelmon.greninja.form.zombie_battle_bond": "Battle Bond Zombie",
    "pixelmon.greninja.form.ash_zombie": "Zombie Ash-Greninja",
    "pixelmon.greninja.form.alter": "Alter",
    "pixelmon.greninja.form.alter_battle_bond": "Battle Bond Alter",
    "pixelmon.greninja.form.ash_alter": "Ash-Greninja Alter",
    "pixelmon.groudon.form.meta": "Meta",
    "pixelmon.hoopa.form.confined": "Confined",
    "pixelmon.hoopa.form.unbound": "Unbound",
    "pixelmon.indeedee.form.female": "Female",
    "pixelmon.keldeo.form.ordinary": "Ordinary",
    "pixelmon.keldeo.form.resolute": "Resolute",
    "pixelmon.kyurem.form.normal": "Normal",
    "pixelmon.kyurem.form.black": "Black",
    "pixelmon.kyurem.form.white": "White",
    "pixelmon.lunatone.crescent": "Crescent",
    "pixelmon.lunatone.full": "Full",
    "pixelmon.lunatone.gibbous": "Gibbous",
    "pixelmon.lunatone.quarter": "Quarter",
    "pixelmon.lycanroc.form.midday": "Midday",
    "pixelmon.lycanroc.form.midnight": "Midnight",
    "pixelmon.lycanroc.form.dusk": "Dusk",
    "pixelmon.palette.skelly": "Skelly",
    "pixelmon.palette.roasted": "Roasted",
    "pixelmon.palette.calico_orange_white": "Calico (Orange and White)",
    "pixelmon.palette.calico_orange_white_black": "Calico (Orange, White, and Black)",
    "pixelmon.palette.calico_white_orange": "Calico (White and Orange)",
    "pixelmon.palette.calico_orange_gold": "Calico (Orange and Gold)",
    "pixelmon.palette.orange_twotone": "Orange Two-Tone",
    "pixelmon.palette.orange_orca": "Orange Orca",
    "pixelmon.palette.orange_dapples": "Orange Dapples",
    "pixelmon.palette.pink_twotone": "Pink Two-Tone",
    "pixelmon.palette.pink_orca": "Pink Orca",
    "pixelmon.palette.pink_dapples": "Pink Dapples",
    "pixelmon.palette.gray_bubbles": "Gray Bubbles",
    "pixelmon.palette.gray_diamonds": "Gray Diamonds",
    "pixelmon.palette.gray_patches": "Gray Patches",
    "pixelmon.palette.purple_bubbles": "Purple Bubbles",
    "pixelmon.palette.purple_diamonds": "Purple Diamonds",
    "pixelmon.palette.purple_patches": "Purple Patches",
    "pixelmon.palette.apricot_tiger": "Apricot Tiger",
    "pixelmon.palette.apricot_zebra": "Apricot Zebra",
    "pixelmon.palette.apricot_stripes": "Apricot Stripes",
    "pixelmon.palette.brown_tiger": "Brown Tiger",
    "pixelmon.palette.brown_zebra": "Brown Zebra",
    "pixelmon.palette.brown_stripes": "Brown Stripes",
    "pixelmon.palette.white_forehead": "White Forehead",
    "pixelmon.palette.white_mask": "White Mask",
    "pixelmon.palette.black_forehead": "Black Forehead",
    "pixelmon.palette.black_mask": "Black Mask",
    "pixelmon.palette.blue_saucy": "Saucy Blue",
    "pixelmon.palette.blue_raindrops": "Blue Raindrops",
    "pixelmon.palette.violet_saucy": "Saucy Violet",
    "pixelmon.palette.violet_raindrops": "Violet Raindrops",
    "pixelmon.marshadow.form.zenith": "Zenith",
    "pixelmon.meloetta.form.aria": "Aria",
    "pixelmon.meloetta.form.pirouette": "Pirouette",
    "pixelmon.minior.form.meteor": "Meteor",
    "pixelmon.minior.form.core": "Core",
    "pixelmon.palette.red_core": "Red Core",
    "pixelmon.palette.orange_core": "Orange Core",
    "pixelmon.palette.yellow_core": "Yellow Core",
    "pixelmon.palette.green_core": "Green Core",
    "pixelmon.palette.blue_core": "Blue Core",
    "pixelmon.palette.indigo_core": "Indigo Core",
    "pixelmon.palette.violet_core": "Violet Core",
    "pixelmon.mimikyu.form.disguised": "Disguised",
    "pixelmon.mimikyu.form.busted": "Busted",
    "pixelmon.mimikyu.form.disguised_spirit": "Disguised",
    "pixelmon.mimikyu.form.busted_spirit": "Busted",
    "pixelmon.missingno.form.missingno": "MissingNo",
    "pixelmon.missingno.form.regidrago": "Regidrago",
    "pixelmon.missingno.form.regieleki": "Regieleki",
    "pixelmon.morpeko.form.hangry": "Hangry",
    "pixelmon.morpeko.form.fullbelly": "Full Belly",
    "pixelmon.necrozma.form.normal": "Normal",
    "pixelmon.necrozma.form.dusk": "Dusk",
    "pixelmon.necrozma.form.dawn": "Dawn",
    "pixelmon.necrozma.form.ultra": "Ultra",
    "pixelmon.oricorio.form.baile": "Baile",
    "pixelmon.oricorio.form.pompom": "Pompom",
    "pixelmon.oricorio.form.pau": "Pau",
    "pixelmon.oricorio.form.sensu": "Sensu",
    "pixelmon.pichu.form.normal": "Normal",
    "pixelmon.pichu.form.spiky": "Spiky",
    "pixelmon.pikachu.form.belle": "Belle",
    "pixelmon.pikachu.form.libre": "Libre",
    "pixelmon.pikachu.form.phd": "Ph.D",
    "pixelmon.pikachu.form.popstar": "Popstar",
    "pixelmon.pikachu.form.rockstar": "Rockstar",
    "pixelmon.pikachu.form.cosplay": "Cosplay",
    "pixelmon.rotom.form.normal": "Normal",
    "pixelmon.rotom.form.heat": "Heat",
    "pixelmon.rotom.form.wash": "Wash",
    "pixelmon.rotom.form.frost": "Frost",
    "pixelmon.rotom.form.fan": "Fan",
    "pixelmon.rotom.form.mow": "Mow",
    "pixelmon.sandile.form.normal": "Sandile",
    "pixelmon.palette.blocky": "The OG Sandile",
    "pixelmon.shaymin.form.land": "Land",
    "pixelmon.shaymin.form.sky": "Sky",
    "pixelmon.shellos.form.east": "East",
    "pixelmon.shellos.form.west": "West",
    "pixelmon.palette.gray_bubbles": "Gray Bubbles",
    "pixelmon.palette.gray_diamonds": "Gray Diamonds",
    "pixelmon.palette.purple_bubbles": "Purple Bubbles",
    "pixelmon.palette.purple_diamonds": "Purple Diamonds",
    "pixelmon.palette.moons": "Moons",
    "pixelmon.palette.sun": "Sun",
    "pixelmon.palette.violet_saucy": "Saucy Violet",
    "pixelmon.palette.brown_stripes": "Brown Stripes",
    "pixelmon.palette.apricot_saucy": "Saucy Apricot",
    "pixelmon.palette.blue_stripes": "Blue Stripes",
    "pixelmon.palette.golde": "Eastern Gold",
    "pixelmon.palette.goldw": "Western Gold",
    "pixelmon.palette.normal": "Normal",
    "pixelmon.palette.pokeball": "Pokéball",
    "pixelmon.palette.duskball": "Dusk Ball",
    "pixelmon.palette.loveball": "Love Ball",
    "pixelmon.palette.friendball": "Friend Ball",
    "pixelmon.palette.heavyball": "Heavy Ball",
    "pixelmon.palette.moonball": "Moon Ball",
    "pixelmon.palette.premierball": "Premier Ball",
    "pixelmon.palette.masterball": "Master Ball",
    "pixelmon.palette.gsball": "Gs Ball",

    "pixelmon.snorlax.form.snow": "Snowy",
    "pixelmon.snorlax.form.normal": "Normal",
    "pixelmon.solgaleo.form.normal": "Normal",
    "pixelmon.solgaleo.form.real": "Realistic",
    "pixelmon.solgaleo.form.radiantsun": "Radiant Sun",
    "pixelmon.therian.form.incarnate": "Incarnate",
    "pixelmon.therian.form.therian": "Therian",
    "pixelmon.toxtricity.form.amped": "Amped",
    "pixelmon.toxtricity.form.lowkey": "Low Key",
    "pixelmon.unown.form.a": "A",
    "pixelmon.unown.form.b": "B",
    "pixelmon.unown.form.c": "C",
    "pixelmon.unown.form.d": "D",
    "pixelmon.unown.form.e": "E",
    "pixelmon.unown.form.f": "F",
    "pixelmon.unown.form.g": "G",
    "pixelmon.unown.form.h": "H",
    "pixelmon.unown.form.i": "I",
    "pixelmon.unown.form.j": "J",
    "pixelmon.unown.form.k": "K",
    "pixelmon.unown.form.l": "L",
    "pixelmon.unown.form.m": "M",
    "pixelmon.unown.form.n": "N",
    "pixelmon.unown.form.o": "O",
    "pixelmon.unown.form.p": "P",
    "pixelmon.unown.form.q": "Q",
    "pixelmon.unown.form.r": "R",
    "pixelmon.unown.form.s": "S",
    "pixelmon.unown.form.t": "T",
    "pixelmon.unown.form.u": "U",
    "pixelmon.unown.form.v": "V",
    "pixelmon.unown.form.w": "W",
    "pixelmon.unown.form.x": "X",
    "pixelmon.unown.form.y": "Y",
    "pixelmon.unown.form.z": "Z",
    "pixelmon.unown.form.question": "?",
    "pixelmon.unown.form.exclamation": "!",
    "pixelmon.urshifu.form.singlestrike": "Single Strike Style",
    "pixelmon.urshifu.form.singlestrike.description": "This form of Urshifu is a strong believer in the one-hit KO. Its strategy is to leap in close to foes and land a devastating blow with a hardened fist.",
    "pixelmon.urshifu.form.rapidstrike": "Rapid Strike Style",
    "pixelmon.urshifu.form.rapidstrike.description": "This form of Urshifu is a strong believer in defeating foes by raining many blows down on them. Its strikes are nonstop, flowing like a river.",
    "pixelmon.urshifu.form.gmaxss": "G-Max Single Strike",
    "pixelmon.urshifu.form.gmaxrs": "G-Max Rapid Strike",
    "pixelmon.palette.archipelago": "Archipelago",
    "pixelmon.palette.continental": "Continental",
    "pixelmon.palette.elegant": "Elegant",
    "pixelmon.palette.garden": "Garden",
    "pixelmon.palette.high_plains": "High Plains",
    "pixelmon.palette.icy_snow": "Icy Snow",
    "pixelmon.palette.jungle": "Jungle",
    "pixelmon.palette.marine": "Marine",
    "pixelmon.palette.meadow": "Meadow",
    "pixelmon.palette.modern": "Modern",
    "pixelmon.palette.monsoon": "Monsoon",
    "pixelmon.palette.ocean": "Ocean",
    "pixelmon.palette.polar": "Polar",
    "pixelmon.palette.river": "River",
    "pixelmon.palette.sandstorm": "Sandstorm",
    "pixelmon.palette.savanna": "Savanna",
    "pixelmon.palette.sun": "Sun",
    "pixelmon.palette.tundra": "Tundra",
    "pixelmon.palette.fancy": "Fancy",
    "pixelmon.palette.poke_ball": "Poké Ball",
    "pixelmon.wishiwashi.form.solo": "Solo",
    "pixelmon.wishiwashi.form.school": "School",
    "pixelmon.wormadam.form.plant": "Plant",
    "pixelmon.wormadam.form.sandy": "Sandy",
    "pixelmon.wormadam.form.trash": "Trash",
    "pixelmon.xerneas.form.neutral": "Neutral",
    "pixelmon.xerneas.form.active": "Active",
    "pixelmon.xerneas.form.neutral_creator": "Creator Neutral",
    "pixelmon.xerneas.form.active_creator": "Creator Active",
    "pixelmon.zarude.form.ordinary": "Ordinary",
    "pixelmon.zarude.form.dada": "Dada",
    "pixelmon.zacian.form.hero": "Hero of Many Battles",
    "pixelmon.zacian.form.crowned": "Crowned",
    "pixelmon.zamazenta.form.hero": "Hero of Many Battles",
    "pixelmon.zamazenta.form.crowned": "Crowned",
    "pixelmon.zygarde.form.fifty_percent": "50%%",
    "pixelmon.zygarde.form.ten_percent": "10%%",
    "pixelmon.zygarde.form.complete": "Complete",
    "pixelmon.arceus.form.bug": "Bug",
    "pixelmon.arceus.form.dark": "Dark",
    "pixelmon.arceus.form.dragon": "Dragon",
    "pixelmon.arceus.form.electric": "Electric",
    "pixelmon.arceus.form.fairy": "Fairy",
    "pixelmon.arceus.form.fighting": "Fighting",
    "pixelmon.arceus.form.fire": "Fire",
    "pixelmon.arceus.form.flying": "Flying",
    "pixelmon.arceus.form.ghost": "Ghost",
    "pixelmon.arceus.form.grass": "Grass",
    "pixelmon.arceus.form.ground": "Ground",
    "pixelmon.arceus.form.ice": "Ice",
    "pixelmon.arceus.form.poison": "Poison",
    "pixelmon.arceus.form.psychic": "Psychic",
    "pixelmon.arceus.form.rock": "Rock",
    "pixelmon.arceus.form.steel": "Steel",
    "pixelmon.arceus.form.water": "Water",
    "pixelmon.silvally.form.bug": "Bug",
    "pixelmon.silvally.form.dark": "Dark",
    "pixelmon.silvally.form.dragon": "Dragon",
    "pixelmon.silvally.form.electric": "Electric",
    "pixelmon.silvally.form.fairy": "Fairy",
    "pixelmon.silvally.form.fighting": "Fighting",
    "pixelmon.silvally.form.fire": "Fire",
    "pixelmon.silvally.form.flying": "Flying",
    "pixelmon.silvally.form.ghost": "Ghost",
    "pixelmon.silvally.form.grass": "Grass",
    "pixelmon.silvally.form.ground": "Ground",
    "pixelmon.silvally.form.ice": "Ice",
    "pixelmon.silvally.form.poison": "Poison",
    "pixelmon.silvally.form.psychic": "Psychic",
    "pixelmon.silvally.form.rock": "Rock",
    "pixelmon.silvally.form.steel": "Steel",
    "pixelmon.silvally.form.water": "Water",
    "pixelmon.dialga.form.origin": "Origin",
    "pixelmon.palkia.form.origin": "Origin",

    "pixelmon.lunatone.form.gibbous": "Gibbous",
    "pixelmon.lunatone.form.quarter": "Quarter",
    "pixelmon.lunatone.form.full": "Full",
    "pixelmon.lunatone.form.new_moon": "New Moon",
    "pixelmon.lunatone.form.crescent": "Crescent",

    "pixelmon.palette.black": "Black",
    "pixelmon.palette.brown": "Brown",
    "pixelmon.palette.cyan": "Cyan",
    "pixelmon.palette.dark_blue": "Dark Blue",
    "pixelmon.palette.dark_green": "Dark Green",
    "pixelmon.palette.dark_pink": "Dark Pink",
    "pixelmon.palette.dark_red": "Dark Red",
    "pixelmon.palette.forte_green": "Forte Green",
    "pixelmon.palette.grey": "Grey",
    "pixelmon.palette.light_brown": "Light Brown",
    "pixelmon.palette.light_pink": "Light Pink",
    "pixelmon.palette.light_yellow": "Light Yellow",
    "pixelmon.palette.lime": "Lime",
    "pixelmon.palette.olive": "Olive",
    "pixelmon.palette.orange": "Orange",
    "pixelmon.palette.pink": "Pink",
    "pixelmon.palette.purple": "Purple",
    "pixelmon.palette.red": "Red",
    "pixelmon.palette.white": "White",
    "pixelmon.palette.yellow": "Yellow",

    "pixelmon.palette.black_sus": "Black Sus",
    "pixelmon.palette.brown_sus": "Brown Sus",
    "pixelmon.palette.cyan_sus": "Cyan Sus",
    "pixelmon.palette.dark_blue_sus": "Dark Blue Sus",
    "pixelmon.palette.dark_green_sus": "Dark Green Sus",
    "pixelmon.palette.dark_pink_sus": "Dark Pink Sus",
    "pixelmon.palette.dark_red_sus": "Dark Red Sus",
    "pixelmon.palette.forte_green_sus": "Forte Green Sus",
    "pixelmon.palette.grey_sus": "Grey Sus",
    "pixelmon.palette.light_brown_sus": "Light Brown Sus",
    "pixelmon.palette.light_pink_sus": "Light Pink Sus",
    "pixelmon.palette.light_yellow_sus": "Light Yellow Sus",
    "pixelmon.palette.lime_sus": "Lime Sus",
    "pixelmon.palette.olive_sus": "Olive Sus",
    "pixelmon.palette.orange_sus": "Orange Sus",
    "pixelmon.palette.pink_sus": "Pink Sus",
    "pixelmon.palette.purple_sus": "Purple Sus",
    "pixelmon.palette.red_sus": "Red Sus",
    "pixelmon.palette.white_sus": "White Sus",
    "pixelmon.palette.yellow_sus": "Yellow Sus",

    "pixelmon.slugma.form.copper_sulfate.description": "",
    "pixelmon.slugma.form.cupric_chloride.description": "",
    "pixelmon.slugma.form.lithium_chloride.description": "",
    "pixelmon.slugma.form.magnesium_sulfide.description": "",
    "pixelmon.slugma.form.manganese_chloride.description": "",
    "pixelmon.slugma.form.potassium_chloride.description": "",
    "pixelmon.slugma.form.sodium_carbonate.description": "",
    "pixelmon.slugma.form.calcium_carbonate.description": "",

    "pixelmon.palette.copper_sulfate": "Copper Chloride",
    "pixelmon.palette.cupric_chloride": "Cupric Chloride",
    "pixelmon.palette.lithium_chloride": "Lithium Chloride",
    "pixelmon.palette.magnesium_sulfide": "Magnesium Sulfide",
    "pixelmon.palette.manganese_chloride": "Manganese Chloride",
    "pixelmon.palette.potassium_chloride": "Potassium Chloride",
    "pixelmon.palette.sodium_carbonate": "Sodium Carbonate",
    "pixelmon.palette.calcium_carbonate": "Calcium Carbonate",

    "pixelmon.generic.form.noform": "None",
    "pixelmon.generic.form.mega": "Mega",
    "pixelmon.generic.form.megax": "Mega X",
    "pixelmon.generic.form.megay": "Mega Y",
    "pixelmon.generic.form.primal": "Primal",
    "pixelmon.generic.form.dynamax": "Dynamax",
    "pixelmon.generic.form.gmax": "Gigantamax",
    "pixelmon.generic.form.gigantamax": "Gigantamax",
    "pixelmon.generic.form.base": "Standard",
    "pixelmon.generic.form.crowned": "Crowned",
    "pixelmon.palette.shiny": "Shiny",
    "pixelmon.palette.zombie": "Zombie",
    "pixelmon.palette.online": "Giveaway",
    "pixelmon.palette.drowned": "Drowned",
    "pixelmon.palette.valentine": "Valentine",
    "pixelmon.palette.rainbow": "Rainbow",
    "pixelmon.palette.alien": "Alien",
    "pixelmon.palette.valencian": "Valencian",
    "pixelmon.palette.alter": "Alter",
    "pixelmon.palette.pink": "Pink",
    "pixelmon.palette.summer": "Summer",
    "pixelmon.palette.crystal": "Crystal",
    "pixelmon.palette.creator": "Creator",
    "pixelmon.palette.strike": "Strike",
    "pixelmon.palette.ashen": "Ashen",
    "pixelmon.palette.spirit": "Spirit",
    "pixelmon.palette.halloween": "Halloween",

    "pixelmon.generic.form.zombie.mega": "Mega Zombie",
    "pixelmon.generic.form.online.mega": "Mega Giveaway",
    "pixelmon.generic.form.drowned.mega": "Mega Drowned",
    "pixelmon.generic.form.valentine.mega": "Mega Valentine",
    "pixelmon.generic.form.rainbow.mega": "Mega Rainbow",
    "pixelmon.generic.form.alien.mega": "Mega Alien",
    "pixelmon.generic.form.real.mega": "Mega Real",
    "pixelmon.generic.form.alter.mega": "Mega Alter",
    "pixelmon.generic.form.pink.mega": "Mega Pink",
    "pixelmon.generic.form.summer.mega": "Mega Summer",
    "pixelmon.generic.form.crystal.mega": "Mega Crystal",

    "pixelmon.generic.form.zombiex": "Mega X Zombie",
    "pixelmon.generic.form.zombiey": "Mega Y Zombie",


    "pixelmon.shearable.form.normal": "Normal",
    "pixelmon.shearable.form.shorn": "Shorn",
    "pixelmon.shearable.form.black": "Black-Dyed",
    "pixelmon.shearable.form.blue": "Blue-Dyed",
    "pixelmon.shearable.form.brown": "Brown-Dyed",
    "pixelmon.shearable.form.cyan": "Cyan-Dyed",
    "pixelmon.shearable.form.green": "Green-Dyed",
    "pixelmon.shearable.form.gray": "Gray-Dyed",
    "pixelmon.shearable.form.lightblue": "Light Blue-Dyed",
    "pixelmon.shearable.form.lightgray": "Light Gray-Dyed",
    "pixelmon.shearable.form.lime": "Lime-Dyed",
    "pixelmon.shearable.form.magenta": "Magenta-Dyed",
    "pixelmon.shearable.form.orange": "Orange-Dyed",
    "pixelmon.shearable.form.pink": "Pink-Dyed",
    "pixelmon.shearable.form.red": "Red-Dyed",
    "pixelmon.shearable.form.purple": "Purple-Dyed",
    "pixelmon.shearable.form.yellow": "Yellow-Dyed",

    "pixelmon.urshifu.form.gigantamaxrs": "Gigantamax Rapid Strike",
    "pixelmon.urshifu.form.gigantamaxss": "Gigantamax Single Strike",

    "pixelmon.gender.form.male": "Male",
    "pixelmon.gender.form.female": "Female",
    "pixelmon.gender.form.none": "Genderless",
    "pixelmon.valentine.form.unloved": "Unloved",
    "pixelmon.valentine.form.loved": "Loved",

    "pixelmon.season.form.spring": "Spring",
    "pixelmon.season.form.summer": "Summer",
    "pixelmon.season.form.autumn": "Autumn",
    "pixelmon.season.form.winter": "Winter",

    "pixelmon.generic.form.normal": "None",
    "pixelmon.generic.form.alolan": "Alolan",
    "pixelmon.generic.form.galarian": "Galarian",
    "pixelmon.generic.form.hisuian": "Hisuian",


    "pixelmon.landorus.form.therian": "Therian",
    "pixelmon.landorus.form.incarnate": "Incarnate",
    "pixelmon.tornadus.form.therian": "Therian",
    "pixelmon.tornadus.form.incarnate": "Incarnate",
    "pixelmon.thundurus.form.therian": "Therian",
    "pixelmon.thundurus.form.incarnate": "Incarnate",
    "pixelmon.enamorus.form.therian": "Therian",
    "pixelmon.enamorus.form.incarnate": "Incarnate",

    "pixelmon.sinistea.form.phony": "Phony",
    "pixelmon.sinistea.form.antique": "Antique",
    "pixelmon.polteageist.form.phony": "Phony",
    "pixelmon.polteageist.form.antique": "Antique",

    "pixelmon.mareep.form.shorn": "Shorn",
    "pixelmon.wooloo.form.shorn": "Shorn",
    "pixelmon.dubwool.form.shorn": "Shorn",

    "pixelmon.deerling.form.spring": "Spring",
    "pixelmon.deerling.form.summer": "Summer",
    "pixelmon.deerling.form.autumn": "Autumn",
    "pixelmon.deerling.form.winter": "Winter",
    "pixelmon.sawsbuck.form.spring": "Spring",
    "pixelmon.sawsbuck.form.summer": "Summer",
    "pixelmon.sawsbuck.form.autumn": "Autumn",
    "pixelmon.sawsbuck.form.winter": "Winter",
    
    "pixelmon.command.battle.battlebetween": "Battle between %s and %s started!",
    "pixelmon.command.battle.cannotchallenge": "Cannot challenge %s while they are in battle!",
    "pixelmon.command.battle.dimension": "Participants are not in same dimension.",
    "pixelmon.command.battle.sameperson": "Both participants cannot be the same person.",
    "pixelmon.command.battle.started": "Battle between %s and %s started!",
    "pixelmon.command.battle.nopokemon": "%s has no Pokémon that can battle!",
    "pixelmon.command.battle.notenoughpokemon": "%s does not have enough Pokémon that can battle!",
    "pixelmon.command.battle2.duplicate": "Cannot have a duplicate player in the battle.",
    "pixelmon.command.battle2.differing": "Cannot have the same player on differing teams.",
    "pixelmon.command.battle2.first": "First participant must be a player.",
    "pixelmon.command.battle2.invalid": "Participant %s was invalid. Please try again.",
    "pixelmon.command.battle2.level": "Please provide a level!",
    "pixelmon.command.battle2.cantstart": "Invalid participants.",
    "pixelmon.command.battlelog.not.battling": "The user specified is not currently battling!",
    "pixelmon.command.battlelog.player.not.found": "Player not found.",
    "pixelmon.command.battlelog.logged": "The battle for the user has been logged.",
    "pixelmon.command.battlelog.failed": "The battle for the user cannot be logged.",
    "pixelmon.command.breed.giveegg": "%s and %s made an Egg!",
    "pixelmon.command.invalidslot": "Slot argument %s is invalid!",
    "pixelmon.command.breed.notcompatible": "%s and %s are not compatible!",
    "pixelmon.command.breed.same": "You cannot breed %s with its self!",
    "pixelmon.command.breed.egg": "You cannot breed %s with an egg!",
    "pixelmon.command.breed.nullslot": "There is no Pokémon in slot %s!",
    "pixelmon.command.dynamaxband.received": "You have been given a Dynamax Band.",
    "pixelmon.command.dynamaxband.success": "%s has been given a Dynamax Band.",
    "pixelmon.command.dynamaxband.alreadyhas": "%s already has a Dynamax Band.",
    "pixelmon.command.dynamaxband.notify": "%s has given %s a Dynamax Band.",
    "pixelmon.command.checkspawns.betterspawningisoff": "Better Spawning is off. Turn it on with /spawning beta.",
    "pixelmon.command.checkspawns.spawns.inthisarea": "Spawns in this area: %s",
    "pixelmon.command.checkspawns.spawns.atthisposition": "Spawns at this position: %s",
    "pixelmon.command.copyToDB.disabled": "Saving to database is not enabled in the config!",
    "pixelmon.command.endbattle.notinbattle": "%s is not in a battle.",
    "pixelmon.command.endbattle.endbattle": "Battle ended successfully.",
    "pixelmon.command.endbattle.failed": "A plugin has prevented this battle from being ended!",
    "pixelmon.command.endbattle.permissionself": "You don't have permission to end your battle.",
    "pixelmon.command.endbattle.permissionother": "You don't have permission to end someone else's battle.",
    "pixelmon.command.fillcurrydex.complete": "%s's Curry Dex is now complete!",
    "pixelmon.command.fillcurrydex.entire": "%s's entire Curry Dex has been updated to %s Class!",
    "pixelmon.command.fillcurrydex.page": "Page %s of %s's Curry Dex has been updated to %s Class!",
    "pixelmon.command.fillcurrydex.flavor": "The %s flavor on page %s of %s's Curry Dex has been updated to %s Class!",
    "pixelmon.command.freeze.frozen": "Pokémon are frozen in place!",
    "pixelmon.command.freeze.unfrozen": "Pokémon are unfrozen!",
    "pixelmon.command.general.cheater": "Cheater!",
    "pixelmon.command.general.lvlerror": "Error in level.",
    "pixelmon.command.general.notingame": "%s is not in the game!",
    "pixelmon.command.general.invalid": "Invalid arguments!",
    "pixelmon.command.general.enabled": "Enabled %s!",
    "pixelmon.command.general.disabled": "Disabled %s!",
    "pixelmon.command.general.cannot": "You can't use this feature!",
    "pixelmon.command.general.invalidplayer": "Invalid name! Try again.",
    "pixelmon.command.general.inbattle": "You can't use this command while in a battle!",
    "pixelmon.command.general.needtobeplayer": "You must be a player to use this command!",
    "pixelmon.command.give.givesuccess": "Successfully gave %s a %s!",
    "pixelmon.command.give.notifygive": "%s gave %s a %s!",
    "pixelmon.command.give.givesuccessegg": "Successfully gave %s a %s Egg!",
    "pixelmon.command.give.notifygiveegg": "%s gave %s a %s Egg!",
    "pixelmon.command.heal.cantheal": "Cannot heal %s's Pokémon while they are in battle!",
    "pixelmon.command.heal.healed": "Successfully healed %s's Pokémon!",
    "pixelmon.command.heal.notifyhealed": "%s successfully healed %s's Pokémon!",
    "pixelmon.command.snapshot.corners": "Corners:",
    "pixelmon.command.snapshot.errorread": "There was an error reading %s.",
    "pixelmon.command.snapshot.load": "Loaded block snapshot from %s.snapshot.",
    "pixelmon.command.snapshot.nobounds": "No bounds have been defined to save yet!",
    "pixelmon.command.snapshot.nosave": "No blocks have been saved yet!",
    "pixelmon.command.snapshot.place": "Block snapshot placed.",
    "pixelmon.command.snapshot.save": "Block snapshot saved.",
    "pixelmon.command.snapshot.savefile": "Block snapshot saved to %s.snapshot.",
    "pixelmon.command.spawn.spawned": "Successfully spawned a %s.",
    "pixelmon.command.spawn.spawnednotify": "%s successfully spawned %s.",
    "pixelmon.command.spectate.nobattle": "%s is not in a battle.",
    "pixelmon.command.spectate.self": "You can't spectate yourself!",
    "pixelmon.command.stats.losses": "Losses:",
    "pixelmon.command.stats.playerstats": "'s stats:",
    "pixelmon.command.stats.wins": "Wins:",
    "pixelmon.command.stats.yourstats": "Your stats:",
    "pixelmon.command.statsreset.reset": "'s data has been reset.",
    "pixelmon.command.struc.cantfit": "The structure was unable to fit at %s.",
    "pixelmon.command.struc.nostruc": "No structures found for this biome. (%s)",
    "pixelmon.command.struc.notfound": "Structure %s not found.",
    "pixelmon.command.teach.busy": "%s is busy!",
    "pixelmon.command.teach.knowsmove": "%s's %s already knows %s!",
    "pixelmon.command.teach.nomove": "%s is not a move!",
    "pixelmon.command.teach.nothing": "%s has nothing in that slot!",
    "pixelmon.command.teach.sentmove": "%s's %s is now learning %s.",
    "pixelmon.command.teach.slot": "Slot number must be between 1 and 6.",
    "pixelmon.command.unlock": "Successfully unlocked %s's locked Pokémon.",
    "pixelmon.command.warpplate.notstanding": "You are not standing on a warp plate.",
    "pixelmon.command.warpplate.set": "Set warp target to %s.",
    "pixelmon.command.transfer.notenoughmoney": "Not enough money to complete transfer.",
    "pixelmon.command.transfer.sameplayer": "You cannot send money to yourself!",
    "pixelmon.command.transfer.transferred": "Successfully transferred %s PokéDollars to %s!",
    "pixelmon.command.transfer.notifytransfer": "%s successfully transferred %s PokéDollars to %s!",
    "pixelmon.command.transfer.received": "%s successfully transferred %s PokéDollars to you!",
    "pixelmon.command.givemoney.given": "Successfully added %s PokéDollars to %s's balance!",
    "pixelmon.command.givemoney.notifygive": "%s successfully added %s PokéDollars to %s's balance!",
    "pixelmon.command.givemoney.received": "%s successfully added %s PokéDollars to your balance!",
    "pixelmon.command.givemoney.moneylimit": "%s cannot hold any more PokéDollars!",
    "pixelmon.command.givemoney.nomoney": "%s has no PokéDollars to take away!",
    "pixelmon.command.trainerhat.invalidcolour": "Invalid colors entered for hat. Should be red/green/blue from 0-255.",
    "pixelmon.command.reload.error.shopitems": "Cannot reload shop items data!",
    "pixelmon.command.reload.error.npcs": "Cannot reload NPC data!",
    "pixelmon.command.reload.done": "Pixelmon Hocon, NPC, shop item, and spawning data reloaded.",
    "pixelmon.command.redeem.gui": "Use '/redeem gui' to open the cosmetics editing interface.",
    "pixelmon.command.redeem.nodata": "No data found.",
    "pixelmon.command.megaring.received": "You have been given a Mega Ring.",
    "pixelmon.command.megaring.success": "%s has been given a Mega Ring.",
    "pixelmon.command.megaring.alreadyhas": "%s already has a Mega Ring.",
    "pixelmon.command.megaring.notify": "%s has given %s a Mega Ring.",
    "pixelmon.command.shinycharm.received": "You have been given a Shiny Charm.",
    "pixelmon.command.shinycharm.success": "%s has been given a Shiny Charm.",
    "pixelmon.command.shinycharm.alreadyhas": "%s already has a Shiny Charm.",
    "pixelmon.command.shinycharm.notify": "%s has given %s a Shiny Charm.",
    "pixelmon.command.ovalcharm.received": "You have been given an Oval Charm.",
    "pixelmon.command.ovalcharm.success": "%s has been given an Oval Charm.",
    "pixelmon.command.ovalcharm.alreadyhas": "%s already has an Oval Charm.",
    "pixelmon.command.ovalcharm.notify": "%s has given %s an Oval Charm.",
    "pixelmon.command.expcharm.received": "You have been given an Exp. Charm.",
    "pixelmon.command.expcharm.success": "%s has been given an Exp. Charm.",
    "pixelmon.command.expcharm.alreadyhas": "%s already has an Exp. Charm.",
    "pixelmon.command.expcharm.notify": "%s has given %s an Exp. Charm.",
    "pixelmon.command.catchingcharm.received": "You have been given a Catching Charm.",
    "pixelmon.command.catchingcharm.success": "%s has been given a Catching Charm.",
    "pixelmon.command.catchingcharm.alreadyhas": "%s already has a Catching Charm.",
    "pixelmon.command.catchingcharm.notify": "%s has given %s a Catching Charm.",
    "pixelmon.command.markcharm.received": "You have been given a Mark Charm.",
    "pixelmon.command.markcharm.success": "%s has been given a Mark Charm.",
    "pixelmon.command.markcharm.alreadyhas": "%s already has a Mark Charm.",
    "pixelmon.command.markcharm.notify": "%s has given %s a Mark Charm.",
    "pixelmon.command.multipleSuccess": "Successfully excuted command for %s players.",
    "pixelmon.command.tiershow.invalid": "Unknown tier!",
    "pixelmon.command.tier.everything": "Everything!",

    "pixelmon.command.invalidquest": "Invalid quest filename!",
    "pixelmon.command.setstage.permissionother": "You don't have permission to set other player's quest stages!",
    "pixelmon.command.setstage.notify": "%s has set %s's quest stage for quest %s to %s.",
    "pixelmon.command.setstage.set": "Set %s's quest stage for quest %s to %s!",
    "pixelmon.command.setstage.invalidstage": "%s is not a valid stage for quest %s!",
    "pixelmon.command.setstage.invalidargs": "Invalid use of setstage! /setstage <quest> <stage> [player]",
    "pixelmon.command.resetallquests.permissionother": "You don't have permission to reset other player's quests!",
    "pixelmon.command.resetallquests.notify": "%s has reset %s's quests.",
    "pixelmon.command.resetallquests": "Reset %s's quests!",
    "pixelmon.command.resetallquests.invalidargs": "Invalid use of resetallquests! /resetallquests [player]",
    "pixelmon.command.completeallquests.permissionother": "You don't have permission to complete other player's quests!",
    "pixelmon.command.completeallquests.notify": "%s has completed %s's quests.",
    "pixelmon.command.completeallquests": "Completed %s's quests!",
    "pixelmon.command.completeallquests.invalidargs": "Invalid use of completeallquests! /completeallquests [player]",
    "pixelmon.command.questdata.set.notify": "%s has set the %s data field %s to %s for their quest progress of %s.",
    "pixelmon.command.questdata.set": "You have set the %s data field %s to %s for your quest progress of %s!",
    "pixelmon.command.questdata.get.notify": "%s has checked the %s data field %s for their quest progress of %s.",
    "pixelmon.command.questdata.get": "The %s data field %s is equal to %s for your quest progress of %s!",
    "pixelmon.command.questdata.invalidargs": "Invalid use of questdata! /questdata <quest> {numeric,literal} <key> [value]",
    "pixelmon.command.reloadquests": "Reloaded quests!",
    "pixelmon.command.reloadquests.notify": "%s has reloaded quests.",
    "pixelmon.command.reloadquests.failed": "Failed to reload quests! Check log for more information!",

    "pixelmon.command.partyslot.nothing" :  "%s has nothing in that slot!",
    "pixelmon.command.slot":"Slot number must be between 1 and %s.",
    "pixelmon.command.box":"Box number must be between 1 and %s.",
    "pixelmon.command.compslot.nothing":"%s has nothing in that PC slot!",
    "pixelmon.command.eggsteps.noegg":"That isn't an egg.",
    "pixelmon.command.eggsteps.remaining":"Remaining Steps: %s",
    "pixelmon.command.compsearch.header":"%s's Computer: (Mouse over for more info)",
    "pixelmon.command.compsearch.noresults":"No Pokémon found matching the search specs!",
    "pixelmon.command.comptake.success":"You took %s from %s!",
    "pixelmon.command.dexcheck":"You have %s out of %s Pokemon in your Pokedex (%s)",
    "pixelmon.command.disablebattle":"Battles for %s have been &%s.",
    "pixelmon.command.evolve.nopokemon":"There are no (more) evolutions for this Pokémon!",
    "pixelmon.command.evolve.egg":"You cannot evolve an egg!",
    "pixelmon.command.evolve.error":"That Pokémon cannot evolve!",
    "pixelmon.command.evolve.success":"You successfully evolved %s's Pokemon.",
    "pixelmon.command.faint.inbattle":"%s is currently in battle!",
    "pixelmon.command.faint.success":"%s Pokémon have fainted.",
    "pixelmon.command.general.playercommand":"Only players can use this command.",
    "pixelmon.command.gift.toself":"You cannot send a Pokémon to yourself.",
    "pixelmon.command.gift.untradeable":"This Pokémon cannot be traded.",
    "pixelmon.command.gift.partyspace":"You must have more than one Pokémon in your party to do this.",
    "pixelmon.command.gift.received":"%s has sent you %s!",
    "pixelmon.command.gift.gifted":"You successfully gave %s your %s!",
    "pixelmon.command.hypertrained.egg":"Eggs have no stats!",
    "pixelmon.command.hypertrained.success":"Your %s's hidden power is %s type.",
    "pixelmon.command.learnmove.egg":"Eggs can't learn moves!",
    "pixelmon.command.learnmove.nonexistentmove":"The move %s does not exist!",
    "pixelmon.command.learnmove.cannotlearn":"%s cannot learn %s!",
    "pixelmon.command.learnmove.alreadylearned":"%s has already learned this move!",
    "pixelmon.command.learnmove.success":"Successfully sent the move to %s's %s.",
    "pixelmon.command.pc.busy":"You can't do that right now!",
    "pixelmon.command.hatch.noegg":"You can't do that right now!",
    "pixelmon.command.hatch.success":"Successfully hatched a %s.",
    "pixelmon.command.pokecolor.nonickname":"No nickname has been provided.",
    "pixelmon.command.pokedel.lastpokemon":"%s only has one Pokemon of their team, you can't delete it!",
    "pixelmon.command.pokedel.success":"You successfully deleted %s's %s.",
    "pixelmon.command.pokecolor.success":"You successfully named %s %s.",
    "pixelmon.command.pokereset.maxLvl":"The Pokémon level must be between 1 and %s.",
    "pixelmon.command.pokerestart.noconfirm":"Are you sure? Add '--confirm' to the command to restart %s's progress.",
    "pixelmon.command.pokerestart.success":"You successfully restarted %s's progress.",
    "pixelmon.command.pokeretrieve.inbattle":"%s is currently in battle!",
    "pixelmon.command.pokeretrieve.successAll":"You have retrieved all players Pokémon.",
    "pixelmon.command.pokeretrieve.successPlayer":"You have retrieved %s's Pokémon.",
    "pixelmon.command.pokereset.success":"You successfully reset %s's %s.",
    "pixelmon.command.pokekill.success":"You successfully killed %s Pokémon.",
    "pixelmon.command.npckill.trainers":"%s Trainers were in battle and not killed!",
    "pixelmon.command.npckill.success":"You successfully killed %s NPCs.",
    "pixelmon.command.pokeclone.success":"You successfully cloned %s's %s.",
    "pixelmon.command.pokesee.header":"%s's Party: (Mouse over for more info)",
    "pixelmon.command.pokesee.egg":"Egg",
    "pixelmon.command.pokesee.empty":"Empty",
    "pixelmon.command.pokesee.exempt":"You cannot check %s's party!",
    "pixelmon.command.compsee.header":"%s's Compouter Box %s: (Move over for more info)",
    "pixelmon.command.compsee.noresults":"There are no Pokémon in this PC box!",
    "pixelmon.command.poketest.match":"%s matches that Pokémon spec.",
    "pixelmon.command.poketest.nomatch":"%s does not match that Pokémon spec.",
    "pixelmon.command.comptest.match":"%s matches that Pokémon spec.",
    "pixelmon.command.comptest.nomatch":"%s does not match that Pokémon spec.",
    "pixelmon.command.tradesim.egg":"Simulation failed! Eggs cannot evolve via trade!",
    "pixelmon.command.tradesim.untradeable":"This Pokémon cannot be traded.",
    "pixelmon.command.tradesim.unknown":"Unknown Pokémon that the trade is simulating with: %s",
    "pixelmon.command.tradesim.success":"Simulation complete!",
    "pixelmon.command.movelist.header":"%s's Move List:",
    "pixelmon.command.movelist.pokemonnotfound":"Unable to find Pokémon '%s'",
    "pixelmon.command.tm.header":"%s's TM/HM List:",
    "pixelmon.command.tm.none":"%s does not learn any TMs or HMs!",
    "pixelmon.command.pokeedit.edited":"%s has been edited!",
    "pixelmon.command.compedit.edited":"%s has been edited!",

    "pixelmon.command.ivs.header": "§b%s's IVs:",
    "pixelmon.command.ivs.header.egg": "§bEgg's IVs:",
    "pixelmon.command.ivs.egg": "§cYou are unable to check the IVs of eggs!",
    "pixelmon.command.ivs.noht":"§a%s IVs:§e %s",
    "pixelmon.command.ivs.ht":"§a%s IVs:§d %s -> 31 (HT)",
    "pixelmon.command.ivs.total":"§bTotal:§e %d/186 §b(§e%d%%§b)",

    "pixelmon.command.evs.header":"§b%s's EVs:",
    "pixelmon.command.evs.stat":"§a%s EVs:§e %s",
    "pixelmon.command.evs.total":"§bTotal:§e %d/510 §b(§e%d%%§b)",

    "pixelmon.command.pokemoninfo.boxinfo": "Box Info",
    "pixelmon.command.pokemoninfo.box": "Box",
    "pixelmon.command.pokemoninfo.slot": "Slot",
    "pixelmon.command.pokemoninfo.stats": "Stats",
    "pixelmon.command.pokemoninfo.evs": "EVs",
    "pixelmon.command.pokemoninfo.ivs": "IVs",
    "pixelmon.command.pokemoninfo.move": "Move",
    "pixelmon.command.pokemoninfo.moves": "Moves",
    "pixelmon.command.pokemoninfo.none": "None",
    "pixelmon.command.pokemoninfo.hypertrained": "HyperTrained",
    "pixelmon.command.pokemoninfo.level": "Level",
    "pixelmon.command.pokemoninfo.nature": "Nature",
    "pixelmon.command.pokemoninfo.growth": "Growth",
    "pixelmon.command.pokemoninfo.ability": "Ability",
    "pixelmon.command.pokemoninfo.gender": "Gender",
    "pixelmon.command.pokemoninfo.originaltrainer": "OT",
    "pixelmon.command.pokemoninfo.item": "item",
    "pixelmon.command.pokemoninfo.total": "Total",
    "pixelmon.command.starter.success": "You successfully opened the starter menu for %s.",

    "pixelmon.command.other.nopermission": "You don't have permission to use this command on someone else.",
    "pixelmon.command.other.offline": "Unable to execute command for %s, as they're offline!",

    "pixelmon.command.setraid": "You successfully den set %s's %s.",
    "pixelmon.command.setraid.notify": "%s successfully spawned %s.",
    "pixelmon.command.setraid.noden": "Den not found.",
    "argument.coordinate.invalid": "Invalid use of coordinate!",
    "argument.world.notfound": "World not found.",
    "argument.species.notfound": "Species not found.",
    "argument.raidstars.invalid": "Invalid use of raidstars!",

    "pixelmon.command.redeemfossil.recoveredall":"You recovered %s %s!",
    "pixelmon.command.redeemfossil.emptyoffhand":"The fossil in your off hand cannot be combined with the one in your main hand.",
    "pixelmon.command.redeemfossil.notfossil":"This item is not a fossil.",

    "pixelmon.command.levelling.failed":"Failed to toggle levelling!",
    "pixelmon.command.levelling.success":"%s levelling for %s!",

    "pixelmon.cosmetic.hat": "Hat",
    "pixelmon.cosmetic.hat.none": "None",
    "pixelmon.cosmetic.hat.tophat": "Top Hat",
    "pixelmon.cosmetic.hat.fez": "Fez",
    "pixelmon.cosmetic.hat.fedora": "Fedora",
    "pixelmon.cosmetic.hat.trainercap": "Trainer Cap",
    "pixelmon.cosmetic.hat.pikahood": "Pika Hood",
    "pixelmon.cosmetic.hat.wiki": "Wiki Cap",
    "pixelmon.cosmetic.hat.eeveehood": "Eevee Hood",
    "pixelmon.cosmetic.hat.scorhood": "Scorbunny Hood",
    "pixelmon.cosmetic.hat.sphealhat": "Spheal Hat",
    "pixelmon.cosmetic.hat.espeonscarf": "Espeon Scarf",
    "pixelmon.cosmetic.hat.flareonscarf": "Flareon Scarf",
    "pixelmon.cosmetic.hat.glaceonscarf": "Glaceon Scarf",
    "pixelmon.cosmetic.hat.jolteonscarf": "Jolteon Scarf",
    "pixelmon.cosmetic.hat.leafeonscarf": "Leafeon Scarf",
    "pixelmon.cosmetic.hat.sylveonscarf": "Sylveon Scarf",
    "pixelmon.cosmetic.hat.umbreonscarf": "Umbreon Scarf",
    "pixelmon.cosmetic.hat.vaporeonscarf": "Vaporeon Scarf",
    "pixelmon.cosmetic.hat.welkinhat": "Welkin Hat",
    "pixelmon.cosmetic.hat.sableyehood": "Anniversary Hood",


    "pixelmon.cosmetic.monocle": "Monocle",
    "pixelmon.cosmetic.monocle.none": "None",
    "pixelmon.cosmetic.monocle.goldmonocle": "Gold Monocle",
    "pixelmon.cosmetic.monocle.blackmonocle": "Black Monocle",
    "pixelmon.cosmetic.monocle.quagsiremask": "Quagsire Mask",
    "pixelmon.cosmetic.monocle.quarantinemask": "Quarantine Mask",

    "pixelmon.cosmetic.sash": "Sash",
    "pixelmon.cosmetic.sash.none": "None",
    "pixelmon.cosmetic.sash.regular": "Colored Sash",
    "pixelmon.cosmetic.sash.rainbow": "Rainbow Sash",
    "pixelmon.cosmetic.sash.rankadmin": "Admin Sash",
    "pixelmon.cosmetic.sash.rankjr": "Jr. Admin Sash",
    "pixelmon.cosmetic.sash.rankdev": "Dev Sash",
    "pixelmon.cosmetic.sash.rankmodeler": "Modeler Sash",
    "pixelmon.cosmetic.sash.ranksupport": "Support Sash",
    "pixelmon.cosmetic.sash.booster": "Booster Sash",

    "pixelmon.cosmetic.robe": "Robe",
    "pixelmon.cosmetic.robe.none": "None",
    "pixelmon.cosmetic.robe.wizard": "Wizard Robe",
    "pixelmon.cosmetic.robe.drowned": "Drowned Robe",
    "pixelmon.cosmetic.robe.alter": "Alter Robe",
    "pixelmon.cosmetic.robe.strike": "Strike Robe",
    "pixelmon.cosmetic.robe.ashen": "Ashen Robe",
    "pixelmon.cosmetic.robe.wintercloak": "Winter Cloak",
    "pixelmon.cosmetic.robe.froslassyukata": "Froslass Yukata",

    "pixelmon.drops.fullinventory": "Your inventory is full! %s was dropped on the ground!",
    "pixelmon.drops.receivedrop": "You received: %s!",
    "event.spikepichu": "Your Pichu has found a friend! Take good care of it, it looks lonely.",

    "pixelmon.interaction.shake": "%s's Friendship increased!",
    "pixelmon.interaction.shake.fail": "%s's already at its highest Friendship!",
    "pixelmon.interaction.juice": "%s's %s increased!",
    "pixelmon.interaction.helditem": "%s was given the %s.",
    "pixelmon.interaction.hprestore": "%s's HP was restored.",
    "pixelmon.interaction.pprestore": "%s's PP was restored.",
    "pixelmon.interaction.ppfail": "%s already has full PP!",
    "pixelmon.interaction.rarecandy": "%s's leveling is disabled.",
    "pixelmon.interaction.statusfail": "The item won't have any effect.",
    "pixelmon.interaction.statusheal": "%s's status was healed.",
    "pixelmon.interaction.tmknown": "%s already knows %s!",
    "pixelmon.interaction.tmcantlearn": "%s can't learn %s!",
    "pixelmon.interaction.tmcantlearncanother": "%s can only learn %s with a TM or TR from another generation!",
    "pixelmon.interaction.vitamin": "%s's Friendship and %s have increased.",
    "pixelmon.interaction.vitaminfail": "%s's %s can't be increased by the vitamin any further.",
    "pixelmon.interaction.berry": "%s's %s fell!",
    "pixelmon.interaction.berryfriend": "%s's Friendship increased!",
    "pixelmon.interaction.berryfail": "%s's %s can't go lower.",
    "pixelmon.interaction.noeffect": "It won't have any effect.",
    "pixelmon.interaction.abilitycapsule": "%s's Ability changed to %s!",
    "pixelmon.interaction.abilitypatch": "%s's Ability changed to %s!",
    "pixelmon.interaction.ppup": "%s had its PP increased!",
    "pixelmon.interaction.ppmax": "%s had its PP increased to maximum!",
    "pixelmon.interaction.ppatmax": "That move is already at its maximum PP!",
    "pixelmon.interaction.bottlecap.level": "%s must be level 100 before using this!",
    "pixelmon.interaction.bottlecap.full": "%s already has its highest stats!",
    "pixelmon.interaction.bottlecap.goldcap": "%s Individual Values have been maximised!",
    "pixelmon.interaction.bottlecap.silvercap": "%s's %s stat has been maximised!",
    "pixelmon.interaction.mint.identical": "This mint won't have an effect on %s!",
    "pixelmon.interaction.mint.changed": "%s's Nature now acts as if it was %s!",
    "pixelmon.interaction.milcerysweet": "Show %s your moves!",
    "pixelmon.interaction.dynamaxcandy.fail": "%s cannot improve its Dynamax Level any further!",
    "pixelmon.interaction.dynamaxcandy.success": "%s's Dynamax Level increased by 1!",
    "pixelmon.interaction.maxsoup.alreadyhas": "%s already has the Gigantamax Factor!",
    "pixelmon.interaction.maxsoup.fail": "%s can't reach the Gigantamax Factor!",
    "pixelmon.interaction.maxsoup.success": "%s has gained the Gigantamax Factor!",
    "pixelmon.interaction.kyurem.notfound": "You do not have any Pokémon to fuse %s with!",
    "pixelmon.interaction.calyrex.notfound": "You do not have any Pokémon for %s to mount!",
    "pixelmon.interaction.periloussoup.success": "The soup made %s lose all of their Effort Values!",
    "pixelmon.interaction.periloussoup.failure": "%s's Effort Values can't go any lower!",

    "pixelmon.general.noeffect": "It had no effect!",
    "pixelmon.general.needop": "You must be an OP or have permission to perform this action.",
    "pixelmon.general.needowner": "Only the block's owner can access this block.",
    "pixelmon.general.playerbusy": "Player is busy!",
    "pixelmon.general.disabledblock": "The server has disabled this block.",
    "pixelmon.general.battleerror": "A battle error has occurred! Check the console for details and report this bug to the Pixelmon developers.",
    "pixelmon.general.errorlog": "A battle error has occurred! Please report this error log to the Pixelmon developers.",

    "pixelmon.npc.tradername": "Trader",
    "pixelmon.npc.trader": "You don't have the Pokémon I'm looking for! I would like a(n) %s.",

    "pixelmon.npc.fishermanname": "Old Fisherman",

    "pixelmon.npc.relearnername": "Move Relearner",
    "pixelmon.npc.relearnersetitem": "The relearner's cost is now %s (x%d).",
    "pixelmon.npc.relearnernoitem": "The relearner is now free to use.",
    "pixelmon.npc.relearnerfull": "You can't stack this item any further!",
    "pixelmon.npc.relearnercost": "I require %s (x%d) for my services.",

    "pixelmon.npc.tutorname": "Move Tutor",
    "pixelmon.npc.cantpay": "You can't pay the cost of learning this move!",

    "pixelmon.npc.transfername": "Transfer Tutor",

    "pixelmon.projectiles.nibble": "Not even a nibble...",
    "pixelmon.projectiles.gotaway": "It got away!",
    "pixelmon.projectiles.fisheditem": "You fished up %s %s!",
    "pixelmon.projectiles.teamfainted": "You cannot battle hooked Pokémon with a fainted team!",

    "pixelmon.stats.gainexp": "Your %s gained %s Exp.!",
    "pixelmon.stats.learnedmove": "%s just learned %s!",

    "pixelmon.entities.syncpassed": "Synchronize passed it onto %s!",

    "pixelmon.ultraspace.wormhole": "Ultraspace Wormhole",

    "pixelmon.entitytrainer.goodrod": "You received a Good Rod!",
    "pixelmon.entitytrainer.superrod": "You received a Super Rod!",
    "pixelmon.entitytrainer.onceday": "This Trainer can only be battled once a day.",
    "pixelmon.entitytrainer.oncemcday": "This Trainer can only be battled once a Minecraft day.",
    "pixelmon.entitytrainer.onceplayer": "This Trainer can only be battled once by each player.",
    "pixelmon.entitytrainer.level": "Lv:",
    "pixelmon.entitytrainer.winnings": "You won %s PokéDollars for defeating %s!",
    "pixelmon.entitytrainer.dropitemstitle": "You defeated Gym Leader %s!",
    "pixelmon.entitytrainer.inbattle": "This trainer is already in battle!",

    "trainer.edit.opwarning": "You don't have permission to edit NPCs.",

    "pixelmon.statue.despawn": "The Pokémon has been despawned.",

    "pixelutilities.blocks.emptygift": "You found an empty %s. :(",
    "pixelutilities.blocks.untradablegift": "You cannot gift an untradable Pokémon!",
    "pixelmon.blocks.fillmefirst": "You need to place a Pokémon inside first!",
    "pixelmon.blocks.alreadyfilled": "You've already added a Pokémon!",
    "pixelutilities.event.noevents": "Events are disabled. :'(",
    "pixelmon.blocks.nothingtoadd": "You need to send out a Pokémon first.",
    "pixelmon.block.error": "An error was caused by %s.",
    "pixelmon.blocks.lastpoke": "This is your last Pokémon!",
    "pixelmon.blocks.christmaspokegift": "Christmas Poké Gift",
    "pixelmon.blocks.halloweenpokegift": "Halloween Poké Gift",
    "pixelmon.blocks.custompokegift": "custom event Poké Gift",
    "pixelmon.blocks.maxPlants": "There are too many plants here! Try planting elsewhere.",
    "pixelmon.blocks.intemporarymode": "You cannot use Temporary Party Pokémon!",

    "pixelmon.pokeballs.inbattle": "That Pokémon is already in a battle!",
    "pixelmon.pokeballs.alreadyown": "You can't catch Pokémon you already own!",
    "pixelmon.pokeballs.boss": "You can't catch boss Pokémon!",
    "pixelmon.pokeballs.aura": "You can't catch this Pokémon!",
    "pixelmon.pokeballs.throw": "%s threw the %s!",
    "pixelmon.pokeballs.capture": "You captured %s!",
    "pixelmon.pokeballs.capturetransform": "Huh? You captured a %s?!",
    "pixelmon.pokeballs.brokefree": "%s broke free!",
    "pixelmon.pokeballs.pokeinbattle": "You can't catch Pokémon who are battling in another battle!",
    "pixelmon.pokeballs.otherspokemon": "You can't catch other people's Pokémon!",
    "pixelmon.pokeballs.statue": "You can't catch a statue Pokémon!",

    "pixelmon.storage.compfull": "You have no space left in your PC!",
    "pixelmon.storage.partyfull": "Your party is full. %s was sent to your PC!",

    "pixelmon.helditems.noeffect": "It had no effect!",
    "pixelmon.helditems.healedstatus": "%s's status was healed!",
    "pixelmon.helditems.consumeleppa": "%s consumed its Leppa Berry and restored %s's PP!",
    "pixelmon.helditems.consumerestorehp": "%s consumed its %s and restored health!",
    "pixelmon.helditems.pinchberry": "%s consumed its %s!",
    "pixelmon.helditems.custapberry": "%s's Custap Berry let it move first!",
    "pixelmon.helditems.pumkinberry": "%s consumed its Pumkin Berry and thawed out!",
    "pixelmon.helditems.shellbell": "%s restored a little HP using its Shell Bell!",
    "pixelmon.helditems.leftovers": "%s's Leftovers restored some of its health!",
    "pixelmon.helditem.lifeowner": "%s lost some HP!",
    "pixelmon.helditems.focussash": "%s held on using its Focus Sash!",
    "pixelmon.helditems.focusband": "%s held on using its Focus Band!",
    "pixelmon.helditems.blacksludgepsn": "%s was hurt by its Black Sludge!",
    "pixelmon.helditems.blacksludge": "%s regained health due to its Black Sludge!",
    "pixelmon.helditems.gem": "%s's %s boosted the move's power!",
    "pixelmon.helditems.airballoon": "%s floats in the air with its Air Balloon!",
    "pixelmon.helditems.airballoonpop": "%s's Air Balloon popped!",
    "pixelmon.helditems.toxicorb": "%s was badly poisoned by its Toxic Orb!",
    "pixelmon.helditems.flameorb": "%s was burned by its Flame Orb!",
    "pixelmon.helditems.rockyhelmet": "%s was hurt by %s's Rocky Helmet!",
    "pixelmon.helditems.powerherb": "%s's Power Herb let it skip the charging turn!",
    "pixelmon.helditems.berrytypereducing": "%s's %s weakened the attack!",
    "pixelmon.helditems.redcard": "%s held up its Red Card!",
    "pixelmon.helditems.mentalherb": "%s came to its senses using its Mental Herb!",
    "pixelmon.helditems.stickybarb": "%s was hurt by its Sticky Barb!",
    "pixelmon.helditems.quickclaw": "%s's Quick Claw let it move first!",
    "pixelmon.helditems.whiteherb": "%s's White Herb restored its stats!",
    "pixelmon.helditems.ginemaberry": "%s's Ginema Berry restored its stats!",
    "pixelmon.helditems.recoilberry": "%s's %s hurt %s!",
    "pixelmon.helditems.ejectbutton": "%s's Eject Button caused it to switch out!",
    "pixelmon.helditems.micleberry": "%s's Micle Berry raised its accuracy!",
    "pixelmon.helditems.ironball": "%s couldn't stay airborne because of the Iron Ball!",
    "pixelmon.helditems.adrenalineorb": "The Adrenaline Orb raised %s's Speed!",
    "pixelmon.helditems.throatspray": "The Throat Spray raised %s's Sp. Atk!",

    "pixelmon.items.useitem": "%s used the %s.",
    "pixelmon.items.zygarde_cube.pickup": "The strange creature was sucked into the Zygarde Cube!",
    "pixelmon.items.zygarde_cube.encountered": "You have already obtained this %s!",
    "pixelmon.items.zygarde_cube.tooltip.cells": "Cells: %s/100",
    "pixelmon.items.zygarde_cube.tooltip.cores": "Cores: %s/5",
    "pixelmon.items.zygarde_cube.tooltip.moves": "Moves:",

    "pixelmon.blocks.bonemealwatered": "It looks well watered today.",

    "pixelmon.blocks.reassembly_unit.nocube": "You need a Zygarde Cube to use this.",

    "pixelmon.blocks.healer": "Healer is busy!",

    "pixelmon.blocks.pc.ownership": "This PC does not belong to you.",
    "pixelmon.blocks.healer.ownership": "This healer does not belong to you.",

    "pixelmon.blocks.chestfound": "You found one %s!",
    "pixelmon.blocks.timedclaim": "You've already claimed this timed loot! Try again later!",
    "pixelmon.blocks.claimedloot": "You've already claimed this loot!",
    "pixelmon.blocks.ownerchanged": "Block owner changed to server!",
    "pixelmon.blocks.chestset": "Custom Poké Chest Set: %s",
    "pixelmon.blocks.visible": "Poké Chest Visibility: %s",
    "pixelmon.blocks.chestmode": "Chest Mode: %s",
    "pixelmon.blocks.chestmodePL1D": "Permanent, limit 1 drop",
    "pixelmon.blocks.chestmodeTD": "Timed drops",
    "pixelmon.blocks.chestmodeFCFS": "First come, first served",
    "pixelmon.blocks.chestmodePUD": "Permanent, unlimited drops",

    "pixelmon.blocks.orbnotfull": "Your orb is not full!",
    "pixelmon.blocks.orbwrong": "Your orb is not compatible with this shrine!",
    "pixelmon.blocks.shrineused": "This shrine has already been activated!",
    "pixelmon.blocks.shrine.encountered": "You have already used this shrine!",
    "pixelmon.blocks.shrine.today": "This shrine has already been used today!",
    "pixelmon.blocks.partyfainted": "Your Party is too tired to attempt this!",

    "pixelmon.blocks.timespace.notorb": "That isn't a Timespace Orb!",
    "pixelmon.blocks.timespace.inuse": "This altar is currently summoning a Pokémon!",
    "pixelmon.blocks.timespace.needchain": "The altar must be bound by a Red Chain first!",
    "pixelmon.blocks.timespace.alreadychain": "This altar has already been bound by a Red Chain!",

    "pixelmon.blocks.tradefull": "Trading machine full!",
    "pixelmon.blocks.trader.ownership": "This trader does not belong to you.",

    "pixelmon.blocks.noclone": "You have nothing to clone!",

    "pixelmon.blocks.fossilmachine.fossil": "Insert Fossil",
    "pixelmon.blocks.fossilmachine.pokeball": "Insert Poké Ball",
    "pixelmon.blocks.fossilmachine.retrieve": "Retrieve Pokémon",
    "pixelmon.blocks.fossilmachine.working": "Working",
    "pixelmon.blocks.fossilmachine.incomplete": "Incomplete Fossil",

    "pixelmon.blocks.fossildisplay.ownership": "This display case does not belong to you.",
    "pixelmon.blocks.fossildisplay.placecheck": "You can only place clean Fossils in the display case.",

    "pixelmon.blocks.cloningmachine.error": "Error",
    "pixelmon.blocks.cloningmachine.finished": "Finished",
    "pixelmon.blocks.cloningmachine.scanning": "Scanning",
    "pixelmon.blocks.cloningmachine.mew": "Insert Mew",
    "pixelmon.blocks.cloningmachine.catalyst": "Insert Catalyst",
    "pixelmon.blocks.cloningmachine.retrieve": "Retrieve Pokémon",
    "pixelmon.blocks.cloningmachine.processing": "Processing...",
    "pixelmon.blocks.cloningmachine.boost": "Boost",

    "pixelmon.blocks.tree.change1": "The tree is now using design #1.",
    "pixelmon.blocks.tree.change2": "The tree is now using design #2.",
    "pixelmon.blocks.tree.change3": "The tree is now using design #3.",
    "pixelmon.blocks.tree.change4": "The tree is now using design #4.",

    "pixelmon.blocks.movepad.loopbuilderror": "Infinite loops of movement plates are not allowed!",

    "pixelmon.blocks.gymsign.ownership": "This Gym sign does not belong to you.",

    "pixelmon.orb.amountfull": "You need %d more KOs for the orb to be full!",
    "pixelmon.orb.isfull": "Your orb is full!",

    "pixelmon.items.expallon": "The Exp. All is now on.",
    "pixelmon.items.expalloff": "The Exp. All is now off.",

    "achievement.ItemFinderChieve": "Hidden PokéLoot Hunter!",
    "achievement.ItemFinderChieve.desc": "Craft an Item Finder.",
    "achievement.HiddenPokeLootChieve": "Hidden PokéLoot FTW!",
    "achievement.HiddenPokeLootChieve.desc": "Find hidden PokéLoot.",
    "achievement.NormalPokeLootChieve": "PokéLoot FTW!",
    "achievement.NormalPokeLootChieve.desc": "Find a PokéLoot Chest.",
    "achievement.LootMasterBallChieve": "It's a Master Ball!!!",
    "achievement.LootMasterBallChieve.desc": "Find a PokéLoot Master Ball.",
    "achievement.GrottoChieve": "There's a passage here...",
    "achievement.GrottoChieve.desc": "Find a Hidden Grotto.",
    "achievement.PokeballChieve": "Gotta catch 'em all!",
    "achievement.PokeballChieve.desc": "Craft a Poké Ball.",
    "achievement.LegendaryChieve": "First Legendary",
    "achievement.LegendaryChieve.desc": "Catch your first Legendary.",
    "achievement.ShinyChieve": "Ooh Shiny!",
    "achievement.ShinyChieve.desc": "Catch a Shiny Pokémon.",
    "achievement.FirstCatchChieve": "One down, many to go!",
    "achievement.FirstCatchChieve.desc": "Catch your first Pokémon.",
    "achievement.TrainerChieve": "Victory!",
    "achievement.TrainerChieve.desc": "Win a Trainer battle.",
    "achievement.PvPChieve": "Ultimate Victory!",
    "achievement.PvPChieve.desc": "Win a PvP battle.",
    "achievement.ApricornChieve": "Kurt's Apprentice!",
    "achievement.ApricornChieve.desc": "Cook an Apricorn.",
    "achievement.dex1Chieve": "Pokédex: 1%% Complete!",
    "achievement.dex1Chieve.desc": "Complete 1% of the Pokédex.",
    "achievement.dex10Chieve": "Pokédex: 10%% Complete!",
    "achievement.dex10Chieve.desc": "Complete 10% of the Pokédex.",
    "achievement.dex20Chieve": "Pokédex: 20%% Complete!",
    "achievement.dex20Chieve.desc": "Complete 20% of the Pokédex.",
    "achievement.dex30Chieve": "Pokédex: 30%% Complete!",
    "achievement.dex30Chieve.desc": "Complete 30% of the Pokédex.",
    "achievement.dex40Chieve": "Pokédex: 40%% Complete!",
    "achievement.dex40Chieve.desc": "Complete 40% of the Pokédex.",
    "achievement.dex50Chieve": "Pokédex: 50%% Complete!",
    "achievement.dex50Chieve.desc": "Complete 50% of the Pokédex.",
    "achievement.dex60Chieve": "Pokédex: 60%% Complete!",
    "achievement.dex60Chieve.desc": "Complete 60% of the Pokédex.",
    "achievement.dex70Chieve": "Pokédex: 70%% Complete!",
    "achievement.dex70Chieve.desc": "Complete 70% of the Pokédex.",
    "achievement.dex80Chieve": "Pokédex: 80%% Complete!",
    "achievement.dex80Chieve.desc": "Complete 80% of the Pokédex.",
    "achievement.dex90Chieve": "Pokédex: 90%% Complete!",
    "achievement.dex90Chieve.desc": "Complete 90% of the Pokédex.",
    "achievement.dex100Chieve": "Pokédex: Pixelmon Master!",
    "achievement.dex100Chieve.desc": "Complete the Pokédex.",

    "achievement.teammagma": "Team Magma Wannabe!",
    "achievement.teammagma.desc": "Join Team Magma!",
    "achievement.teamaqua": "Team Aqua Wannabe!",
    "achievement.teamaqua.desc": "Join Team Aqua!",
    "achievement.teammagma1": "Team Magma Grunt!",
    "achievement.teammagma1.desc": "Become a Team Magma Grunt.",
    "achievement.teamaqua1": "Team Aqua Grunt!",
    "achievement.teamaqua1.desc": "Become a Team Aqua Grunt.",
    "achievement.teammagma2": "Team Magma Executive!",
    "achievement.teammagma2.desc": "Become a Team Magma Executive.",
    "achievement.teamaqua2": "Team Aqua Executive!",
    "achievement.teamaqua2.desc": "Become a Team Aqua Executive.",
    "achievement.teammagma3": "Team Magma Leader!",
    "achievement.teammagma3.desc": "Become a Team Magma Leader.",
    "achievement.teamaqua3": "Team Aqua Leader!",
    "achievement.teamaqua3.desc": "Become a Team Aqua Leader.",
    "achievement.teamgalactic": "Team Galactic Wannabe!",
    "achievement.teamgalactic.desc": "Join Team Galactic!",
    "achievement.teamgalactic1": "Team Galactic Grunt!",
    "achievement.teamgalactic1.desc": "Become a Team Galactic Grunt.",
    "achievement.teamgalactic2": "Team Galactic Executive!",
    "achievement.teamgalactic2.desc": "Become a Team Galactic Executive.",
    "achievement.teamgalactic3": "Team Galactic Leader!",
    "achievement.teamgalactic3.desc": "Become a Team Galactic Leader.",
    "achievement.teamrocket": "Team Rocket Wannabe!",
    "achievement.teamrocket.desc": "Join Team Rocket!",
    "achievement.teamrocket1": "Team Rocket Grunt!",
    "achievement.teamrocket1.desc": "Become a Team Rocket Grunt.",
    "achievement.teamrocket2": "Team Rocket Executive!",
    "achievement.teamrocket2.desc": "Become a Team Rocket Executive.",
    "achievement.teamrocket3": "Team Rocket Leader!",
    "achievement.teamrocket3.desc": "Become a Team Rocket Leader.",
    "achievement.teamplasma": "Team Plasma Wannabe!",
    "achievement.teamplasma.desc": "Join Team Plasma!",
    "achievement.teamplasma1": "Team Plasma Grunt!",
    "achievement.teamplasma1.desc": "Become a Team Plasma Grunt.",
    "achievement.teamplasma2": "Team Plasma Executive!",
    "achievement.teamplasma2.desc": "Become a Team Plasma Executive.",
    "achievement.teamplasma3": "Team Plasma Leader!",
    "achievement.teamplasma3.desc": "Become a Team Plasma Leader.",
    "achievement.getSilicon": "Get Silicon!",
    "achievement.getSilicon.desc": "Smelt some silicon.",
    "achievement.pokeGift": "Poké Gift Get!",
    "achievement.pokeGift.desc": "Find a Poké Gift from another player.",
    "achievement.givenPokeGift": "Poké Gift Give!",
    "achievement.givenPokeGift.desc": "Leave a Poké Gift for another player.",

    "pixelmon.abilities.activated": "%s's %s activated!",
    "pixelmon.abilities.aftermath": "%s's Aftermath hurt %s!",
    "pixelmon.abilities.airlock": "%s's Air Lock caused the effects of weather to disappear!",
    "pixelmon.abilities.angerpoint": "Anger Point caused %s to become furious!",
    "pixelmon.abilities.anticipation": "%s shuddered in anticipation!",
    "pixelmon.abilities.baddreams": "%s was tormented by %s's Bad Dreams!",
    "pixelmon.abilities.berserk": "%s went berserk!",
    "pixelmon.abilities.bigpecks": "%s's Big Pecks prevents Defense loss!",
    "pixelmon.abilities.clearbody": "%s's Clear Body prevents stat loss!",
    "pixelmon.abilities.changeform": "%s changed form!",
    "pixelmon.abilities.cheekpouch": "%s's Cheek Pouch activated!",
    "pixelmon.abilities.cloudnine": "%s's Cloud Nine caused the effects of weather to disappear!",
    "pixelmon.abilities.colourchange": "%s's Color Change changed it into the %s type!",
    "pixelmon.abilities.comatose": "%s is drowsing!",
    "pixelmon.abilities.curiousmedicine": "%s's Curious Medicine removed its allies' stat changes!",
    "pixelmon.abilities.cursedbody": "%s's Cursed Body disabled %s's %s!",
    "pixelmon.abilities.cutecharm": "%s's Cute Charm infatuated %s!",
    "pixelmon.abilities.damp": "%s's Damp prevented the explosion!",
    "pixelmon.abilities.darkaura": "%s is radiating a dark aura!",
    "pixelmon.abilities.dazzling": "%s cannot use %s!",
    "pixelmon.abilities.disguise": "Its disguise served it as a decoy!",
    "pixelmon.abilities.disguisebusted": "%s's disguise was busted!",
    "pixelmon.abilities.drizzle": "%s's Drizzle caused rain to fall!",
    "pixelmon.abilities.drought": "%s's Drought caused the sun to intensify!",
    "pixelmon.abilities.dryskinnegate": "%s's Dry Skin negated the attack!",
    "pixelmon.abilities.dryskinrain": "%s regained HP because of its Dry Skin!",
    "pixelmon.abilities.dryskinsun": "%s was hurt because of its Dry Skin!",
    "pixelmon.abilities.effectsporesleep": "%s's Effect Spore put %s to sleep!",
    "pixelmon.abilities.effectsporeparal": "%s's Effect Spore paralyzed %s!",
    "pixelmon.abilities.effectsporepois": "%s's Effect Spore poisoned %s!",
    "pixelmon.abilities.fairyaura": "%s is radiating a fairy aura!",
    "pixelmon.abilities.flamebody": "%s's Flame Body burned %s!",
    "pixelmon.abilities.flashfire": "Flash Fire boosted the power of %s's fire!",
    "pixelmon.abilities.flashfire2": "%s's Flash Fire nullified the attack!",
    "pixelmon.abilities.forewarn": "%s's Forewarn alerted it of %s!",
    "pixelmon.abilities.flowerveil": "%s surrounded itself with a veil of petals!",
    "pixelmon.abilities.frisk": "%s frisked %s and found its %s!",
    "pixelmon.abilities.fullmetalbody": "%s's Full Metal Body protected it from stat changes!",
    "pixelmon.abilities.gulpmissile.gulping.eat": "%s caught an Arrokuda in its bill!",
    "pixelmon.abilities.gulpmissile.gorging.eat": "%s caught a Pikachu in its bill!",
    "pixelmon.abilities.gulpmissile.gulping.spit": "%s spat the Arrokuda in its bill at %s!",
    "pixelmon.abilities.gulpmissile.gorging.spit": "%s spat the Pikachu in its bill at %s!",
    "pixelmon.abilities.harvest": "%s's Harvest recovered one %s!",
    "pixelmon.abilities.hypercut": "%s's Hyper Cutter prevents Attack loss!",
    "pixelmon.abilities.icebody": "%s's Ice Body restored its health!",
    "pixelmon.abilities.iceface.protected": "%s's Ice Face protected them!",
    "pixelmon.abilities.iceface.restore": "%s's Ice Face was restored by hail!",
    "pixelmon.abilities.illusion": "%s's Illusion wore off!",
    "pixelmon.abilities.immunity": "%s's Immunity prevented it from being poisoned!",
    "pixelmon.abilities.immunitycure": "%s's Immunity cured its poisoning!",
    "pixelmon.abilities.imposter": "%s's Imposter made it transform into %s!",
    "pixelmon.abilities.innardsout": "%s took damage from %s's Innards Out!",
    "pixelmon.abilities.insomnia": "%s's Insomnia kept it awake!",
    "pixelmon.abilities.insomniacure": "%s's Insomnia woke it up!",
    "pixelmon.abilities.ironbarbs": "%s's Iron Barbs hurt %s!",
    "pixelmon.abilities.justified": "%s's Justified raised its Attack!",
    "pixelmon.abilities.keeneye": "%s's Keen Eye prevents accuracy loss!",
    "pixelmon.abilities.leafguard": "%s was protected by Leaf Guard!",
    "pixelmon.abilities.levitate": "%s's Levitate made it immune to the attack!",
    "pixelmon.abilities.libero": "%s's Libero changed it into the %s type!",
    "pixelmon.abilities.lightningrod": "%s's Lightning Rod negated the attack!",
    "pixelmon.abilities.lightningrodredirect": "%s's Lightning Rod drew in the attack!",
    "pixelmon.abilities.limber": "%s's Limber prevents paralysis!",
    "pixelmon.abilities.limbercure": "%s's Limber cured its paralysis!",
    "pixelmon.abilities.liquidooze": "%s absorbed the Liquid Ooze!",
    "pixelmon.abilities.magicbounce": "%s's Magic Bounce bounced back the attack!",
    "pixelmon.abilities.magician": "%s's Magician stole %s's %s!",
    "pixelmon.abilities.magmaarmor": "%s's Magma Armor prevented it from being frozen!",
    "pixelmon.abilities.magmaarmorcure": "%s's Magma Armor thawed it out!",
    "pixelmon.abilities.mimicry": "%s's type changed to %s!",
    "pixelmon.abilities.mimicry.revert": "%s's type reverted back!",
    "pixelmon.abilities.moldbreaker": "%s breaks the mold!",
    "pixelmon.abilities.motordrive": "%s's Motor Drive negated the attack!",
    "pixelmon.abilities.neutralizinggas": "Neutralizing gas filled the area!",
    "pixelmon.abilities.oblivious": "%s's Oblivious nullified the attack!",
    "pixelmon.abilities.obliviouscure": "%s came to its senses!",
    "pixelmon.abilities.overcoat": "%s's Overcoat nullified the attack!",
    "pixelmon.abilities.owntempo": "%s's Own Tempo prevented confusion!",
    "pixelmon.abilities.owntempocure": "%s's Own Tempo snapped it out of confusion!",
    "pixelmon.abilities.pickpocket": "%s's Pickpocket let it steal %s's %s!",
    "pixelmon.abilities.pickup": "%s's Pickup recovered a %s!",
    "pixelmon.abilities.poisonheal": "Poison Heal caused the poison to heal %s!",
    "pixelmon.abilities.poisonpoint": "%s's Poison Point poisoned %s!",
    "pixelmon.abilities.poisontouch": "%s's Poison Touch poisoned %s!",
    "pixelmon.abilities.pressure": "%s is exerting its Pressure!",
    "pixelmon.abilities.protean": "%s's Protean changed it into the %s type!",
    "pixelmon.abilities.quickdraw": "Quick Draw made %s move faster!",
    "pixelmon.abilities.raindish": "%s was healed by Rain Dish!",
    "pixelmon.abilities.rattled": "%s's Rattled raised its Speed!",
    "pixelmon.abilities.ripen": "%s's Ripen made their %s more effective!",
    "pixelmon.abilities.roughskin": "%s's Rough Skin hurt %s!",
    "pixelmon.abilities.runaway": "%s fled using Run Away!",
    "pixelmon.abilities.schooling.start": "%s formed a school!",
    "pixelmon.abilities.schooling.stop": "%s stopped schooling!",
    "pixelmon.abilities.sandstream": "%s's Sand Stream whipped up a sandstorm!",
    "pixelmon.abilities.sapsipper": "%s's Sap Sipper negated the attack!",
    "pixelmon.abilities.slowstart": "%s couldn't get going!",
    "pixelmon.abilities.slowstartend": "%s finally got itself together!",
    "pixelmon.abilities.snowwarning": "%s made it hail with Snow Warning!",
    "pixelmon.abilities.solarpower": "%s's Solar Power is straining it!",
    "pixelmon.abilities.soundproof": "%s's Soundproof rendered the attack useless!",
    "pixelmon.abilities.static": "%s's Static paralyzed %s!",
    "pixelmon.abilities.stormdrain": "%s's Storm Drain negated the attack!",
    "pixelmon.abilities.stormdrainredirect": "%s's Storm Drain drew in the attack!",
    "pixelmon.abilities.sturdy": "%s just hung on with Sturdy!",
    "pixelmon.abilities.sturdy2": "%s's Sturdy negated the attack!",
    "pixelmon.abilities.suctioncups": "%s's Suction Cups anchored it in!",
    "pixelmon.abilities.sweetveil": "%s's Sweet Veil prevented it from falling asleep from %s's attack!",
    "pixelmon.abilities.tanglinghair": "%s was slowed down by %s's Tangling Hair!",
    "pixelmon.abilities.telepathy": "%s's Telepathy protected it from the attack!",
    "pixelmon.abilities.teravolt": "%s is radiating a bursting aura!",
    "pixelmon.abilities.trace": "%s traced %s's %s!",
    "pixelmon.abilities.truant": "%s is loafing around!",
    "pixelmon.abilities.turboblaze": "%s is radiating a blazing aura!",
    "pixelmon.abilities.unnerve": "%s's Unnerve made the opponent too nervous to eat Berries!",
    "pixelmon.abilities.vitalspirit": "%s's Vital Spirit kept it awake!",
    "pixelmon.abilities.vitalspiritcure": "%s's Vital Spirit woke it up!",
    "pixelmon.abilities.voltabsorb": "Volt Absorb drew in the attack and healed %s!",
    "pixelmon.abilities.voltabsorb2": "%s's Volt Absorb negated the attack!",
    "pixelmon.abilities.waterabsorb": "Water Absorb drew in the attack and healed %s!",
    "pixelmon.abilities.waterabsorb2": "%s's Water Absorb negated the attack!",
    "pixelmon.abilities.waterbubblecure": "%s's Water Bubble cured its burn!",
    "pixelmon.abilities.waterbubble": "%s's Water Bubble prevented the burn!",
    "pixelmon.abilities.watercompaction": "%s's Water Compaction raised its Defense!",
    "pixelmon.abilities.waterveil": "%s's Water Veil prevented the burn!",
    "pixelmon.abilities.waterveilcure": "%s's Water Veil cured its burn!",
    "pixelmon.abilities.whitesmoke": "%s's White Smoke prevents stat loss!",
    "pixelmon.abilities.wonderguard": "%s's Wonder Guard prevented the attack!",

    "pixelmon.egg": "Egg",
    "ability.Egg": "Hatching",
    "pixelmon.egg.hatching": "Your Egg hatched into a baby %s!",
    "pixelmon.egg.hatchingan": "Your Egg hatched into an %s!",
    "pixelmon.egg.hatchingdata": "Slot: %s, Cycles: %s, Steps: %s",
    "pixelmon.egg.stage1": "Sounds can be heard coming from inside! It will hatch soon!",
    "pixelmon.egg.stage2": "It appears to move occasionally. It may be close to hatching.",
    "pixelmon.egg.stage3": "What will hatch from this? It doesn't seem close to hatching.",
    "pixelmon.egg.stage4": "It looks like this Egg will take a long time to hatch.",
    "pixelmon.daycare.title": "Day Care",
    "pixelmon.daycare.cancel": "Cancel",
    "pixelmon.daycare.requirements": "Requirements:",
    "pixelmon.daycare.tab.history": "Day Care History",
    "pixelmon.daycare.box.0": "Box 1",
    "pixelmon.daycare.box.1": "Box 2",
    "pixelmon.daycare.box.2": "Box 3",
    "pixelmon.daycare.box.3": "Box 4",
    "pixelmon.daycare.box.4": "Box 5",
    "pixelmon.daycare.box.5": "Box 6",
    "pixelmon.daycare.box.6": "Box 7",
    "pixelmon.daycare.box.7": "Box 8",
    "pixelmon.daycare.box.8": "Box 9",
    "pixelmon.daycare.box.9": "Box 10",
    "pixelmon.daycare.box.10": "Box 11",
    "pixelmon.daycare.box.11": "Box 12",
    "pixelmon.daycare.box.12": "Box 13",
    "pixelmon.daycare.box.13": "Box 14",
    "pixelmon.daycare.box.14": "Box 15",
    "pixelmon.daycare.box.15": "Box 16",
    "pixelmon.daycare.box.16": "Box 17",
    "pixelmon.daycare.box.17": "Box 18",
    "pixelmon.daycare.box.18": "Box 19",
    "pixelmon.daycare.box.19": "Box 20",
    "pixelmon.daycare.box.20": "Box 21",
    "pixelmon.daycare.box.21": "Box 22",
    "pixelmon.daycare.box.22": "Box 23",
    "pixelmon.daycare.box.23": "Box 24",
    "pixelmon.daycare.box.24": "Box 25",
    "pixelmon.daycare.box.25": "Box 26",
    "pixelmon.egg_groups": "Egg Groups",
    "pixelmon.egg_group.monster": "Monster",
    "pixelmon.egg_group.water_one": "Water 1",
    "pixelmon.egg_group.grass": "Grass",
    "pixelmon.egg_group.bug": "Bug",
    "pixelmon.egg_group.flying": "Flying",
    "pixelmon.egg_group.field": "Field",
    "pixelmon.egg_group.fairy": "Fairy",
    "pixelmon.egg_group.human_like": "Human-Like",
    "pixelmon.egg_group.water_three": "Water 3",
    "pixelmon.egg_group.amorphous": "Amorphous",
    "pixelmon.egg_group.water_two": "Water 2",
    "pixelmon.egg_group.ditto": "Ditto",
    "pixelmon.egg_group.dragon": "Dragon",
    "pixelmon.egg_group.mineral": "Mineral",
    "pixelmon.egg_group.undiscovered": "No Eggs Discovered",
    "block.pixelmon.blue_day_care": "Blue Day Care",
    "block.pixelmon.red_day_care": "Red Day Care",
    "block.pixelmon.green_day_care": "Green Day Care",
    "block.pixelmon.orange_day_care": "Orange Day Care",
    "block.pixelmon.pink_day_care": "Pink Day Care",
    "block.pixelmon.purple_day_care": "Purple Day Care",
    "block.pixelmon.yellow_day_care": "Yellow Day Care",
    "block.pixelmon.white_day_care": "White Day Care",
    "block.pixelmon.brown_day_care": "Brown Day Care",
    "block.pixelmon.black_day_care": "Black Day Care",
    "block.pixelmon.gray_day_care": "Gray Day Care",
    "block.pixelmon.cyan_day_care": "Cyan Day Care",
    "block.pixelmon.magenta_day_care": "Magenta Day Care",
    "block.pixelmon.light_blue_day_care": "Light Blue Day Care",
    "block.pixelmon.light_gray_day_care": "Light Gray Day Care",
    "block.pixelmon.lime_day_care": "Lime Day Care",
    "item.pixelmon.copper_hourglass": "Isi's Copper Hourglass",
    "item.pixelmon.copper_hourglass.tooltip": "Skips a single requirement for a Pokémon in the day care!",
    "item.pixelmon.silver_hourglass": "Isi's Silver Hourglass",
    "item.pixelmon.silver_hourglass.tooltip": "Skips 25%% of the timer for a Pokémon in the day care!",
    "item.pixelmon.gold_hourglass": "Isi's Gold Hourglass",
    "item.pixelmon.gold_hourglass.tooltip": "Completes all requirements and timers for one of the day care boxes!",
    "item.pixelmon.diamond_hourglass": "Isi's Diamond Hourglass",
    "item.pixelmon.diamond_hourglass.tooltip": "Completes all requirements and timers for three of the day care boxes giving them perfect IVs, maximum happiness and a ribbon!",
    "pixelmon.time.day": "d ",
    "pixelmon.time.hour": "h ",
    "pixelmon.time.minute": "m ",
    "pixelmon.time.second": "s ",
    "pixelmon.daycare.complete": "Complete!",
    "pixelmon.daycare.next.form": "Next form",
    "pixelmon.daycare.previous.form": "Previous form",
    "pixelmon.daycare.confirm": "Confirm",
    "pixelmon.daycare.next.page": "Next Box",
    "pixelmon.daycare.previous.page": "Previous Box",
    "block.pixelmon.poke_display": "Poké Display",
    "block.pixelmon.poke_display.tooltip": "Used for displaying your Pokémon in the world!",
    "poke.display.block.party.size": "You must have at least 2 Pokémon to open the Poké Display",

    "gui.pause.text": "Pause",
    "gui.axis_off.text": "Off",
    "gui.button.okay": "Okay",
    "gui.button.yes": "Yes",
    "gui.button.no": "No",
    "gui.button.cancel": "Cancel",
    "gui.button.submit": "Submit",
    "gui.guiEvolve.huh": "Huh?",
    "gui.guiEvolve.evolve": "What? %s is evolving!",
    "gui.guiEvolve.done": "Your %s evolved into a %s!",
    "gui.guiEvolve.cancel": "Evolution canceled!",

    "gui.guiItemDrops.beatBossPixelmon1": "You beat a boss %s!",
    "gui.guiItemDrops.beatTrainer1": "You beat a Trainer!",
    "gui.guiItemDrops.mouse": "Mouse over item",
    "gui.guiItemDrops.see": "to see more",
    "gui.guiItemDrops.details": "details",
    "gui.guiItemDrops.takeAll": "Take All",
    "gui.guiItemDrops.drop": "Drop All",
    "gui.guiItemDrops.beatPokemon": "You defeated %s!",
    "gui.guiItemDrops.click": "Click to take item",
    "gui.guiItemDrops.ok": "OK",

    "gui.fainterChoice.noFight": "$p can no longer fight.",
    "gui.fainterChoice.switch": "Switch to another Pokémon",
    "gui.fainterChoice.run": "Run",

    "gui.guiDoctor.healPokemon": "I'm a Pokémon doctor. Shall I heal your Pokémon?",
    "gui.guiDoctor.waiting": "Waiting",

    "gui.trading.ready": "Ready",
    "gui.trading.notready": "Not Ready",
    "gui.trading.want": "%s wants to trade.",
    "gui.trading.nuf": "No user found!",
    "gui.trading.trade": "Trade",
    "gui.trading.select": "Select a Pokémon.",
    "gui.trading.invalid": "Invalid",

    "gui.pokedex.pokedex": "Pokédex",
    "gui.pokedex.height": "Height:",
    "gui.pokedex.weight": "Weight:",
    "gui.pokedex.more": "Options",
    "gui.pokedex.wiki": "View Wiki",
    "gui.pokedex.meters": "m",
    "gui.pokedex.feet": "ft.",
    "gui.pokedex.kilograms": "kg",
    "gui.pokedex.pounds": "lbs.",
    "gui.pokedex.description": "Description",
    "gui.pokedex.spawns": "Spawn Locations",
    "gui.pokedex.caught": "Caught:",
    "gui.pokedex.seen": "Seen:",
    "gui.pokedex.completion": "Completion:",
    "gui.pokedex.spawning.times1": "at",
    "gui.pokedex.spawning.times2": "or",
    "gui.pokedex.spawning.weather1": "during",
    "gui.pokedex.spawning.weather2": "or",
    "gui.pokedex.spawning.above": "above y=",
    "gui.pokedex.spawning.below": "below y=",


    "gui.pokedexoptions.done": "Done",
    "gui.pokedexoptions.options": "Pokédex Options",
    "gui.pokedexoptions.metric": "Metric",
    "gui.pokedexoptions.imperial": "Imperial/US Customary",

    "gui.fishinglog.menu.title": "Log Selection",
    "gui.fishinglog.title": "%s Log",
    "gui.fishinglog.percentage": "%s%% Complete",

    "gui.fishinglog.slugma.title": "Slugma",
    "gui.fishinglog.slugma.category0": "Burning Salt Slugma",

    "gui.fishinglog.shellos.title": "Shellos",
    "gui.fishinglog.shellos.category0": "Eastern Shellos",
    "gui.fishinglog.shellos.category1": "Western Shellos",

    "gui.fishinglog.spheal.title": "Spheal",
    "gui.fishinglog.spheal.category0": "Pokéball Spheals",

    "gui.fishinglog.clobbopus.title": "Clobbopus",
    "gui.fishinglog.clobbopus.category0": "Clobbopus JUMP!",

    "gui.fishinglog.magikarp.title": "Magikarp",
    "gui.fishinglog.magikarp.category0": "Standard",
    "gui.fishinglog.magikarp.category1": "Calico",
    "gui.fishinglog.magikarp.category2": "Orange",
    "gui.fishinglog.magikarp.category3": "Pink",
    "gui.fishinglog.magikarp.category4": "Gray",
    "gui.fishinglog.magikarp.category5": "Purple",
    "gui.fishinglog.magikarp.category6": "Apricot",
    "gui.fishinglog.magikarp.category7": "Brown",
    "gui.fishinglog.magikarp.category8": "White",
    "gui.fishinglog.magikarp.category9": "Black",
    "gui.fishinglog.magikarp.category10": "Blue",
    "gui.fishinglog.magikarp.category11": "Violet",
    "gui.fishinglog.magikarp.category12": "Special",

    "gui.yesno.trade": "Would you like to trade your %s for my %s?",
    "gui.yesno.yes": "Yes",
    "gui.yesno.no": "No",
    "gui.yesno.yousure": "Do you want to give up learning %s?",
    "gui.yesno.replace": "Are you sure you want to replace %s with %s?",

    "gui.replaceattack.effect": "Effect",
    "gui.replaceattack.power": "Power",
    "gui.replaceattack.accuracy": "Accuracy",

    "gui.acceptdeny.accept": "Accept",
    "gui.acceptdeny.deny": "Decline",
    "gui.acceptdeny.single": "Single",
    "gui.acceptdeny.double": "Double",
    "gui.acceptdeny.triple": "Triple",
    "gui.acceptdeny.rotation": "Rotation",
    "gui.acceptdeny.raid": "Raid",
    "gui.acceptdeny.horde": "Horde",
    "gui.acceptdeny.invaliddouble": "%s doesn't have enough Pokémon to be in a double battle!",

    "gui.renamePoke.Reset": "Reset",
    "gui.renamePoke.cancel": "Cancel",
    "gui.renamePoke.renamebutton": "Rename",
    "gui.renamePoke.renamePokemon": "Rename Pokémon",

    "gui.screenpokechecker.moves": "Moves",
    "gui.screenpokechecker.stats": "Stats",
    "gui.screenpokechecker.rename": "Rename",
    "gui.screenpokechecker.lvl": "Lvl:",
    "gui.screenpokechecker.number": "No.",
    "gui.screenpokechecker.status": "Status",
    "gui.screenpokechecker.fainted": "*FAINTED*",
    "gui.screenpokechecker.texp": "Experience",
    "gui.screenpokechecker.levelup": "Level Up",
    "gui.screenpokechecker.dynamaxlevel": "Dynamax Level",
    "gui.screenpokechecker.summary": "Summary",
    "gui.screenpokechecker.ot": "Original Trainer",
    "gui.screenpokechecker.ability": "Ability",
    "gui.screenpokechecker.happiness": "Happiness",
    "gui.screenpokechecker.nature": "Nature",
    "gui.screenpokechecker.growth": "Growth",
    "gui.screenpokechecker.forget1": "Are you sure you'd like",
    "gui.screenpokechecker.forget2": "%s to forget",
    "gui.screenpokechecker.disable": "disable",
    "gui.screenpokechecker.enable": "enable",
    "gui.screenpokechecker.move": "to %s leveling?",
    "gui.screenpokechecker.effects": "Effects",
    "gui.screenpokechecker.form": "%s Form",
    "gui.screenpokechecker.palette": "%s Palette",

    "gui.pixelmonspawner.fireontick": "Fire on Tick",
    "gui.pixelmonspawner.fireonredstone": "Fire on Redstone",
    "gui.pixelmonspawner.fireifpowered": "Fire if Powered",
    "gui.pixelmonspawner.pcms": "Pixelmon Custom Mob Spawner",
    "gui.pixelmonspawner.pokemonlist": "Pokémon List",
    "gui.pixelmonspawner": "Pokémon Name",
    "gui.pixelmonspawner.rarity": "Rarity",
    "gui.pixelmonspawner.spawntick": "Spawn Tick",
    "gui.pixelmonspawner.radius": "Spawn Radius",
    "gui.pixelmonspawner.maxspawns": "Max Spawns",
    "gui.pixelmonspawner.minspawns": "Min Spawns",
    "gui.pixelmonspawner.maxlevel": "Max Level",
    "gui.pixelmonspawner.minlevel": "Min Level",
    "gui.pixelmonspawner.bossratio": "Boss Ratio",
    "gui.pixelmonspawner.aggression": "Aggression",
    "gui.pixelmonspawner.spawnlocation": "Spawn Location",

    "gui.creativeinv.fainted": "Fainted",
    "gui.creativeinv.hp": "HP",

    "gui.trainereditor.randomize": "Randomize",
    "gui.trainereditor.edit": "Edit",
    "gui.trainereditor.more": "More",
    "gui.trainereditor.trainereditor": "Trainer Editor",
    "gui.trainereditor.bosstype": "Boss Type",
    "gui.trainereditor.aimode": "Movement AI",
    "gui.trainereditor.battleaimode": "Battle AI",
    "gui.trainereditor.encountermode": "Encounter Mode",
    "gui.trainereditor.battletype": "Battle Type",
    "gui.trainereditor": "Name",
    "gui.trainereditor.model": "Model",
    "gui.trainereditor.lvl": "Lvl",
    "gui.trainereditor.additem": "Add Item",
    "gui.trainereditor.moreinfo": "Trainer Editor - More Info",
    "gui.trainereditor.greeting": "Greeting",
    "gui.trainereditor.win": "Win",
    "gui.trainereditor.lose": "Lose",
    "gui.trainereditor.winmoney": "Win Money",
    "gui.trainereditor.winningdrops": "Winning Drops",
    "gui.trainereditor.adddrops": "Add Drops",
    "gui.trainereditor.enteritemname": "Enter Item Name or ID",
    "gui.trainereditor.randomise": "Randomize",
    "gui.trainereditor.add": "Add",
    "gui.trainereditor.deletepoke": "Delete Pokémon",
    "gui.trainereditor.deletelastpoke": "Delete Last Pokémon",
    "gui.trainereditor.pokemoneditor": "Trainer Editor - Pokémon Editor",
    "gui.trainereditor.normal": "Normal",
    "gui.trainereditor.special": "Special",
    "gui.trainereditor.mega": "Mega",
    "gui.trainereditor.male": "Male",
    "gui.trainereditor.female": "Female",
    "gui.trainereditor.changepokemon": "Change Pokémon",
    "gui.trainereditor.nickname": "Nickname",
    "gui.trainereditor.growth": "Growth",
    "gui.trainereditor.gender": "Gender",
    "gui.trainereditor.palettes": "Palettes",
    "gui.trainereditor.partypokemon": "Party Pokémon",
    "gui.trainereditor.delete": "Delete Trainer",
    "gui.trainereditor.advanced": "Advanced",
    "gui.trainereditor.evs": "EVs",
    "gui.trainereditor.ivs": "IVs",
    "gui.trainereditor.maxivs": "Max IVs",
    "gui.trainereditor.minivs": "Min IVs",
    "gui.trainereditor.randomivs": "Random IVs",
    "gui.trainereditor.resetevs": "Reset EVs",
    "gui.trainereditor.helditem": "Held Item",
    "gui.trainereditor.form": "Form",
    "gui.trainereditor.oldgen": "Generation",
    "gui.trainereditor.megaitem": "Special Evolution",
    "gui.trainereditor.engagedistance": "Engage Distance",

    "gui.npceditor.despawn": "Despawn",
    "gui.npceditor.page1": "Page 1",
    "gui.npceditor.page2": "Page 2",
    "gui.npceditor.page3": "Page 3",
    "gui.npceditor.page4": "Page 4",
    "gui.npceditor.copyuuid": "Copy UUID",

    "gui.questeditor.edit": "Edit",
    "gui.questeditor.test": "???",
    "gui.questeditor.clone": "Clone",
    "gui.questeditor.delete": "Delete",
    "gui.questeditor.noselection": "No Quest Selected",
    "gui.questeditor.title": "Quest Editor",
    "gui.questeditor.weight": "Weight %s",
    "gui.questeditor.abandonable": "Abandonable",
    "gui.questeditor.notabandonable": "Not Abandonable",
    "gui.questeditor.repeatable": "Repeatable",
    "gui.questeditor.notrepeatable": "Not Repeatable",
    "gui.questeditor.edittext": "Edit Text",
    "gui.questeditor.editstage": "Edit",
    "gui.questeditor.removestage": "Remove",

    "gui.tradereditor.offer": "Offer:",
    "gui.tradereditor.exchange": "Exchange:",
    "gui.tradereditor.description": "Trade Description:",
    "gui.tradereditor.delete": "Delete Trader",
    "gui.tradereditor.changeTrainer": "Change to Trainer",
    "gui.tradereditor.random": "Randomize",
    "gui.trainereditor.changeTrader": "Change to Trader",

    "gui.confirmdeletenpc.delete": "Are you sure you want to delete this npc?",
    "gui.cosmetic.back": "Back to Menu",

    "gui.chooseNPC.trainer": "Create NPC Trainer",
    "gui.chooseNPC.trader": "Create Trader",
    "gui.chooseNPC.chatting": "Create Chatting NPC",
    "gui.chooseNPC.quest": "Create Quest Giver",
    "gui.chooseNPC.relearner": "Create Move Relearner",
    "gui.chooseNPC.tutor": "Create Move Tutor",
    "gui.chooseNPC.transfer_tutor": "Create Transfer Tutor",
    "gui.chooseNPC.nursejoy": "Create Nurse",
    "gui.chooseNPC.doctor": "Create Doctor",
    "gui.chooseNPC.shopkeeper": "Create Shopkeeper",
    "gui.chooseNPC.oldfisherman": "Create Old Fisherman",

    "gui.shopkeeper.json": "Type",

    "gui.pokemoneditor.title": "Pokémon Editor",
    "gui.pokemoneditor.pokeball": "Poké Ball",
    "gui.pokemoneditor.importexport": "Import/Export",
    "gui.pokemoneditor.save": "Save",
    "gui.pokemoneditor.reset": "Reset",
    "gui.pokemoneditor.cancel": "Cancel",
    "gui.pokemoneditor.errorimport": "Import error",
    "gui.pokemoneditor.notallowedserver": "You are not allowed to use Pokémon editors.",
    "gui.pokemoneditor.notallowedplayer": "%s does not allow Pokémon editors.",
    "gui.pokemoneditor.editedplayer": "%s is editing your Pokémon.",
    "gui.pokemoneditor.cancelediting": "%s canceled your editing.",
    "gui.pokemoneditor.clones": "Clones",
    "gui.pokemoneditor.lake_enchants": "Enchants",
    "gui.pokemoneditor.smelts": "Smelts",

    "gui.chisel.notallowedserver": "You are not allowed to use Chisels.",

    "gui.overlay1v1.lv": "Lv.",

    "gui.starter.trademark1": "This is a fan-made mod. All trademarks and copyright for Pokémon are owned",
    "gui.starter.trademark2": "by Nintendo and Game Freak Inc.",
    "gui.starter.trademark3": "Support Nintendo/Game Freak by buying Pokémon Sword and Shield.",
    "gui.starter.trademark4": "Welcome to the world of Pokémon!! Thank you for installing this mod!",
    "gui.starter.trademark5": "Now, please pick your desired starter Pokémon!",
    "gui.starter.comingsoon": "Coming Soon...",
    "gui.starter.disabled": "Disabled",
    "gui.starter.begin": "Begin your adventure!",

    "gui.pc.box": "Box: %s",
    "gui.pc.rename": "Rename",
    "gui.pc.wallpaper": "Wallpaper",
    "gui.pc.search": "Search",
    "gui.pc.releasewarning": "Are you sure you want to release %s?",

    "gui.selectpokemon.message": "Select a Pokémon!",

    "gui.animate.text": "Animate",
    "gui.update.text": "Update",
    "gui.label.text": "Label",
    "gui.save.text": "Save",
    "gui.texture.text": "Texture",
    "gui.cancel.text": "Cancel",
    "gui.description.text": "Description",
    "gui.boss.text": "Boss:",

    "gui.mail.seal": "Seal letter",
    "gui.mail.close": "Close letter",

    "gui.nursejoy": "Nurse Joy",
    "gui.nursejoy.healing": "Let me just heal those Pokémon for you!",
    "gui.nursejoy.full": "I'm sorry. I can't find an available healer.",

    "gui.shopkeeper.money": "Money",
    "gui.shopkeeper.price": "Price",
    "gui.shopkeeper.quantity": "Quantity",
    "gui.shopkeeper.buy": "Buy",
    "gui.shopkeeper.sell": "Sell",
    "gui.shopkeeper": "Shopkeeper",

    "gui.oldfisherman.general": "I'm an old hand at fishing, so let me know if you want an assessment of your equipment.",
    "gui.oldfisherman.general2": "(Bring a fishing rod to this NPC to have it appraised for Jump! fishing!)",
    "gui.oldfisherman.givekarplog": "Oh! It looks like you've found an unusual Magikarp! Take this, it will help you track the different forms.",
    "gui.oldfisherman.givecloblog": "Oh! It looks like you've found an unusual Clobbopus! Take this, it will help you track the different forms.",
    "gui.oldfisherman.giveshelloslog": "Oh! It looks like you've found an unusual Shellos! Take this, it will help you track the different forms.",
    "gui.oldfisherman.assess": "You've got something you want me to take a look at?",
    "gui.oldfisherman.alreadychecked": "It looks like that one has been assessed already!",
    "gui.oldfisherman.rod.quality0": "It seems there is nothing special about that fishing rod.",
    "gui.oldfisherman.rod.quality1": "It seems like that fishing rod is in an OK condition.",
    "gui.oldfisherman.rod.quality2": "It seems like that fishing rod is in good condition.",
    "gui.oldfisherman.rod.quality3": "It seems like that fishing rod is in great condition!",
    "gui.oldfisherman.rod.quality4": "Oh? That is an excellent fishing rod!",
    "gui.oldfisherman.rod.quality5": "Oh? That fishing rod looks fit for a professional!",
    "gui.oldfisherman.rod.quality6": "Oh! That fishing rod is in the best condition I've ever seen!",
    "gui.oldfisherman.rod.oas": "Wow! That looks like Oa10712's personal fishing rod! I've heard he made it specially for catching unusual patterned Pokémon!",

    "gui.tooltip.collapsed": "Sneak for more info",

    "gui.currydex.koffing": "Koffing Class",
    "gui.currydex.wobbuffet": "Wobbuffet Class",
    "gui.currydex.milcery": "Milcery Class",
    "gui.currydex.copperajah": "Copperajah Class",
    "gui.currydex.charizard": "Charizard Class",

    "gui.currydex.koffing.desc": "Very small amount of experience.\\nRestores 25%% of HP.\\nVery small boost to friendship.",
    "gui.currydex.wobbuffet.desc": "Small amount of experience.\\nRestores 50%% of HP.\\nSmall boost to friendship.",
    "gui.currydex.milcery.desc": "Medium amount of experience.\\nFully restores HP and status.\\nMedium boost to friendship.",
    "gui.currydex.copperajah.desc": "Large amount of experience.\\nFully restores HP and PP and status.\\nLarge boost to friendship.",
    "gui.currydex.charizard.desc": "Very large amount of experience.\\nFully restores HP and PP and status.\\nVery large boost to friendship.",

    "gui.currydex.dish_curry_rich.bitter": "The umami is so powerful that it practically numbs your tongue, the taste of the ingredients is strongly complimented by the bitter flavoring.",
    "gui.currydex.dish_curry_rich.dry": "The delightful dry flavours of the curry roux bring out the rich flavor of the tinned foods in this really superb dish.",
    "gui.currydex.dish_curry_rich.none": "The flavors added to the curry’s taste by this tin’s content are so pleasing that once you go Bach, you never go back.",
    "gui.currydex.dish_curry_rich.sour": "The tinned foods are coated by the acidic seasoning of the curry roux to create a dish that you would never get tired of.",
    "gui.currydex.dish_curry_rich.spicy": "The mouth watering combination of the umami of the tinned foods and the spiciness of the curry roux makes a delicious dish.",
    "gui.currydex.dish_curry_rich.sweet": "With strong sweetness and profound richness, this is a dish that any curry connoisseur would love.",
    "gui.currydex.dish_curry_beans.bitter": "The taste of the beans is neutralized by the bitterness of the curry roux. Even people who hate beans can enjoy this dish.",
    "gui.currydex.dish_curry_beans.dry": "The dry tasting curry roux and the light umami of the beans combine together to form a simple taste that you never get tired of eating.",
    "gui.currydex.dish_curry_beans.none": "The properly prepared boiled beans and the by-the-book curry roux work together to produce a rather simple taste.",
    "gui.currydex.dish_curry_beans.sour": "The acidic curry roux and the pleasant texture of the beans work together in delightful harmony.",
    "gui.currydex.dish_curry_beans.spicy": "The natural sweetness of the beans and the strong spicy taste of the curry roux combines together to make an enjoyable contrast.",
    "gui.currydex.dish_curry_beans.sweet": "Even though this curry has a sweet flavor, the sweetness is mellowed by the simple taste of the beans that are added to create a flavor with some depth.",
    "gui.currydex.dish_curry_juicy.bitter": "The bitter notes are faint within the rich wave of oil, but they still provide a presence that can’t be denied.",
    "gui.currydex.dish_curry_juicy.dry": "The amalgamation of both dry and oily textures bring an extra layer of deliciousness and infuse the curry with lots of unexpected flavor.",
    "gui.currydex.dish_curry_juicy.none": "Bob’s food tin is so rich by itself that you could eat it alone, but let’s face it, curries are so much better.",
    "gui.currydex.dish_curry_juicy.sour": "The interesting flavor of the ingredients is suppressed by the acidic curry roux, only the umami is drawn out as a result.",
    "gui.currydex.dish_curry_juicy.spicy": "The spicy seasoning and the special kick of the tinned foods unite to create this masterpiece.",
    "gui.currydex.dish_curry_juicy.sweet": "The unusual medley of the sweetened curry and the juice from the tin create a mysterious blend that’s taste is exceptional beyond belief.",
    "gui.currydex.dish_curry_boiled_egg.bitter": "The bitter taste of the curry becomes rich when mixed with the egg. It’s not easy to have enough of it.",
    "gui.currydex.dish_curry_boiled_egg.dry": "The dry seasoning has a tendency to bring out the sweetness of whatever it’s paired with. And this egg is no exception.",
    "gui.currydex.dish_curry_boiled_egg.none": "The egg’s unique flavor is really brought out in this curry. Makes you wonder where it came from...",
    "gui.currydex.dish_curry_boiled_egg.sour": "Boiled egg whites are normally quite bland. However, that quickly changes when paired with the acidity of this dish.",
    "gui.currydex.dish_curry_boiled_egg.spicy": "With an extra touch of spice, the curry and the egg both bring out some delicious savoury notes.",
    "gui.currydex.dish_curry_boiled_egg.sweet": "Adding some sweetness to the egg’s rich taste makes for a heart touching delicacy.",
    "gui.currydex.dish_curry_bread.bitter": "The flavor of the roasted toast makes for an interesting match with the bitter curry roux",
    "gui.currydex.dish_curry_bread.dry": "Mix a teared-up bread with the curry roux to make everything easier to eat.",
    "gui.currydex.dish_curry_bread.none": "With such an amateur flavor, people can actually enjoy combining two kinds of food such as bread and curry.",
    "gui.currydex.dish_curry_bread.sour": "The fluffy texture of the toast and the acidic seasoning of the roux work together to give this dish such an intense flavor",
    "gui.currydex.dish_curry_bread.spicy": "Surprisingly enough, placing bread inside the curry roux will make for a crunch that just won’t quit.",
    "gui.currydex.dish_curry_bread.sweet": "Sweet bread and sweet curry can be good, but I’m not too sure about eating the two things together.",
    "gui.currydex.dish_curry_bone.bitter": "The strong flavour of the bones helps to overwhelm any particularly bitter notes the curry may have, creating a truly pleasant dish.",
    "gui.currydex.dish_curry_bone.dry": "A Marowak’s favourite curry, the umami flavour in the bones is accentuated when mixed with the dry roux.",
    "gui.currydex.dish_curry_bone.none": "Allegedly made with the bones of Pidgeys, Spearows, and Pidoves, the bones bring a delicious, clean flavour after being left to simmer with the curry.",
    "gui.currydex.dish_curry_bone.sour": "The acidity of the roux helps to draw out the flavour of the bone, leaving a piquant curry with an incredible aftertaste.",
    "gui.currydex.dish_curry_bone.spicy": "When the spicy seasoning is added in to simmer with the bones, the flavours combine into something truly marvelous once mixed in with the curry.",
    "gui.currydex.dish_curry_bone.sweet": "While the bones may not seem like they would work well with such a sweet curry roux, they actually shine when mixed together!",
    "gui.currydex.dish_curry_coconut.bitter": "This fascinating dish uses the sweetness of the coconut milk and the bitterness of the curry to leave a taste on your mouth that you won’t soon forget.",
    "gui.currydex.dish_curry_coconut.dry": "The savoury combination of the dry taste of the curry and the sweet taste of the coconut milk will leave you craving more.",
    "gui.currydex.dish_curry_coconut.none": "The coconut milk mixed in with the curry gives it a smooth texture and a rich flavour that’s outrageously tasty!",
    "gui.currydex.dish_curry_coconut.sour": "This dish is extremely popular among the youth. The sweetness of the milk pairs really nicely with the acidic seasoning of the curry roux.",
    "gui.currydex.dish_curry_coconut.spicy": "A lingering kick is contrasted by a soothing coconut milk that runs throughout the curry creating a very complex flavour.",
    "gui.currydex.dish_curry_coconut.sweet": "The milk’s sweetness helps make this tasty curry easy on the stomach. Allegedly, the milk is from a legendary Gogoat.",
    "gui.currydex.dish_curry_apple.bitter": "The subtle sweetness in the apple reverberates in your mouth as you take in the bitterness from the curry.",
    "gui.currydex.dish_curry_apple.dry": "This juicy and sweet dish overwhelms the dry dish creating an addicting aftertaste",
    "gui.currydex.dish_curry_apple.none": "A simple yet elegant and addicting combination. Hey you, do you know Gods of Death love apples?",
    "gui.currydex.dish_curry_apple.sour": "By using a sour apple, the acidity of the curry is encentunated to its extremes",
    "gui.currydex.dish_curry_apple.spicy": "The sweet and spicy combination created provides a harmonious dish reminiscent of many other tasty combinations",
    "gui.currydex.dish_curry_apple.sweet": "The elegant scent perfuming from the curry combined with the crispiness of the apples entertains your nose and mouth to no end",
    "gui.currydex.dish_curry_cream.bitter": "Surprisingly tasty as the bitter curry roux has become quite mild with the addition of cream.",
    "gui.currydex.dish_curry_cream.dry": "A subtle umami flavour is present as the richness of the cream is mixed with the dry curry.",
    "gui.currydex.dish_curry_cream.none": "Even younger kids can enjoy this curry due to the mild taste provided by the cream.",
    "gui.currydex.dish_curry_cream.sour": "Perfectly balanced, as all things should be. The acidity mixed with the sweetness of the cream creates an exceptional taste.",
    "gui.currydex.dish_curry_cream.spicy": "The sweetness from the cream and the spiciness of the seasoning combine to create a strange but intriguing flavour.",
    "gui.currydex.dish_curry_cream.sweet": "An overwhelming sweetness makes this curry closer to a desert, but still delicious.",
    "gui.currydex.dish_curry_fried_food.bitter": "Calories are everywhere in this curry, but it doesn’t mean you can’t eat it.",
    "gui.currydex.dish_curry_fried_food.dry": "I wouldn’t call this ‘’fried food’’ but it sure is an interesting mix of food and dryness.",
    "gui.currydex.dish_curry_fried_food.none": "Your stomach may not like this too much over time, but it really is worth a try.",
    "gui.currydex.dish_curry_fried_food.sour": "The distinct acidity of the seasonings help mitigate the oiliness of the fried foods, allowing you to finish this dish without getting tired of it.",
    "gui.currydex.dish_curry_fried_food.spicy": "The fried foods are covered in a thick crust and soaked in oil. It's enough to overpower even the spicy seasoning.",
    "gui.currydex.dish_curry_fried_food.sweet": "The mix of flavors of the fried food and the sweet curry roux are a taste that you sure won’t forget in a long time.",
    "gui.currydex.dish_curry_tropical.bitter": "Sometimes, having opposite flavors in a dish can make for a truly amazing taste experience. This is one of those times.",
    "gui.currydex.dish_curry_tropical.dry": "The sugars in the fruit are drawn out by the seasoning, making it even tastier.",
    "gui.currydex.dish_curry_tropical.none": "The fruity taste of this dish has been often compared to the breeze of a tropical island.",
    "gui.currydex.dish_curry_tropical.sour": "This fruit is quite sweet, but the taste is enhanced by the acidity of the roux. A really good combo overall.",
    "gui.currydex.dish_curry_tropical.spicy": "The spiciness of this curry goes well with the sweetness of the fruit, making it more manageable.",
    "gui.currydex.dish_curry_tropical.sweet": "This dish is sweet all around, from the roux and the fruit. This makes it a favourite among sweet-toothed children.",
    "gui.currydex.gigantamix.none": "Who knew that Gigantamix could provide a umami flavor this powerfully violent!",
    "gui.currydex.dish_curry_instant_noodle.bitter": "The strong, bitter seasoning helps to transform the taste of the instant noodles into something more genuine.",
    "gui.currydex.dish_curry_instant_noodle.dry": "When the dry tasting curry roux and the instant noodles intermix, they evolve to create a deliciousness that's a rank above.",
    "gui.currydex.dish_curry_instant_noodle.none": "When the instant noodles and the curry were combined, they became exactly what you'd expect--the perfect college meal",
    "gui.currydex.dish_curry_instant_noodle.sour": "The powerful acidic taste of the curry roux makes up for the lackluster instant noodles, making this dish pretty tasty.",
    "gui.currydex.dish_curry_instant_noodle.spicy": "The spiciness of the curry combined with instant noodles create a match made in heaven for the average student all-nighters.",
    "gui.currydex.dish_curry_instant_noodle.sweet": "The artificial flavor of the instant noodles actually makes for a pretty good pair with the sweet tasting curry roux.",
    "gui.currydex.dish_curry_leek.bitter": "Fresh organic leek does wonders to help strengthen the bitter aftertaste of this curry.",
    "gui.currydex.dish_curry_leek.dry": "Leeks contain a surprising amount of liquid, which lends a hand to the drier curry roux extenuating this flavor profile",
    "gui.currydex.dish_curry_leek.none": "While the leek accounts for the majority of this dish, its unique flavor provides a tasty complement to otherwise bland dish",
    "gui.currydex.dish_curry_leek.sour": "The acidic taste from the curry helps invigorate the tongue which bolsters the striking sweetness that the leek provides",
    "gui.currydex.dish_curry_leek.spicy": "The sweetness originating from the leeks helps dull the spiciness of the curry allowing those with lower tolerance to enjoy a delicious dish",
    "gui.currydex.dish_curry_leek.sweet": "Fartfetch has a good eye for leeks, the sweetness of the curry roux brings out the true umami of the large leeks",
    "gui.currydex.dish_curry_mushroom.bitter": "The mushrooms strengthen the bitter taste of this distinctive curry into an even stronger sensation.",
    "gui.currydex.dish_curry_mushroom.dry": "The combined flavors of various kinds of mushrooms makes the dry flavor of the curry roux milder.",
    "gui.currydex.dish_curry_mushroom.none": "Favoured by a certain famous plumber, the umami of the mushrooms give the curry a more hearty flavour.",
    "gui.currydex.dish_curry_mushroom.sour": "The acidic flavor of the curry roux and the rich mushrooms create an intricate sensation, but works together to create an umami aftertaste that leaves you wanting more.",
    "gui.currydex.dish_curry_mushroom.spicy": "Making the spicy curry roux as striking as possible is the key to bringing out the umami of the mushrooms.",
    "gui.currydex.dish_curry_mushroom.sweet": "The crisp mushrooms and the clad in the sweet curry roux work together to make an exquisite texture.",
    "gui.currydex.dish_curry_cheese.bitter": "This is a dish where too much cheese is never a bad idea. The bitter flavor goes well with it.",
    "gui.currydex.dish_curry_cheese.dry": "The dry seasoning in this dish is only made stronger by a large helping of cheese.",
    "gui.currydex.dish_curry_cheese.none": "Many enjoy the richness of this dish. It’s hard to go wrong with cheese.",
    "gui.currydex.dish_curry_cheese.sour": "The sweetness of the cheese and the sourness of the curry roux combine extremely well, to a point where it almost becomes addictive.",
    "gui.currydex.dish_curry_cheese.spicy": "What would have been a pretty spicy curry is instead brought down to just the right level of heat by this rich cheese.",
    "gui.currydex.dish_curry_cheese.sweet": "The curry roux is kinda sweet, but the taste is really enhanced by the cheese.",
    "gui.currydex.dish_curry_plain.bitter": "For people who love bitterness, this is a simple yet good masala for your taste.",
    "gui.currydex.dish_curry_plain.dry": "This has a masala that many can enjoy because of the strong dryness its aroma has.",
    "gui.currydex.dish_curry_plain.none": "The aroma of the masala tickles the nose in this extremely simple, basic curry.",
    "gui.currydex.dish_curry_plain.sour": "The aroma of this masala mellows out the strong acid smell.",
    "gui.currydex.dish_curry_plain.spicy": "The masala in this simple dish complements the spiciness well.",
    "gui.currydex.dish_curry_plain.sweet": "Who wouldn’t want a sweet masala like this one? It’s simple and effective.",
    "gui.currydex.dish_curry_decorative.bitter": "Despite how cute it looks, the bitterness in this dish is so powerful that it makes water look sweet in comparison.",
    "gui.currydex.dish_curry_decorative.dry": "This curry has truly captivating decorations but an extremely unpleasant dry flavor.",
    "gui.currydex.dish_curry_decorative.none": "This curry favors appearance over taste and is ideal for taking pictures to share.",
    "gui.currydex.dish_curry_decorative.sour": "Despite its appearance it has a weird sour taste that gives you a mysterious feeling when you eat it.",
    "gui.currydex.dish_curry_decorative.spicy": "Despite its cute look, it is too spicy and it is not as delicious as other curries.",
    "gui.currydex.dish_curry_decorative.sweet": "This dish is extremely popular among children because of it’s cute look and extremely sweet taste.",
    "gui.currydex.dish_curry_pasta.bitter": "The strong bitter notes of the spices are rich enough that you really need the pasta to help balance them out.",
    "gui.currydex.dish_curry_pasta.dry": "Even the dry taste matches up really well with the pasta. This dish allows you to enjoy both rice and pasta.",
    "gui.currydex.dish_curry_pasta.none": "This delicious dish allows you to enjoy pasta, rice and curry all in one dish. It is great at filling you up when you are hungry!",
    "gui.currydex.dish_curry_pasta.sour": "When you really want to eat some pasta, this dish is a highly recommended choice. It’s strong acidic curry roux keeps you eating to the last bite.",
    "gui.currydex.dish_curry_pasta.spicy": "To get the most out of the spicy flavor, it is highly recommended that you mix up the dish before eating it.",
    "gui.currydex.dish_curry_pasta.sweet": "Despite how it looks, It has an amazing taste. The sweet curry goes very well with the rice and the pasta.",
    "gui.currydex.dish_curry_potato.bitter": "The bitterness of the curry roux and the sweetness of the potatoes combine together to make a truly superior combination.",
    "gui.currydex.dish_curry_potato.dry": "The dry curry roux thickly coates the potatoes and creates a deliciousness that can’t be expressed through words.",
    "gui.currydex.dish_curry_potato.none": "This simple and delicious curry is stuffed with soft and flakey potatoes.",
    "gui.currydex.dish_curry_potato.sour": "The potatoes are intentionally left unseasoned to pair well with the acidity of the curry roux.",
    "gui.currydex.dish_curry_potato.spicy": "The potatoes and the spiciness of the curry roux work together to create an amazing taste that you won’t be able to get enough of.",
    "gui.currydex.dish_curry_potato.sweet": "The simple tastiness of the potatoes and the sweet seasoning of the curry roux play off each other in a delightful way to create this amazing dish.",
    "gui.currydex.dish_curry_burger.bitter": "The burger's oil and the bitter seasoning make a great pair. It's hard to go wrong with this dish.",
    "gui.currydex.dish_curry_burger.dry": "Though the burger has a lot of oil, the curry roux's dry flavor keeps the dish easy for any lightweights to eat.",
    "gui.currydex.dish_curry_burger.none": "Breaking up the burger into the curry, mixing it, and eating it that way creates a super effective taste.",
    "gui.currydex.dish_curry_burger.sour": "Like the scorn hearts of a woman this acidic curry roux has a kick to it that really brings out the umami of the burger, making a delicious meal.",
    "gui.currydex.dish_curry_burger.spicy": "The spicy curry roux and the juicy burger form a combination that'll keep even micky d worried.",
    "gui.currydex.dish_curry_burger.sweet": "Just like jigglypuff’s singing this dish comes with an acquired taste. The sweet curry roux and burger make for a very strong punch.",
    "gui.currydex.dish_curry_herb.bitter": "The striking taste and aroma of the root makes an excellent pair with the bitter curry roux. Adults tend to like this dish more than kids do.",
    "gui.currydex.dish_curry_herb.dry": "The delicious flavor of the root makes the heavy dryness of the curry roux more invigorating and delicious. This is a dish that many people enjoy.",
    "gui.currydex.dish_curry_herb.none": "The spice of the root gives the simple curry roux a delightful taste.",
    "gui.currydex.dish_curry_herb.sour": "The peculiar aroma of the root paired with the sour curry roux makes a truly enticing dish. This dish is a must try for curry aficionados.",
    "gui.currydex.dish_curry_herb.spicy": "The spiciness of the root paired with the intense spicy heat of the curry roux is a must have for anyone who loves spicy foods.",
    "gui.currydex.dish_curry_herb.sweet": "The intense spiciness and aroma of the root is made more appetizing by the sweet seasoning.",
    "gui.currydex.dish_curry_salad.bitter": "The bitter seasonings in the roux are emphasized by the sweet vegetables in the mixture.",
    "gui.currydex.dish_curry_salad.dry": "The moistness of the lettuce and peppers helps balance out the dry curry roux, creating an exceptionally soft and easy to eat dish.",
    "gui.currydex.dish_curry_salad.none": "A very healthy yet sweet dish composed of numerous vegetables mixed with the traditional curry roux.",
    "gui.currydex.dish_curry_salad.sour": "The mixture’s lettuce stops the acidic flavouring of the roux from overwhelming while keeping it prominent enough to pack a nice punch.",
    "gui.currydex.dish_curry_salad.spicy": "An incredibly tasty dish in which the spicy seasoning heightens the umami flavour of the vegetables.",
    "gui.currydex.dish_curry_salad.sweet": "The sweetness of the curry roux helps to exemplify the sweetness already present from the vegetables, leaving a profound flavour.",
    "gui.currydex.dish_curry_sausage.bitter": "The bitterness of the curry strengthens the unami of the sausage many times over.",
    "gui.currydex.dish_curry_sausage.dry": "The juice and oil of the sausage enwraps the drier curry creating an easy to eat dish",
    "gui.currydex.dish_curry_sausage.none": "The simplicity of the curry seasoning enhances the flavor profile of the juicy sausage",
    "gui.currydex.dish_curry_sausage.sour": "The acidity of the curry combined with the rich sweet sausage creates a flavor profile reminiscent of Sour Patch Kids.",
    "gui.currydex.dish_curry_sausage.spicy": "The spiciness of the curry creates a craving for the juicy sausage in the dish, making you unable to stop making more bites of the deliciousness",
    "gui.currydex.dish_curry_sausage.sweet": "Sweetened curry complements the richness of the sausage creating a sweet but not overly sweet dish that any kid would enjoy.",
    "gui.currydex.dish_curry_smoke_poke.bitter": "The dripping fat from a smoked slowpoke tail makes the bitter taste of the curry much more mild.",
    "gui.currydex.dish_curry_smoke_poke.dry": "Dry seasonings help complement the taste of the tail, combined with the curry this creates a happy and different flavor profile.",
    "gui.currydex.dish_curry_smoke_poke.none": "A classic dish that is hard to beat, the tail’s umami brings the curry to the next level",
    "gui.currydex.dish_curry_smoke_poke.sour": "The acidity of the curry helps to balance the juice and flavor of the smoked meat. This helps to create a well rounded tasty meal.",
    "gui.currydex.dish_curry_smoke_poke.spicy": "The sharp bite of spices combines with the overflowing juice of the tail creating a mouthwatering dish",
    "gui.currydex.dish_curry_smoke_poke.sweet": "The fragrance of the slowpoke tail complements the sweet seasoning of the curry creating a wondrous aroma",
    "gui.currydex.dish_curry_seasoned.bitter": "The bitterness and pungent kick of the spices creates an unnatural yet engrossing flavor intriguing the tongue",
    "gui.currydex.dish_curry_seasoned.dry": "The Colonel’s 11 herbs and spice mixture makes even this dry and boring dish delicious",
    "gui.currydex.dish_curry_seasoned.none": "A basic yet stunning curry, well seasoned and stimulating for the tongue",
    "gui.currydex.dish_curry_seasoned.sour": "The aroma of the spices draws you into the distinct sour taste of the curry, creating a distinct harmony",
    "gui.currydex.dish_curry_seasoned.spicy": "The additional spicy heat added onto the spice mixture creates a tangy complex texture that burns on the tongue",
    "gui.currydex.dish_curry_seasoned.sweet": "The punch of the spices is mitigated by the sweetness of the curry, this however creates a harmonious complement",

    "pixelmon.gui.zygarde_reassembly.select": "What would you like to do?",
    "pixelmon.gui.zygarde_reassembly.assembly": "Assembly",
    "pixelmon.gui.zygarde_reassembly.with_zygarde": "Assembly with Zygarde",
    "pixelmon.gui.zygarde_reassembly.separation": "Separation",
    "pixelmon.gui.zygarde_reassembly.not_zygarde": "That is not a Zygarde!",
    "pixelmon.gui.zygarde_reassembly.last_pokemon": "You cannot separate your last pokémon!",
    "pixelmon.gui.zygarde_reassembly.missingcells": "You do not have enough cells to construct Zygarde!",
    "pixelmon.gui.zygarde_reassembly.separation.select": "Please select the Zygarde you would like to separate.",
    "pixelmon.gui.zygarde_reassembly.separation.cannot": "You cannot separate a Zygarde with Power Construct!",
    "pixelmon.gui.zygarde_reassembly.separation.confirm": "Are you sure you would like to separate this Zygarde into its cells?",
    "pixelmon.gui.zygarde_reassembly.with_zygarde.select": "Please select the Zygarde you would like to combine cells with.",
    "pixelmon.gui.zygarde_reassembly.with_zygarde.cannot": "That Zygarde is already 100%%!",
    "pixelmon.gui.zygarde_reassembly.with_zygarde.10to100": "This Zygarde will be combined with 90 cells from your Zygarde Cube to construct Zygarde 50%% with Power Construct!",
    "pixelmon.gui.zygarde_reassembly.with_zygarde.10to50": "This Zygarde will be combined with 40 cells from your Zygarde Cube to construct Zygarde 50%%!",
    "pixelmon.gui.zygarde_reassembly.with_zygarde.50to100": "This Zygarde will be combined with 50 cells to construct Zygarde 50%% with Power Construct",
    "pixelmon.gui.zygarde_reassembly.with_zygarde.missingcores": "You do not have enough cores to construct Zygarde!",
    "pixelmon.gui.zygarde_reassembly.assembly.100": "The Zygarde cells will be used to construct Zygarde 50%% with Power Construct",
    "pixelmon.gui.zygarde_reassembly.assembly.50": "The Zygarde cells will be used to construct Zygarde 50%%",
    "pixelmon.gui.zygarde_reassembly.assembly.10": "The Zygarde cells will be used to construct Zygarde 10%%",
    "pixelmon.gui.zygarde_reassembly.assembly.missingcore": "You cannot construct Zygarde without a core!",

    "pixelmon.gui.zygarde_cube.toggleforme": "Change Forme",
    "pixelmon.gui.zygarde_cube.teachmove": "Teach Move",
    "pixelmon.gui.zygarde_cube.select": "Please select the action you would like to preform.",
    "pixelmon.gui.zygarde_cube.nomoves": "You don't have any moves to teach this Zygarde!",
    "pixelmon.gui.zygarde_cube.learnmove": "What move would you like to teach Zygrade?",

    "gui.shopkeepereditor.refreshItems": "Refresh Items",

    "gui.model.standing": "Standing",
    "gui.model.flying": "Flying",
    "gui.model.animation": "Animation",
    "gui.model.frame": "Frame",
    "gui.model.walk": "Walking",
    "gui.model.idle": "Idle",
    "gui.model.fly": "Flying",
    "gui.model.swim": "Swimming",
    "gui.model.idleswim": "Idle Swimming",
    "gui.model.special": "Special",
    "gui.model.special2": "Special 2",
    "gui.model.special3": "Special 3",

    "gui.megaitem.message": "You've found a Key Stone! How do you want to equip it?",
    "gui.dynamaxitem.message": "You've found a Wishing Star! How do you want to equip it?",
    "gui.shinycharm.message": "You've found a Shiny Charm! How do you want to equip it?",
    "gui.ovalcharm.message": "You've found an Oval Charm! How do you want to equip it?",
    "gui.expcharm.message": "You've found an Exp. Charm! How do you want to equip it?",
    "gui.catchingcharm.message": "You've found a Catching Charm! How do you want to equip it?",
    "gui.markcharm.message": "You've found a Mark Charm! How do you want to equip it?",

    "gui.megaitem": "Key Stone",
    "gui.dynamaxitem": "Dynamax Band",
    "gui.shinycharm": "Shiny Charm",
    "gui.ovalcharm": "Oval Charm",
    "gui.expcharm": "Exp. Charm",
    "gui.catchingcharm": "Catching Charm",
    "gui.markcharm": "Mark Charm",

    "pixelmon.gui.selectstat": "Select the stat you want to hyper train",

    "gui.battlerules.title": "Battle Rules",
    "gui.battlerules.propose": "Propose",
    "gui.battlerules.change": "Change",
    "gui.battlerules.waitpropose": "%s is proposing rules.",
    "gui.battlerules.waitaccept": "%s is deciding whether to accept the rules.",
    "gui.battlerules.waitchange": "%s is changing the rules.",
    "gui.battlerules.on": "On",
    "gui.battlerules.off": "Off",
    "gui.battlerules.cancelselect": "%s has no usable Pokémon for the battle!",
    "gui.battlerules.cancelselectyou": "You have no usable Pokémon for the battle!",
    "gui.battlerules.selectteam": "Select your team!",
    "gui.battlerules.confirm": "Confirm",
    "gui.battlerules.waitselect": "Waiting for other player to select a team...",

    "gui.battlerules.levelcap": "Level Cap",
    "gui.battlerules.raisetocap": "Raise To Cap",
    "gui.battlerules.numpokemon": "# Pokémon",
    "gui.battlerules.turntime": "Turn Time",
    "gui.battlerules.teampreview": "Team Preview",
    "gui.battlerules.teamselecttime": "Team Select Time",
    "gui.battlerules.fullheal": "Full Heal",

    "gui.battlerules.description.levelcap": "The maximum level that Pokémon can be. Higher levels will be temporarily reduced to the level cap.",
    "gui.battlerules.description.raisetocap": "Temporarily raise Pokémon levels to the level cap if they are lower than the level cap.",
    "gui.battlerules.description.battletype": "The type of battle, affecting the number of active Pokémon at one time.",
    "gui.battlerules.description.numpokemon": "The number of Pokémon that can be selected for battle.",
    "gui.battlerules.description.turntime": "The number of seconds that each player is allotted to select a move.",
    "gui.battlerules.description.teampreview": "Display the opponent's team before battle and allow lead Pokémon to be picked at that time.",
    "gui.battlerules.description.teamselecttime": "The number of seconds that each player is allotted to select Pokémon for battle.",
    "gui.battlerules.description.fullheal": "Fully heal all Pokémon when the battle starts. After battle, Pokémon are reset to their previous health before the battle.",

    "gui.battlerules.clauses": "Clauses",
    "gui.battlerules.selectedclauses": "Selected Clauses",
    "gui.battlerules.pokemon": "Species Clause",
    "gui.battlerules.bag": "Bag Clause",
    "gui.battlerules.batonpass": "Baton Pass Clause",
    "gui.battlerules.batonpass1": "Baton Pass 1 Clause",
    "gui.battlerules.chatter": "Chatter Clause",
    "gui.battlerules.drizzle": "Drizzle Clause",
    "gui.battlerules.drizzleswim": "Drizzle-Swim Clause",
    "gui.battlerules.drought": "Drought Clause",
    "gui.battlerules.endlessbattle": "Endless Battle Clause",
    "gui.battlerules.evasionability": "Evasion Ability Clause",
    "gui.battlerules.evasion": "Evasion Clause",
    "gui.battlerules.inverse": "Inverse Battle",
    "gui.battlerules.item": "Item Clause",
    "gui.battlerules.forfeit": "Forfeit",
    "gui.battlerules.legendary": "Legendary Clause",
    "gui.battlerules.mega": "Mega Clause",
    "gui.battlerules.moody": "Moody Clause",
    "gui.battlerules.ohko": "OHKO Clause",
    "gui.battlerules.sandstream": "Sand Stream Clause",
    "gui.battlerules.shadowtag": "Shadow Tag Clause",
    "gui.battlerules.sky": "Sky Battle",
    "gui.battlerules.sleep": "Sleep Clause",
    "gui.battlerules.smashpass": "Smash-Pass Clause",
    "gui.battlerules.snowwarning": "Snow Warning Clause",
    "gui.battlerules.souldew": "Soul Dew Clause",
    "gui.battlerules.species": "Species Clause",
    "gui.battlerules.speedpass": "Speed-Pass Clause",
    "gui.battlerules.swagger": "Swagger Clause",
    "gui.battlerules.tier": "Tier",
    "gui.battlerules.weatherspeed": "Weather Speed Clause",

    "gui.battlerules.description.pokemon": "Prevents a team from having two or more Pokémon with the same Pokédex number",
    "gui.battlerules.description.bag": "Trainers cannot use items from their bags during battle.",
    "gui.battlerules.description.batonpass": "Pokémon with the move Baton Pass cannot be used.",
    "gui.battlerules.description.batonpass1": "Only one Pokémon on a team can have the move Baton Pass.",
    "gui.battlerules.description.chatter": "Pokémon with the move Chatter cannot be used.",
    "gui.battlerules.description.drizzle": "Pokémon with the Drizzle Ability cannot be used.",
    "gui.battlerules.description.drizzleswim": "A team cannot have a Pokémon with the Drizzle Ability and another Pokémon with the Swift Swim Ability.",
    "gui.battlerules.description.drought": "Pokémon with the Drought Ability cannot be used.",
    "gui.battlerules.description.endlessbattle": "Pokémon cannot have a combination of held items, moves, and Abilities that would allow a battle to proceed endlessly.",
    "gui.battlerules.description.evasionability": "Pokémon with the Sand Veil or Snow Cloak Abilities cannot be used.",
    "gui.battlerules.description.evasion": "Pokémon with the moves Double Team or Minimize cannot be used.",
    "gui.battlerules.description.forfeit": "The player can not forfeit the battle.",
    "gui.battlerules.description.inverse": "Type matchups are reversed.",
    "gui.battlerules.description.item": "A team cannot have multiple Pokémon with the same held item.",
    "gui.battlerules.description.legendary": "Legendary Pokémon cannot be used.",
    "gui.battlerules.description.mega": "Mega Evolution cannot be used.",
    "gui.battlerules.description.moody": "Pokémon with the Moody Ability cannot be used.",
    "gui.battlerules.description.ohko": "Pokémon with the moves Fissure, Guillotine, Horn Drill, or Sheer Cold cannot be used.",
    "gui.battlerules.description.sandstream": "Pokémon with the Sand Stream Ability cannot be used.",
    "gui.battlerules.description.shadowtag": "Pokémon with the Shadow Tag Ability cannot be used.",
    "gui.battlerules.description.sky": "Only airborne Pokémon can be used. Certain ground-reliant moves cannot be used.",
    "gui.battlerules.description.sleep": "Only one Pokémon on a team can be asleep at a time.",
    "gui.battlerules.description.smashpass": "Pokémon that have both of the moves Shell Smash and Baton Pass cannot be used.",
    "gui.battlerules.description.snowwarning": "Pokémon with the Snow Warning Ability cannot be used.",
    "gui.battlerules.description.souldew": "Latias and Latios that are holding a Soul Dew cannot be used.",
    "gui.battlerules.description.species": "A team cannot have multiple Pokémon with the same Pokédex number.",
    "gui.battlerules.description.speedpass": "A Pokémon cannot have Baton Pass, a move/Ability that boosts Speed, and a move/Ability that boosts another stat.",
    "gui.battlerules.description.swagger": "Pokémon with the move Swagger cannot be used.",
    "gui.battlerules.description.tier": "Choose the tier that players must battle with.",
    "gui.battlerules.description.weatherspeed": "A team cannot have a weather-setting Ability and an Ability that boosts Speed when that weather is active.",

    "gui.battlerules.fainted": "A fainted Pokémon cannot battle.",
    "gui.battlerules.egg": "An Egg cannot battle.",
    "gui.battlerules.clauseviolated": "This Pokémon is prohibited by the clause:",
    "gui.battlerules.fullselect": "You can't select any more Pokémon for this battle.",
    "gui.battlerules.teamviolated": "Your team violates the clause:",
    "gui.battlerules.teamviolatedforce": "Your team was adjusted due to violating the clause: %s.",

    "enum.aggro.timid": "Timid",
    "enum.aggro.default": "Default",
    "enum.aggro.passive": "Passive",
    "enum.aggro.aggressive": "Aggressive",
    "enum.trainerBoss.notboss": "Not Boss",
    "enum.trainerBoss.common": "Common",
    "enum.trainerBoss.uncommon": "Uncommon",
    "enum.trainerBoss.rare": "Rare",
    "enum.trainerBoss.epic": "Epic",
    "enum.trainerBoss.legendary": "Legendary",
    "enum.trainerBoss.ultimate": "Ultimate",
    "enum.trainerBoss.spooky": "Haunted",
    "enum.trainerBoss.drowned": "Drowned",
    "enum.trainerBoss.equal": "Equal",
    "enum.trainerAI.standstill": "Stand Still",
    "enum.trainerAI.stillandengage": "Still and Engage",
    "enum.trainerAI.wander": "Wander",
    "enum.trainerAI.wanderandengage": "Wander and Engage",
    "enum.battleAI.default": "Default",
    "enum.battleAI.random": "Random",
    "enum.battleAI.aggressive": "Aggressive",
    "enum.battleAI.tactical": "Tactical",
    "enum.battleAI.advanced": "Advanced",
    "enum.trainerEncounter.once": "Once",
    "enum.trainerEncounter.onceperday": "Once per Day",
    "enum.trainerEncounter.oncepermcday": "Once per MC Day",
    "enum.trainerEncounter.onceperplayer": "Once per Player",
    "enum.trainerEncounter.unlimited": "Unlimited",

    "enum.growth.microscopic": "Microscopic",
    "enum.growth.pygmy": "Pygmy",
    "enum.growth.runt": "Runt",
    "enum.growth.small": "Small",
    "enum.growth.ordinary": "Ordinary",
    "enum.growth.huge": "Huge",
    "enum.growth.giant": "Giant",
    "enum.growth.enormous": "Enormous",
    "enum.growth.ginormous": "Ginormous",

    "enum.nature.adamant": "Adamant",
    "enum.nature.bashful": "Bashful",
    "enum.nature.bold": "Bold",
    "enum.nature.brave": "Brave",
    "enum.nature.calm": "Calm",
    "enum.nature.careful": "Careful",
    "enum.nature.docile": "Docile",
    "enum.nature.gentle": "Gentle",
    "enum.nature.hardy": "Hardy",
    "enum.nature.hasty": "Hasty",
    "enum.nature.impish": "Impish",
    "enum.nature.jolly": "Jolly",
    "enum.nature.lax": "Lax",
    "enum.nature.lonely": "Lonely",
    "enum.nature.mild": "Mild",
    "enum.nature.modest": "Modest",
    "enum.nature.naive": "Naive",
    "enum.nature.naughty": "Naughty",
    "enum.nature.quiet": "Quiet",
    "enum.nature.quirky": "Quirky",
    "enum.nature.rash": "Rash",
    "enum.nature.relaxed": "Relaxed",
    "enum.nature.sassy": "Sassy",
    "enum.nature.serious": "Serious",
    "enum.nature.timid": "Timid",

    "enum.statuetex.originaltexture": "Original",
    "enum.statuetex.shiny": "Shiny",
    "enum.statuetex.special": "Special",
    "enum.statuetex.stone": "Stone",
    "enum.statuetex.gold": "Gold",
    "enum.statuetex.bronze": "Bronze",
    "enum.statuetex.silver": "Silver",
    "enum.statuetex.red": "Red",
    "enum.statuetex.green": "Green",
    "enum.statuetex.blue": "Blue",
    "enum.statuetex.yellow": "Yellow",
    "enum.statuetex.orange": "Orange",
    "enum.statuetex.cyan": "Cyan",
    "enum.statuetex.indigo": "Indigo",
    "enum.statuetex.magenta": "Magenta",
    "enum.statuetex.pink": "Pink",
    "enum.statuetex.gray": "Gray",
    "enum.statuetex.brown": "Brown",

    "enum.spawnlocation.land": "Land",
    "enum.spawnlocation.water": "Water",
    "enum.spawnlocation.underground": "Underground",
    "enum.spawnlocation.air": "Air",
    "enum.spawnlocation.airpersistent": "Air Persistent",
    "enum.spawnlocation.legendary": "Legendary",

    "enum.stat.hp": "HP",
    "enum.stat.attack": "Attack",
    "enum.stat.defense": "Defense",
    "enum.stat.special_attack": "Special Attack",
    "enum.stat.special_defense": "Special Defense",
    "enum.stat.speed": "Speed",
    "enum.stat.accuracy": "Accuracy",
    "enum.stat.evasion": "Evasion",

    "enum.oldGen.mega": "Gen 7",
    "enum.oldGen.dynamax": "Gen 8",
    "enum.oldGen.world": "World Setting",
    "enum.oldGen.none": "None",
    "enum.oldGen.both": "Both",

    "enum.megaItems.mega": "Mega Ring",
    "enum.megaItems.dynamax": "Dynamax Band",
    "enum.megaItems.none": "None",
    "enum.megaItems.both": "World Setting",

    "gui.battle.effect": "Effect",
    "gui.battle.description": "Description",
    "gui.battle.accuracy": "Accuracy",
    "gui.battle.power": "Power",
    "gui.battle.back": "Back",
    "gui.battle.whatdo": "What will $p do?",
    "gui.battle.type": "Type:",
    "gui.battle.accuracyval": "Accuracy %d%%",
    "gui.battle.powerval": "Power %d",
    "gui.battle.turn": "Turn %d",
    "gui.battle.waiting": "Waiting...",
    "gui.battle.turntimer": "%d second%s",
    "gui.battle.noturntimer": "No Turn Timer",
    "gui.battle.noweather": "No Weather",
    "gui.battle.noterrain": "No Terrain",
    "gui.battle.catch_combo": "Catch Combo: %s",

    "gui.levelupscreen.lvlup": "Your %s has grown to level %s!",

    "gui.mainmenu.fight": "FIGHT",
    "gui.mainmenu.bag": "Bag",
    "gui.mainmenu.pokemon": "Pokémon",
    "gui.mainmenu.run": "RUN",
    "gui.mainmenu.whatdo": "What will %s do?",
    "gui.mainmenu.cantswitch": "You can't switch Pokémon right now!",
    "gui.mainmenu.traped": "%s is trapped! You cannot flee!",
    "gui.mainmenu.trainer": "You can't run from this battle!",
    "gui.mainmenu.already": "You've already selected another action this turn!",
    "gui.mainmenu.megaevolution": "Mega Evolution",
    "gui.mainmenu.ultraburst": "Ultra Burst",
    "gui.mainmenu.zmove": "Z-Power",
    "gui.mainmenu.dynamax": "Dynamax",
    "gui.mainmenu.gigantamax": "Gigantamax",
    "gui.mainmenu.disabled": "This can't be used in this battle!",
    "gui.mainmenu.click_to_mega": "Click to Mega Evolve",
    "gui.mainmenu.click_to_dyna": "Click to Dynamax",
    "gui.mainmenu.click_to_showz": "Click to Show Z-Moves",

    "gui.choosebag.pokeballs": "Poké Balls",
    "gui.choosebag.hppp": "HP/PP Restore",
    "gui.choosebag.statusrestore": "Status Restore",
    "gui.choosebag.battleitems": "Battle Items",
    "gui.choosebag.nopokeballs": "You can't use Poké Balls in this battle!",
    "gui.choosebag.multiple": "You cannot use Poké Balls while there are multiple Pokémon against you!",
    "gui.choosebag.lastitem": "Use last item",

    "gui.choosepokemon.select": "Select a Pokémon to use it on.",
    "gui.choosepokemon.sendout": "Choose a Pokémon to send out.",

    "gui.npctrader.their": "Given Pokémon",
    "gui.npctrader.yours": "Looking For",

    "gui.choosemoveset.title": "Choose a Moveset",
    "gui.choosemoveset.power": "Power",
    "gui.choosemoveset.attackdetails": "Attack Details",
    "gui.choosemoveset.chosen": "Chosen Moves",
    "gui.choosemoveset.full": "Full Move List",
    "gui.choosemoveset.choosemove": "Choose a Move",
    "gui.choosemoveset.relearnmove": "Relearn Move",
    "gui.choosemoveset.cost": "Cost:",

    "gui.tutor.addmove": "Add Move",
    "gui.tutor.deletemove": "Delete Move",
    "gui.tutor.itemname": "Item",
    "gui.tutor.itemamount": "Amount",
    "gui.tutor.itemdamage": "Damage",
    "gui.tutor.addcost": "Add Cost",
    "gui.tutor.deletetutor": "Delete Tutor",
    "gui.tutor.canlearn": "Can learn",
    "gui.tutor.cantlearn": "Can't learn",
    "gui.tutor.already": "Already learned",
    "gui.tutor.learntypes": "Learn Types",
    "gui.tutor.learntype.levelup_moves": "Level Up",
    "gui.tutor.learntype.all_tr_moves": "TR Moves",
    "gui.tutor.learntype.hm_moves": "HM Moves",
    "gui.tutor.learntype.tutor_moves": "Tutor Moves",
    "gui.tutor.learntype.transfer_moves": "Transfer Moves",
    "gui.tutor.learntype.egg_moves": "Egg Moves",
    "gui.tutor.learntype.gen8_tm_moves": "Tm Moves (gen8)",

    "gui.ranch.managePokemon": "Manage Pokémon",
    "gui.ranch.claimEgg": "Claim Egg",
    "gui.ranch.extendplusx": "+X",
    "gui.ranch.extendminusx": "-X",
    "gui.ranch.extendplusz": "+Z",
    "gui.ranch.extendminusz": "-Z",
    "gui.ranch.extendTitle": "Extend ranch block contained area",
    "gui.ranch.empty": "There are no Pokémon in the ranch.",
    "ranch.hourglass.upgradedall": "All breeding Pokémon increased a breeding level.",
    "ranch.hourglass.upgrade": "%s increased a breeding level.",

    "gui.trader.eggDescription": "I wonder what this will hatch into...",

    "gui.spectate.spectateMessage": "Press %s to spectate %s's battle.",
    "gui.spectate.stopspectate": "Stop Spectating",

    "trainer.Steve": "Steve",
    "trainer.Youngster": "Youngster",
    "trainer.Lass": "Lass",
    "trainer.BugCatcher": "Bug Catcher",
    "trainer.Pokemaniac": "Poké Maniac",
    "trainer.Pokemaniacgirl": "Poké Maniac Girl",
    "trainer.Fisherman": "Fisherman",
    "trainer.Fisherman2": "Fisherman",
    "trainer.FemaleRocketGrunt": "Female Rocket Grunt",
    "trainer.MaleRocketGrunt": "Male Rocket Grunt",
    "trainer.FemaleMagmaGrunt": "Female Magma Grunt",
    "trainer.MaleMagmaGrunt": "Male Magma Grunt",
    "trainer.FemaleAquaGrunt": "Female Aqua Grunt",
    "trainer.MaleAquaGrunt": "Male Aqua Grunt",
    "trainer.Pirate": "Pirates",
    "trainer.aquagruntmale": "Male Aqua Grunt",
    "trainer.aquagruntfemale": "Female Aqua Grunt",
    "trainer.magmagruntmale": "Male Magma Grunt",
    "trainer.model.magmagruntfemale": "Female Magma Grunt",
    "trainer.Sport": "Sports Fans",
    "trainer.Gardener": "Gardener",
    "trainer.BugManiac": "Bug Maniac",
    "trainer.LittleBoySwimmer": "Little Boy Swimmer",
    "trainer.MaleSwimmer": "Male Swimmer",
    "trainer.Swimmer": "Swimmer",
    "trainer.Ornithologist": "Ornithologist",
    "trainer.FireBreather": "Firebreather",
    "trainer.RichBoy": "Rich Boy",
    "trainer.Policeman": "Policeman",
    "trainer.Rancher": "Rancher",
    "trainer.MaleScientist": "Male Scientist",
    "trainer.FemaleScientist": "Female Scientist",
    "trainer.PreschoolerGirl": "Preschooler Girl",
    "trainer.PkmnBreederWoman": "Female Pokémon Breeder",
    "trainer.Miner": "Miner",
    "trainer.Blacksmith": "Blacksmith",
    "trainer.Cueball": "Cue Ball",
    "trainer.EvilTeamLeaders": "Evil Team Leaders",
    "trainer.FemaleFlareGrunt": "Female Flare Grunt",
    "trainer.FemaleGalacticGrunt": "Female Galactic Grunt",
    "trainer.FemalePlasmaGrunt": "Female Plasma Grunt",
    "trainer.FemaleSkullGrunt": "Female Skull Grunt",
    "trainer.MaleFlareGrunt": "Male Flare Grunt",
    "trainer.MaleGalacticGrunt": "Male Galactic Grunt",
    "trainer.MalePlasmaGrunt": "Male Plasma Grunt",
    "trainer.MaleSkullGrunt": "Male Skull Grunt",
    "trainer.Mermaid": "Mermaid",
    "trainer.Bosses": "Team Bosses",
    "trainer.FemaleTeamYellGrunt": "Female Team Yell Grunt",
    "trainer.MaleTeamYellGrunt": "Male Team Yell Grunt",
    "trainer.Bosses": "Team Bosses",
    "npc.model.teamyellfemale": "Female Yell Grunt",
    "npc.model.teamyellmale": "Male Yell Grunt",

    "trainer.model.Steve": "Steve",
    "trainer.model.Custom_RP": "Custom Resource Pack",
    "trainer.model.Custom_PN": "Custom Player Name",
    "trainer.model.santa": "Santa",
    "trainer.model.suit": "Suit",
    "trainer.model.jonsnow": "Jon Snow",
    "trainer.model.professorras": "Professor Ras",
    "trainer.model.knight": "Knight",
    "trainer.model.scottish": "Scottish",
    "trainer.model.prisoner": "Prisoner",
    "trainer.model.youngster1": "Spoiled Brat",
    "trainer.model.youngster2": "Cool Youngster Boy",
    "trainer.model.youngster3": "Poké Ball Shirt Youth",
    "trainer.model.youngster4": "Black Shirt Youth",
    "trainer.model.youngster5": "Hooded Youth",
    "trainer.model.youngstergirl": "Youngster Girl",
    "trainer.model.youngstergirl2": "Youngster Girl 2",
    "trainer.model.lass2": "Lass",
    "trainer.model.bugcatcher1": "Beekeeper",
    "trainer.model.bugcatcher2": "Super Bug Catcher",
    "trainer.model.bugcatcher3": "Bug Catcher",
    "trainer.model.bugcatcher4": "Bug Catcher 2",
    "trainer.model.pokemaniac1": "Haunter",
    "trainer.model.pokemaniac2": "Charizard",
    "trainer.model.pokemaniac3": "Rhydon",
    "trainer.model.pokemaniacgirl1": "Zangoose",
    "trainer.model.pokemaniacgirl2": "Pika Girl",
    "trainer.model.pokemaniacgirl3": "Eevee",
    "trainer.model.firebreather1": "Medieval Firebreather",
    "trainer.model.firebreather2": "Styling Fire Guy",
    "trainer.model.firebreather3": "Fire Man",
    "trainer.model.firebreather4": "Fire Bat",
    "trainer.model.rocketgruntfemale1": "Grunt 1",
    "trainer.model.rocketgruntfemale2": "Grunt 2",
    "trainer.model.rocketgruntfemale3": "Grunt 3",
    "trainer.model.rocketgruntfemale4": "Grunt 4",
    "trainer.model.rocketgruntfemale5": "Grunt 5",
    "trainer.model.rocketgruntfemale6": "Grunt 6",
    "trainer.model.rocketgruntmale1": "Grunt 1",
    "trainer.model.rocketgruntmale2": "Grunt 2",
    "trainer.model.rocketgruntmale3": "Grunt 3",
    "trainer.model.rocketgruntmale4": "Grunt 4",
    "trainer.model.rocketgruntmale5": "Grunt 5",
    "trainer.model.rocketgruntmale6": "Grunt 6",
    "trainer.model.piratecaptain": "Pirate Captain",
    "trainer.model.pirategrunt1": "Grunt 1",
    "trainer.model.pirategrunt2": "Grunt 2",
    "trainer.model.football1": "Football Fan 1",
    "trainer.model.football2": "Football Fan 2",
    "trainer.model.gardenermale1": "Gardener 1",
    "trainer.model.gardenermale2": "Gardener 2",
    "trainer.model.pkmn_breeder_f": "Breeder 1",
    "trainer.model.breedergreen_f": "Breeder 2",
    "trainer.model.swimmer_m1": "Male Swimmer 1",
    "trainer.model.swimmer_m2": "Male Swimmer 2",
    "trainer.model.swimmer_f1": "Female Swimmer 1",
    "trainer.model.swimmer_f2": "Female Swimmer 2",
    "trainer.model.archie": "Archie",
    "trainer.model.charles": "Charles",
    "trainer.model.cueball1": "Cue Ball 1",
    "trainer.model.cueball2": "Cue Ball 2",
    "trainer.model.cyrus": "Cyrus",
    "trainer.model.lass3": "Lass 3",
    "trainer.model.femaleflaregrunt": "Female Flare Grunt",
    "trainer.model.femalegalacticgrunt": "Female Galactic Grunt",
    "trainer.model.femaleplasmagrunt": "Female Plasma Grunt",
    "trainer.model.femaleskullgrunt": "Female Skull Grunt",
    "trainer.model.giovanni": "Giovanni",
    "trainer.model.guzma": "Guzma",
    "trainer.model.lysandre": "Lysandre",
    "npc.model.aquaboss": "Archie",
    "npc.model.magmaboss": "Maxie",
    "npc.model.galacticboss": "Cyrus",
    "trainer.model.aquaboss": "Archie",
    "trainer.model.galacticboss": "Cyrus",
    "trainer.model.magmaboss": "Maxie",
    "trainer.model.maleflaregrunt": "Male Flare Grunt",
    "trainer.model.malegalacticgrunt": "Male Galactic Grunt",
    "trainer.model.maleplasmagrunt": "Male Plasma Grunt",
    "trainer.model.maleskullgrunt": "Male Skull Grunt",
    "trainer.model.mermaid1": "Mermaid 1",
    "trainer.model.mermaid2": "Mermaid 2",
    "trainer.model.mermaid3": "Mermaid 3",
    "trainer.model.n": "N",
    "trainer.model.youngster6": "Youngster 6",
    "trainer.model.youngster7": "Youngster 7",

    "npc.model.aquagruntmale": "Male Aqua Grunt",
    "npc.model.aquagruntfemale": "Female Aqua Grunt",
    "npc.model.artist": "Artist",
    "npc.model.baker": "Baker",
    "npc.model.battlegirl": "Battle Girl",
    "npc.model.blackbelt": "Black Belt",
    "npc.model.blacksmith": "Blacksmith",
    "npc.model.breedergreen_f": "Pokémon Breeder 2",
    "npc.model.dress": "Bride",
    "npc.model.suit": "Groom",
    "npc.model.bugcatcher4": "Bug Catcher 2",
    "npc.model.cueball": "Cue Ball",
    "npc.model.cult": "Cultist",
    "npc.model.doctor": "Doctor",
    "npc.model.engineer": "Engineer",
    "npc.model.evilprofessor": "Evil Professor",
    "npc.model.firebreather2": "Styling Fire Guy",
    "npc.model.firebreather4": "Fire Bat",
    "npc.model.fisherman": "Fisherman",
    "npc.model.gardenermale1": "Gardener",
    "npc.model.gardenermale2": "Gardener",
    "npc.model.gnome_trader": "Gnome Trader",
    "npc.model.hexmaniac": "Hex Maniac",
    "npc.model.hiker": "Hiker",
    "npc.model.jonsnow": "Jon Snow",
    "npc.model.knight": "Knight",
    "npc.model.lass2": "Lass",
    "npc.model.lighthousekeeper": "Lighthouse Keeper",
    "npc.model.littleboy": "Little Boy",
    "npc.model.littlegirl": "Little Girl",
    "npc.model.madame": "Madame",
    "npc.model.magmagruntfemale": "Female Magma Grunt",
    "npc.model.magmagruntmale": "Male Magma Grunt",
    "npc.model.mailman": "Mailman",
    "npc.model.mechanic": "Mechanic",
    "npc.model.mermaid": "Mermaid",
    "npc.model.mermaid2": "Mermaid 2",
    "npc.model.mermaid3": "Mermaid 3",
    "npc.model.monk1": "Monk 1",
    "npc.model.monk2": "Monk 2",
    "npc.model.monsieur": "Monsieur",
    "npc.model.npcchat1": "Old Man",
    "npc.model.npcchat2": "Man",
    "npc.model.officerjenny": "Officer Jenny",
    "npc.model.ornithologist": "Ornithologist",
    "npc.model.piratecaptain": "Pirate Captain",
    "npc.model.pirategrunt1": "Pirate Grunt",
    "npc.model.pkmn_breeder_f": "Pokémon Breeder",
    "npc.model.pokefan_f": "Female Pokéfan",
    "npc.model.pokefan_m": "Male Pokéfan",
    "npc.model.policeman": "Policeman",
    "npc.model.preschooler_f1": "Female Preschooler",
    "npc.model.professorras": "Professor Ras",
    "npc.model.psychic": "Male Psychic",
    "npc.model.psychic_f": "Female Psychic",
    "npc.model.punkgirl": "Punk Girl",
    "npc.model.punkguy": "Punk Guy",
    "npc.model.rancher": "Rancher",
    "npc.model.ranger_f": "Female Ranger",
    "npc.model.ranger_m": "Male Ranger",
    "npc.model.richboy": "Rich Boy",
    "npc.model.rocketgruntfemale1": "Female Rocket Grunt",
    "npc.model.rocketgruntmale1": "Male Rocket Grunt",
    "npc.model.sailor": "Sailor",
    "npc.model.santa": "Santa Claus",
    "npc.model.schoolboy": "Schoolboy",
    "npc.model.schoolgirl": "Schoolgirl",
    "npc.model.scientist_f": "Female Scientist",
    "npc.model.scientist_m": "Male Scientist",
    "npc.model.shopgirl": "Shop Girl",
    "npc.model.shoplady": "Shop Lady",
    "npc.model.shoplady2": "Shop Lady 2",
    "npc.model.shoplady3": "Shop Lady 3",
    "npc.model.shoplady4": "Shop Lady 4",
    "npc.model.shopman": "Shop Man",
    "npc.model.shopman2": "Shop Man 2",
    "npc.model.shopman3": "Shop Man 3",
    "npc.model.shopman4": "Shop Man 4",
    "npc.model.shopman5": "Shop Man 5",
    "npc.model.shopsecondman": "Shop Second Man",
    "npc.model.spawntrader": "Spawn Trader",
    "npc.model.streetthug": "Street Thug",
    "npc.model.supernerd": "Super Nerd",
    "npc.model.tesla": "Tesla",
    "npc.model.archie": "Archie",
    "npc.model.charles": "Charles",
    "npc.model.cyrus": "Cyrus",
    "npc.model.flaregruntfemale": "Female Flare Grunt",
    "npc.model.flaregruntmale": "Male Flare Grunt",
    "npc.model.galacticgruntfemale": "Female Galactic Grunt",
    "npc.model.galacticgruntmale": "Male Galactic Grunt",
    "npc.model.ghostbuster1": "Ghostbuster 1",
    "npc.model.ghostbuster2": "Ghostbuster 2",
    "npc.model.ghostbuster3": "Ghostbuster 3",
    "npc.model.giovanni": "Giovanni",
    "npc.model.guzma": "Guzma",
    "npc.model.lysandre": "Lysandre",
    "npc.model.mermaid1": "Mermaid 1",
    "npc.model.n": "N",
    "npc.model.plasmagruntfemale": "Female Plasma Grunt",
    "npc.model.plasmagruntmale": "Male Plasma Grunt",
    "npc.model.skullgruntfemale": "Female Skull Grunt",
    "npc.model.skullgruntmale": "Male Skull Grunt",

    "npc.shopkeeper.pokemartmain1": "Poké Mart Main 1",
    "npc.shopkeeper.pokemartmain2": "Poké Mart Main 2",
    "npc.shopkeeper.pokemartmain3": "Poké Mart Main 3",
    "npc.shopkeeper.pokemartsecond1": "Poké Mart Second 1",
    "npc.shopkeeper.pokemartsecond2": "Poké Mart Second 2",
    "npc.shopkeeper.pokemartsecond3": "Poké Mart Second 3",
    "npc.shopkeeper.spawn1": "Spawn 1",
    "npc.shopkeeper.spawn2": "Spawn 2",

    "container.MechanicalAnvil": "Mechanical Anvil",
    "container.infuser": "Infuser",
    "container.cookingpot": "Cooking Pot",
    "container.trash_can": "Trash Can",

    "attack.category.physical": "Physical",
    "attack.category.special": "Special",
    "attack.category.status": "Status",

    "nbt.attack": "Attack:",
    "nbt.defense": "Defense:",
    "nbt.speed": "Speed:",
    "nbt.spattack": "Sp. Attack:",
    "nbt.spdefense": "Sp. Defense:",
    "nbt.hp": "HP:",
    "nbt.pp": "PP:",

    "nbt.attack2": "Attack",
    "nbt.defense2": "Defense",
    "nbt.speed2": "Speed",
    "nbt.spattack2": "Sp. Attack",
    "nbt.spdefense2": "Sp. Defense",
    "nbt.hp2": "HP",

    "battlecontroller.escaped": "%s escaped!",
    "battlecontroller.!escaped": "%s couldn't escape!",
    "battlecontroller.initbattle.you": "You initiated a battle with %s!",
    "battlecontroller.initbattle.toyou": "%s initiated a battle with you!",
    "battlecontroller.flinched": "%s has flinched!",
    "battlecontroller.fainted": "Your %s fainted!",
    "battlecontroller.hasfainted": "%s fainted!",
    "battlecontroller.outofpokemon": "You've run out of usable Pokémon!",
    "battlecontroller.sendout": "%s sent out %s!",
    "battlecontroller.switch": "Choose a new Pokémon to send out!",
    "battlecontroller.targets": "Choose the target for %s. Press ESC to cancel.",
    "battlecontroller.win": "You've won the battle!",
    "battlecontroller.afktimer": "Turn timer:",
    "battlecontroller.forfeitask": "Do you want to forfeit the battle?",
    "battlecontroller.forfeit": "%s forfeited the battle!",
    "battlecontroller.forfeitself": "You forfeited the battle.",
    "battlecontroller.draw": "The battle has been declared a draw.",

    "raid.interact.active": "There's energy pouring out from the den!",
    "raid.interact.inactive": "There's a bit of energy trickling out of the den...",
    "raid.interact.empty": "There doesn't seem to be anything in the den...",
    "raid.interact.wish": "Want to throw in a Wishing Piece?",
    "raid.interact.wished": "You threw a Wishing Piece into the den!",
    "raid.interact.wishfailed": "The den didn't respond to the energy of your Wishing Piece...",
    "raid.interact.inuse": "The energy in this den is all in use!",
	"raid.interact.no_party": "Your Party is too tired to attempt this!",
    "raid.watts": "You gained %d W!",
    "raid.singleplayer": "Solo Challenge",
    "raid.multiplayer": "Team Challenge",
    "raid.waiting": "Waiting for players to join...",
    "raid.switch": "Switch Pokémon",
    "raid.quit": "Quit",
    "raid.start": "Start Challenge",
    "raid.lore": "The battle ends when\\nPokémon faint %d times or\\nthe battle lasts for %d turns.",
    "raid.lorespecial": "The battle ends when\\nPokémon faint %d times or\\nthe battle lasts for %d turns.\\nOnly the leader will have\\nthe chance to catch!",
    "raid.appear": "%s appeared!",
    "raid.desperate": "%s is getting desperate! Its attacks are growing more aggressive!",
    "raid.barrier": "A mysterious barrier appeared in front of %s and is protecting it from all attacks!",
    "raid.barrier.destroy": "The mysterious barrier that was protecting %s disappeared!",
    "raid.storm.a": "The storm raging above you is growing stronger!",
    "raid.storm.b": "The storm is growing even stronger!",
    "raid.storm.c": "The storm is getting too strong to withstand!",
    "raid.shockwave": "%s nullified the stat changes and Abilities of other Pokémon!",
    "raid.dynamax": "Dynamax Energy gathered around %s!",
    "raid.recover": "%s's Pokémon recovered from fainting!",
    "raid.cheer": "%s cheered for your side!",
    "raid.cheer.success": "%s's cheering was powered up by all the Dynamax Energy!",
    "raid.cheer.fail": "The cheer echoed feebly around the area.",
    "raid.blowout": "You were blown out of the den!",
    "raid.defeated": "You defeated %s!",
    "raid.caught": "You caught %s!",
    "raid.kick.expired": "The energy in the den is no longer present...",
    "raid.kick.leader": "The leader of the raid has left...",
    "raid.kick.invalid": "The energy in the den has ejected everyone...",
    "raid.button.solo": "Start Solo",
    "raid.button.start": "Start Raid",
    "raid.button.multi": "Wait for Others",
    "raid.button.players": "%d/4 players",
    "raid.button.quit": "Quit",
    "raid.button.pcfull": "PC Full!",
    "raid.button.noballs": "No Pokéballs!",
    "raid.button.cantuse": "Can't Use!",
    "raid.button.catch": "Catch",
    "raid.button.dontcatch": "Don't Catch",
    "raid.button.done": "Done",
    "raid.choose": "Choose your Pokémon",
    "raid.unaffected": "%s was unaffected!",
    "raid.ohko": "What a vicious blow! It damaged the mysterious barrier severely!",

    "type.normal": "Normal",
    "type.fire": "Fire",
    "type.water": "Water",
    "type.electric": "Electric",
    "type.grass": "Grass",
    "type.ice": "Ice",
    "type.fighting": "Fighting",
    "type.poison": "Poison",
    "type.ground": "Ground",
    "type.flying": "Flying",
    "type.psychic": "Psychic",
    "type.bug": "Bug",
    "type.rock": "Rock",
    "type.ghost": "Ghost",
    "type.dragon": "Dragon",
    "type.dark": "Dark",
    "type.steel": "Steel",
    "type.fairy": "Fairy",

    "type.shiny": "Shiny",
    "type.ha": "Hidden Ability",

    "aitargetenvironment.seessomething": "Your Pokémon sees something.",

    "batonpass.failed": "But it failed!",
    "batonpass.pass": "%s passes a baton!",
    "batonpass.noleft": "There are no Pokémon left to switch to!",

    "teleport.away": "%s teleported away!",

    "applyperish.heard": "%s heard the Perish Song!",
    "applyperish.already": "%s has already heard the song!",
    "applyperish.body": "%s's Perish Body triggered on itself and %s!",

    "playerparticipant.enough": "That's enough %s!",
    "playerparticipant.withdrew": "%s withdrew %s!",
    "playerparticipant.go": "Go %s!",
    "playerparticipant.load": "Couldn't load Pokémon's moves!",

    "multiplehit.times": "%s attacked %d times!",

    "recoil.damage": "%s took recoil damage!",

    "battlequery.declined": "%s declined the battle!",

    "command.battle.battlebetween": "Battle between %s and %s started!",

    "bagpacket.itemnotfound": "Item could not be found!",
    "bagpacket.battlenotfound": "Battle could not be found!",

    "deletemove.forgot": "Your %s forgot %s!",

    "replacemove.replace": "Your %s forgot %s and learned %s!",

    "pixelmon.moveskill.nopp": "%s does not have enough PP to use that.",

    "pixelmon.moveskill.forage": "Forage",
    "pixelmon.moveskill.forage.description1": "Forages the specified block for items.",
    "pixelmon.moveskill.forage.description2": "Different blocks can give different items!",
    "pixelmon.moveskill.forage.nothing": "Nothing was found!",
    "pixelmon.moveskill.lightning_bolt": "Lightning Bolt",
    "pixelmon.moveskill.lightning_bolt.description": "Strikes the specified block or entity with lightning!",
    "pixelmon.moveskill.dig": "Dig",
    "pixelmon.moveskill.dig.description1": "Digs up the specified area.",
    "pixelmon.moveskill.dig.description2": "The stronger the Pokémon, the bigger the hole!",
    "pixelmon.moveskill.cut": "Cut",
    "pixelmon.moveskill.cut.description1": "Cuts down the specified tree, allowing you to collect the logs.",
    "pixelmon.moveskill.cut.description2": "Larger trees require a stronger Pokémon.",
    "pixelmon.moveskill.cut.toomany": "This tree is too large for a Pokémon to cut down.",
    "pixelmon.moveskill.cut.fail": "%s isn't strong enough to cut that down!",
    "pixelmon.moveskill.change_form": "Change Form",
    "pixelmon.moveskill.change_form.description": "Changes a Pokémon to its battle form. This won't remain if you go into a battle.",
    "pixelmon.moveskill.explode": "Explode",
    "pixelmon.moveskill.explode.description": "Self-destructs, fainting this Pokémon and leaving a crater!",
    "pixelmon.moveskill.fly": "Fly",
    "pixelmon.moveskill.fly.description": "Returns you to the last heal location.",
    "pixelmon.moveskill.headbutt": "Headbutt",
    "pixelmon.moveskill.headbutt.description": "Headbutts the specified log, potentially starting a Pokémon battle!",
    "pixelmon.moveskill.headbutt.nothing": "Nothing happened.",
    "pixelmon.moveskill.headbutt.battle": "A %s fell from the tree!",
    "pixelmon.moveskill.headbutt.item": "A %s fell from the tree!",
    "pixelmon.moveskill.heal_other": "Heal",
    "pixelmon.moveskill.heal_other.description": "Heals the specified Pokémon, at the price of its own HP.",
    "pixelmon.moveskill.ignite": "Ignite",
    "pixelmon.moveskill.ignite.description1": "Lights the specified area on fire!",
    "pixelmon.moveskill.ignite.description2": "Depending on the learned Fire-type moves, the ignited area can change shape.",
    "pixelmon.moveskill.mega_evolve": "Mega Evolve",
    "pixelmon.moveskill.mega_evolve.description": "Mega Evolves outside of battle. This won't remain if you go into a battle.",
    "pixelmon.moveskill.mega_evolve.noring": "You don't have a mega ring equipped!",
    "pixelmon.moveskill.primal_reversion": "Primal Reversion",
    "pixelmon.moveskill.primal_reversion.description": "Primal Reversion outside of battle. This won't remain if you go into a battle.",
    "pixelmon.moveskill.ultra_burst": "Ultra Burst",
    "pixelmon.moveskill.ultra_burst.description": "Ultra Bursts outside of battle. This won't remain if you go into a battle.",
    "pixelmon.moveskill.crowned": "Crown",
    "pixelmon.moveskill.crowned.description": "Crowns your Warrior Pokémon outside of battle.",
    "pixelmon.moveskill.rock_smash": "Rock Smash",
    "pixelmon.moveskill.rock_smash.description1": "Breaks the specified rock block.",
    "pixelmon.moveskill.rock_smash.description2": "A Pokémon battle might start!",
    "pixelmon.moveskill.sweet_scent": "Sweet Scent",
    "pixelmon.moveskill.sweet_scent.description": "Tries to attract a Pokémon, potentially starting a battle.",
    "pixelmon.moveskill.teleport": "Teleport",
    "pixelmon.moveskill.teleport.description": "Returns you to the last heal location.",
    "pixelmon.moveskill.open_wormhole": "Open Wormhole",
    "pixelmon.moveskill.open_wormhole.description": "Opens a wormhole to the Ultra Space dimension!",
    "pixelmon.moveskill.flash": "Flash",
    "pixelmon.moveskill.flash.description1": "Flashes a bright light from this Pokémon's location.",
    "pixelmon.moveskill.flash.description2": "The light will remain for a short time, allowing you to see!",
    "pixelmon.moveskill.mount_boost": "Mount Boost",
    "pixelmon.moveskill.mount_boost.description": "Temporarily increases the speed at which the Pokémon moves while riding.",
    "pixelmon.moveskill.mount_boost.notriding": "You aren't riding %s!",
    "pixelmon.moveskill.ground": "Ground Birds",
    "pixelmon.moveskill.ground.description1": "The nearby flying Pokémon are pulled down from the sky!",
    "pixelmon.moveskill.ground.description2": "The range at which flying Pokémon are affected depends on this Pokémon's strength.",
    "pixelmon.moveskill.rain_dance": "Rain Dance",
    "pixelmon.moveskill.rain_dance.description1": "The Pokémon manipulates the weather, causing it to rain.",
    "pixelmon.moveskill.rain_dance.description2": "The sky must be visible for this to work!",
    "pixelmon.moveskill.rain_dance.alreadyraining": "It is already raining!",
    "pixelmon.moveskill.rain_dance.used": "It started to rain!",
    "pixelmon.moveskill.rain_dance.kyogreused": "%s summoned a powerful storm!",
    "pixelmon.moveskill.sunny_day": "Sunny Day",
    "pixelmon.moveskill.sunny_day.description1": "The Pokémon manipulates the weather, causing clear weather.",
    "pixelmon.moveskill.sunny_day.description2": "The sky must be visible for this to work!",
    "pixelmon.moveskill.sunny_day.alreadysunny": "It is already clear!",
    "pixelmon.moveskill.sunny_day.used": "The weather began to clear!",
    "pixelmon.moveskill.weather.underground": "%s needs to be able to see the sky to change the weather!",
    "pixelmon.moveskill.weather.nomultiplayer": "You cannot change the weather in multiplayer!",
    "pixelmon.moveskill.scare": "Scare",
    "pixelmon.moveskill.scare.description1": "The Pokémon intimidates all the nearby wild Pokémon, sending them scurrying.",
    "pixelmon.moveskill.scare.description2": "This also temporarily prevents aggressive Pokémon from challenging you.",
    "pixelmon.moveskill.scare.onscare": "%s intimidated the nearby Pokémon! They are too afraid to challenge you.",
    "pixelmon.moveskill.analyse_pokemon": "Analyse Pokémon",
    "pixelmon.moveskill.analyse_pokemon.description": "The Pokémon uses its psychic power to see the target Pokémon's traits!",
    "pixelmon.moveskill.analyse_pokemon.use": "The %s had its traits revealed!",
    "pixelmon.moveskill.smelt": "Smelt",
    "pixelmon.moveskill.smelt.description1": "The Pokémon pours fire into the targeted furnace, fuelling it.",
    "pixelmon.moveskill.smelt.description2": "If the move is powerful, some items might be instantly smelted!",
    "pixelmon.moveskill.smelt.use": "%s filled the furnace with flames!",
    "pixelmon.moveskill.ore_sense": "Ore Sense",
    "pixelmon.moveskill.ore_sense.description1": "The Pokémon uses electromagnetism to sense nearby ores.",
    "pixelmon.moveskill.ore_sense.description2": "For a short time, nearby ores will be illuminated!",
    "pixelmon.moveskill.ore_sense.none": "There are no ores nearby.",
    "pixelmon.moveskill.ore_sense.some": "%s can sense ores nearby!",

    "sendpixelmon.sentout": "You sent out %s!",
    "sendpixelmon.cantbattle": "%s is unable to battle!",
    "sendpixelmon.unshouldered": "You took %s off your shoulder!",
    "sendpixelmon.retrieved": "You retrieved %s!",
    "sendpixelmon.inbattle": "%s is in a battle!",
    "sendpixelmon.isspectator": "You cannot send out Pokémon as a spectator!",

    "camera.error.samepokemon": "You have already took a photo of this %s!",

    "spawn.legendarymessage": "%s has spawned in a %s biome!",
    "spawn.legendaryraidmessage": "%s has appeared in a den in a %s biome!",

    "ruby.success": "%s has infused your ruby with its lifeforce!",
    "ruby.fail.pokemonLevel": "%s doesn't have enough power to infuse your ruby!",
    "ruby.fail.happiness": "%s isn't comfortable enough to bestow you with its power!",
    "ruby.fail.count": "%s has exhausted its power to infuse rubies!",
    "ruby.fail.owner": "%s doesn't trust you enough to bestow you with its power!",

    "block.pixelmon.anvil": "Anvil",
    "block.pixelmon.pc": "PC",
    "block.pixelmon.moss_rock": "Moss Rock",
    "block.pixelmon.ice_rock": "Ice Rock",
    "block.pixelmon.trade_machine": "Trade Machine",
    "block.pixelmon.healer": "Healer",
    "block.pixelmon.fossil_cleaner": "Fossil Cleaner",
    "block.pixelmon.fossil_machine": "Fossil Machine",
    "block.pixelmon.cloning_machine": "Cloning Machine",
    "block.pixelmon.bauxite_ore": "Bauxite Ore",
    "block.pixelmon.fire_stone_ore": "Fire Stone Ore",
    "block.pixelmon.water_stone_ore": "Water Stone Ore",
    "block.pixelmon.leaf_stone_ore": "Leaf Stone Ore",
    "block.pixelmon.thunder_stone_ore": "Thunder Stone Ore",
    "block.pixelmon.sun_stone_ore": "Sun Stone Ore",
    "block.pixelmon.dawn_stone_ore": "Dawn Stone Ore",
    "block.pixelmon.dusk_stone_ore": "Dusk Stone Ore",
    "block.pixelmon.pixelmon_spawner": "Pixelmon Spawner",
    "block.pixelmon.music_block": "Music Block",
    "block.pixelmon.masterchest": "Master Chest",
    "block.pixelmon.pokechest": "Poké Chest",
    "block.pixelmon.ultrachest": "Ultra Chest",
    "block.pixelmon.fossil": "Fossil",
    "block.pixelmon.articuno_shrine": "Frozen Shrine",
    "block.pixelmon.zapdos_shrine": "Static Shrine",
    "block.pixelmon.moltres_shrine": "Fiery Shrine",
    "block.pixelmon.apricorntree": "Apricorn Tree",
    "block.pixelmon.mechanical_anvil": "Mechanical Anvil",
    "block.pixelmon.infuser": "Infuser",
    "block.pixelmon.ranch": "Ranch Block",
    "block.pixelmon.leafstoneore_overlay": "Leaf Stone Ore",
    "block.pixelmon.null": "Hidden Pressure Plate",
    "block.pixelmon.unown_block_a": "Unown Block 'A'",
    "block.pixelmon.unown_block_b": "Unown Block 'B'",
    "block.pixelmon.unown_block_c": "Unown Block 'C'",
    "block.pixelmon.unown_block_d": "Unown Block 'D'",
    "block.pixelmon.unown_block_e": "Unown Block 'E'",
    "block.pixelmon.unown_block_f": "Unown Block 'F'",
    "block.pixelmon.unown_block_g": "Unown Block 'G'",
    "block.pixelmon.unown_block_h": "Unown Block 'H'",
    "block.pixelmon.unown_block_i": "Unown Block 'I'",
    "block.pixelmon.unown_block_j": "Unown Block 'J'",
    "block.pixelmon.unown_block_k": "Unown Block 'K'",
    "block.pixelmon.unown_block_l": "Unown Block 'L'",
    "block.pixelmon.unown_block_m": "Unown Block 'M'",
    "block.pixelmon.unown_block_n": "Unown Block 'N'",
    "block.pixelmon.unown_block_o": "Unown Block 'O'",
    "block.pixelmon.unown_block_p": "Unown Block 'P'",
    "block.pixelmon.unown_block_q": "Unown Block 'Q'",
    "block.pixelmon.unown_block_r": "Unown Block 'R'",
    "block.pixelmon.unown_block_s": "Unown Block 'S'",
    "block.pixelmon.unown_block_t": "Unown Block 'T'",
    "block.pixelmon.unown_block_u": "Unown Block 'U'",
    "block.pixelmon.unown_block_v": "Unown Block 'V'",
    "block.pixelmon.unown_block_w": "Unown Block 'W'",
    "block.pixelmon.unown_block_x": "Unown Block 'X'",
    "block.pixelmon.unown_block_y": "Unown Block 'Y'",
    "block.pixelmon.unown_block_z": "Unown Block 'Z'",
    "block.pixelmon.unown_block_exclaim": "Unown Block '!'",
    "block.pixelmon.unown_block_question": "Unown Block '?'",
    "block.pixelmon.fancy_pillar": "Fancy Pillar",
    "block.pixelmon.temple_brick": "Temple Brick",
    "block.pixelmon.temple_block": "Temple Block",
    "block.pixelmon.temple_stairs": "Temple Stairs",
    "block.pixelmon.temple_brick_stairs": "Temple Brick Stairs",
    "block.pixelmon.temple_slab": "Temple Slab",
    "block.pixelmon.temple_brick_slab": "Temple Brick Slab",
    "block.pixelmon.temple_pillar": "Temple Pillar",
    "block.pixelmon.hidden_cube": "Hidden Cube",
    "block.pixelmon.hidden_iron_door": "Hidden Iron Door",
    "block.pixelmon.hidden_wooden_door": "Hidden Wooden Door",
    "block.pixelmon.hidden_pressure_plate": "Hidden Pressure Plate",
    "block.pixelmon.temple_pillar.Pillar": "Temple Pillar",
    "block.pixelmon.temple_pillar_fractured": "Fractured Pillar",
    "block.pixelmon.poke_gift": "Poké Gift",
    "block.pixelmon.event_poke_gift": "Event Poké Gift",
    "block.pixelmon.movement_plate": "Movement Plate",
    "block.pixelmon.stick_plate": "Stick Plate",

    "block.pixelmon.poke_dirt": "PokéDirt",
    "block.pixelmon.poke_sand": "PokéSand",
    "block.pixelmon.poke_sand_corner1": "PokéSand Corner 1",
    "block.pixelmon.poke_sand_corner2": "PokéSand Corner 2",
    "block.pixelmon.poke_sand_corner3": "PokéSand Corner 3",
    "block.pixelmon.poke_sand_corner4": "PokéSand Corner 4",
    "block.pixelmon.poke_sand_side1": "PokéSand Side 1",
    "block.pixelmon.poke_sand_side2": "PokéSand Side 2",
    "block.pixelmon.poke_sand_side3": "PokéSand Side 3",
    "block.pixelmon.poke_sand_side4": "PokéSand Side 4",
    "block.pixelmon.ruby_ore": "Ruby Ore",
    "block.pixelmon.sapphire_ore": "Sapphire Ore",
    "block.pixelmon.amethyst_ore": "Amethyst Ore",
    "block.pixelmon.crystal_ore": "Crystal Ore",
    "block.pixelmon.ruby_block": "Ruby Block",
    "block.pixelmon.sapphire_block": "Sapphire Block",
    "block.pixelmon.amethyst_block": "Amethyst Block",
    "block.pixelmon.aluminium_block": "Aluminum Block",
    "block.pixelmon.silicon_block": "Silicon Block",
    "block.pixelmon.crystal_block": "Crystal Block",
    "block.pixelmon.crystal_block.tooltip": "Decorative Block. Also used for several recipes in the Infuser.",
    "block.pixelmon.silicon_ore": "Silicon Ore",
    "block.pixelmon.outside_wall": "Outside Wall",
    "block.pixelmon.inside_wall": "Inside Wall",
    "block.pixelmon.inside_wall_moulding": "Inside Wall Molding",
    "block.pixelmon.shingles": "Shingles",
    "block.pixelmon.shingles_block": "Shingles",
    "block.pixelmon.shingles_corner1": "Shingles Corner 1",
    "block.pixelmon.shingles_corner2": "Shingles Corner 2",
    "block.pixelmon.tree_top": "Tree Top",
    "block.pixelmon.tree_bottom": "Tree Bottom",
    "block.pixelmon.wooden_flooring": "Wooden Flooring",
    "block.pixelmon.poke_center_sign": "PokéCenter Sign",
    "block.pixelmon.poke_mart_sign": "Poké Mart Sign",
    "block.pixelmon.window1": "Window 1",
    "block.pixelmon.window2": "Window 2",
    "block.pixelmon.sandy_grass": "Sandy Grass",
    "block.pixelmon.rock": "Rock",
    "block.pixelmon.cave_rock": "Cave Rock",
    "block.pixelmon.bridge_block": "Bridge Block",
    "block.pixelmon.boulder": "Boulder",
    "block.pixelmon.box": "Box",
    "block.pixelmon.red_cushion": "Red Cushion Chair",
    "block.pixelmon.trash_can": "Trash Can",
    "block.pixelmon.yellow_cushion": "Yellow Cushion Chair",
    "block.pixelmon.gym_sign": "Gym Sign",
    "block.pixelmon.red_umbrella": "Red Umbrella",
    "block.pixelmon.green_umbrella": "Green Umbrella",
    "block.pixelmon.blue_umbrella": "Blue Umbrella",
    "block.pixelmon.yellow_umbrella": "Yellow Umbrella",
    "block.pixelmon.blue_clock": "Blue Clock",
    "block.pixelmon.pink_clock": "Pink Clock",
    "block.pixelmon.chair": "Chair",
    "block.pixelmon.end_table": "End Table",
    "block.pixelmon.green_folding_chair": "Green Folding Chair",
    "block.pixelmon.tree": "Tree",
    "block.pixelmon.tv": "Old TV",
    "block.pixelmon.tv2": "Small TV",
    "block.pixelmon.tv3": "Big TV",
    "block.pixelmon.lightworkplace": "Light Workplace",
    "block.pixelmon.darkworkplace": "Dark Workplace",
    "block.pixelmon.clothed_table": "Clothed Table",
    "block.pixelmon.red_rug": "Red Poké Ball Rug",
    "block.pixelmon.green_rug": "Green Poké Ball Rug",
    "block.pixelmon.blue_rug": "Blue Poké Ball Rug",
    "block.pixelmon.yellow_rug": "Yellow Poké Ball Rug",
    "block.pixelmon.fossil_display": "Fossil Display",
    "block.pixelmon.blue_vending_machine": "Blue Vending Machine",
    "block.pixelmon.green_vending_machine": "Green Vending Machine",
    "block.pixelmon.orange_vending_machine": "Orange Vending Machine",
    "block.pixelmon.pink_vending_machine": "Pink Vending Machine",
    "block.pixelmon.red_vending_machine": "Red Vending Machine",
    "block.pixelmon.yellow_vending_machine": "Yellow Vending Machine",
    "block.pixelmon.fridge": "Fridge",
    "block.pixelmon.pixelmon_grass": "Pixelmon Grass",
    "block.pixelmon.timed_fall": "Timed Fall",
    "block.pixelmon.warp_plate": "Warp Plate",
    "block.pixelmon.elevator": "Elevator",
    "block.pixelmon.blue_water_float": "Blue Water Float",
    "block.pixelmon.green_water_float": "Green Water Float",
    "block.pixelmon.orange_water_float": "Orange Water Float",
    "block.pixelmon.pink_water_float": "Pink Water Float",
    "block.pixelmon.purple_water_float": "Purple Water Float",
    "block.pixelmon.red_water_float": "Red Water Float",
    "block.pixelmon.yellow_water_float": "Yellow Water Float",
    "block.pixelmon.shrineuno": "Frozen Shrine",
    "block.pixelmon.shrinedos": "Static Shrine",
    "block.pixelmon.shrinetres": "Fiery Shrine",
    "block.pixelmon.ilex_shrine": "Ilex Shrine",
    "block.pixelmon.ruins_wall": "Ruins Wall",
    "block.pixelmon.dusty_ruins_wall": "Dusty Ruins Wall",
    "block.pixelmon.poke_grass": "PokéGrass",
    "block.pixelmon.spawner_cave_rock": "Spawner Cave Rock",
    "block.pixelmon.timespace_altar": "Timespace Altar",
    "block.pixelmon.brown_armchair": "Brown Armchair",
    "block.pixelmon.orange_armchair": "Orange Armchair",
    "block.pixelmon.pink_armchair": "Pink Armchair",
    "block.pixelmon.green_armchair": "Green Armchair",
    "block.pixelmon.gray_armchair": "Gray Armchair",
    "block.pixelmon.blue_armchair": "Blue Armchair",
    "block.pixelmon.black_armchair": "Black Armchair",
    "block.pixelmon.white_armchair": "White Armchair",
    "block.pixelmon.yellow_armchair": "Yellow Armchair",
    "block.pixelmon.cyan_armchair": "Cyan Armchair",
    "block.pixelmon.red_armchair": "Red Armchair",
    "block.pixelmon.purple_armchair": "Purple Armchair",
    "block.pixelmon.magenta_armchair": "Magenta Armchair",
    "block.pixelmon.lime_armchair": "Lime Armchair",
    "block.pixelmon.light_blue_armchair": "Light Blue Armchair",
    "block.pixelmon.light_gray_armchair": "Light Gray Armchair",
    "block.pixelmon.brown_couch": "Brown Couch",
    "block.pixelmon.orange_couch": "Orange Couch",
    "block.pixelmon.pink_couch": "Pink Couch",
    "block.pixelmon.green_couch": "Green Couch",
    "block.pixelmon.gray_couch": "Gray Couch",
    "block.pixelmon.blue_couch": "Blue Couch",
    "block.pixelmon.black_couch": "Black Couch",
    "block.pixelmon.white_couch": "White Couch",
    "block.pixelmon.yellow_couch": "Yellow Couch",
    "block.pixelmon.cyan_couch": "Cyan Couch",
    "block.pixelmon.red_couch": "Red Couch",
    "block.pixelmon.purple_couch": "Purple Couch",
    "block.pixelmon.magenta_couch": "Magenta Couch",
    "block.pixelmon.lime_couch": "Lime Couch",
    "block.pixelmon.light_blue_couch": "Light Blue Couch",
    "block.pixelmon.light_gray_couch": "Light Gray Couch",
    "block.pixelmon.cash_register": "Cash Register",

    "block.pixelmon.deep_sea": "Ultra Deep Sea Crystal",

    "block.pixelmon.zygarde_cell": "Zygarde Cell",
    "block.pixelmon.zygarde_core": "Zygarde Core",
    "block.pixelmon.reassembly_unit": "Reassembly Unit",

    "block.pixelmon.street_light": "Street Light",

    "block.pixelmon.mailbox_black": "Black Mailbox",
    "block.pixelmon.mailbox_blue": "Blue Mailbox",
    "block.pixelmon.mailbox_brown": "Brown Mailbox",
    "block.pixelmon.mailbox_cyan": "Cyan Mailbox",
    "block.pixelmon.mailbox_gray": "Gray Mailbox",
    "block.pixelmon.mailbox_green": "Green Mailbox",
    "block.pixelmon.mailbox_light_blue": "Light Blue Mailbox",
    "block.pixelmon.mailbox_lime": "Lime Mailbox",
    "block.pixelmon.mailbox_magenta": "Magenta Mailbox",
    "block.pixelmon.mailbox_orange": "Orange Mailbox",
    "block.pixelmon.mailbox_pink": "Pink Mailbox",
    "block.pixelmon.mailbox_purple": "Purple Mailbox",
    "block.pixelmon.mailbox_red": "Red Mailbox",
    "block.pixelmon.mailbox_silver": "Silver Mailbox",
    "block.pixelmon.mailbox_white": "White Mailbox",
    "block.pixelmon.mailbox_yellow": "Yellow Mailbox",

    "block.pixelmon.letterbox_standing_black": "Black Letterbox",
    "block.pixelmon.letterbox_standing_blue": "Blue Letterbox",
    "block.pixelmon.letterbox_standing_brown": "Brown Letterbox",
    "block.pixelmon.letterbox_standing_cyan": "Cyan Letterbox",
    "block.pixelmon.letterbox_standing_gray": "Gray Letterbox",
    "block.pixelmon.letterbox_standing_green": "Green Letterbox",
    "block.pixelmon.letterbox_standing_light_blue": "Light Blue Letterbox",
    "block.pixelmon.letterbox_standing_lime": "Lime Letterbox",
    "block.pixelmon.letterbox_standing_magenta": "Magenta Letterbox",
    "block.pixelmon.letterbox_standing_orange": "Orange Letterbox",
    "block.pixelmon.letterbox_standing_pink": "Pink Letterbox",
    "block.pixelmon.letterbox_standing_purple": "Purple Letterbox",
    "block.pixelmon.letterbox_standing_red": "Red Letterbox",
    "block.pixelmon.letterbox_standing_silver": "Silver Letterbox",
    "block.pixelmon.letterbox_standing_white": "White Letterbox",
    "block.pixelmon.letterbox_standing_yellow": "Yellow Letterbox",

    "block.pixelmon.relic_band": "Relic Band",
    "block.pixelmon.relic_band.tooltip": "Can be sold to shopkeepers.",
    "block.pixelmon.relic_crown": "Relic Crown",
    "block.pixelmon.relic_crown.tooltip": "Can be sold to shopkeepers.",
    "block.pixelmon.relic_statue": "Relic Statue",
    "block.pixelmon.relic_statue.tooltip": "Can be sold to shopkeepers.",
    "block.pixelmon.relic_vase": "Relic Vase",
    "block.pixelmon.relic_vase.tooltip": "Can be sold to shopkeepers.",

    "Box": "Box",
    "Fridge": "Fridge",
    "EndTable": "End Table",

    "ability.Adaptability": "Adaptability",
    "ability.Adaptability.description": "Powers up moves of the same type as the Pokémon.",
    "ability.Aerilate": "Aerilate",
    "ability.Aerilate.description": "Normal-type moves become Flying-type moves.",
    "ability.Aftermath": "Aftermath",
    "ability.Aftermath.description": "Damages the attacker landing the finishing hit.",
    "ability.AirLock": "Air Lock",
    "ability.AirLock.description": "Eliminates the effects of weather.",
    "ability.Analytic": "Analytic",
    "ability.Analytic.description": "Boosts move power when the Pokémon moves after the target.",
    "ability.AngerPoint": "Anger Point",
    "ability.AngerPoint.description": "Maxes the Attack stat after the Pokémon takes a critical hit.",
    "ability.Anticipation": "Anticipation",
    "ability.Anticipation.description": "Senses an opposing Pokémon's dangerous moves.",
    "ability.ArenaTrap": "Arena Trap",
    "ability.ArenaTrap.description": "Prevents opposing Pokémon from fleeing.",
    "ability.AromaVeil": "Aroma Veil",
    "ability.AromaVeil.description": "Protects allies from attacks that effect their mental state",
    "ability.AsOne": "As One",
    "ability.AsOne.description": "This Ability combines the effects of both Calyrex's Unnerve Ability and its rides Neigh.",
    "ability.AuraBreak": "Aura Break",
    "ability.AuraBreak.description": "The effects of \"Aura\" Abilities are reversed.",
    "ability.BadDreams": "Bad Dreams",
    "ability.BadDreams.description": "Reduces the HP of sleeping opposing Pokémon.",
    "ability.BallFetch": "Ball Fetch",
    "ability.BallFetch.description": "If not holding an item, it'll fetch the Poké Ball from the first failed throw.",
    "ability.Battery": "Battery",
    "ability.Battery.description": "Powers up ally Pokémon's special moves.",
    "ability.BattleArmour": "Battle Armor",
    "ability.BattleArmour.description": "Protects the Pokémon from critical hits.",
    "ability.BattleBond": "Battle Bond",
    "ability.BattleBond.description": "Defeat a Pokémon to unleash Ash Greninja!",
    "ability.BeastBoost": "Beast Boost",
    "ability.BeastBoost.description": "The Pokémon boosts its most proficient stat each time it knocks out a Pokémon.",
    "ability.Berserk": "Berserk",
    "ability.Berserk.description": "Raises Special Attack when HP drops below half.",
    "ability.BigPecks": "Big Pecks",
    "ability.BigPecks.description": "Protects the Pokémon from Defense-lowering attacks.",
    "ability.Blaze": "Blaze",
    "ability.Blaze.description": "Powers up Fire-type moves when the Pokémon is in trouble.",
    "ability.Bulletproof": "Bulletproof",
    "ability.Bulletproof.description": "Protects the Pokémon from some ball and bomb moves.",
    "ability.CheekPouch": "Cheek Pouch",
    "ability.CheekPouch.description": "Restores HP as well when the Pokémon eats a Berry.",
    "ability.ChillingNeigh": "Chilling Neigh",
    "ability.ChillingNeigh.description": "When the Pokémon knocks out a target, it utters a chilling neigh, which boosts its Attack stat.",
    "ability.Chlorophyll": "Chlorophyll",
    "ability.Chlorophyll.description": "Boosts the Pokémon's Speed stat in sunshine.",
    "ability.ClearBody": "Clear Body",
    "ability.ClearBody.description": "Prevents other Pokémon from lowering its stats.",
    "ability.CloudNine": "Cloud Nine",
    "ability.CloudNine.description": "Eliminates the effects of weather.",
    "ability.ColorChange": "Color Change",
    "ability.ColorChange.description": "The Pokémon's type becomes the type of the move used on it.",
    "ability.Comatose": "Comatose",
    "ability.Comatose.description": "The Pokémon is always drowsing and will never wake up. It can attack without waking up.",
    "ability.Competitive": "Competitive",
    "ability.Competitive.description": "Boosts the Sp. Atk stat when a stat is lowered.",
    "ability.CompoundEyes": "Compound Eyes",
    "ability.CompoundEyes.description": "Boosts the Pokémon's accuracy.",
    "ability.Contrary": "Contrary",
    "ability.Contrary.description": "Makes stat changes have an opposite effect.",
    "ability.Corrosion": "Corrosion",
    "ability.Corrosion.description": "The Pokémon can poison Steel and Poison types.",
    "ability.CottonDown": "Cotton Down",
    "ability.CottonDown.description": "When hit by an attack, it lowers the Speed stat of all Pokémon except itself.",
    "ability.CuriousMedicine": "Curious Medicine",
    "ability.CuriousMedicine.description": "Removes all stat changes from allies on entry to battle.",
    "ability.CursedBody": "Cursed Body",
    "ability.CursedBody.description": "May disable a move used on the Pokémon.",
    "ability.CuteCharm": "Cute Charm",
    "ability.CuteCharm.description": "Contact with the Pokémon may cause infatuation.",
    "ability.Damp": "Damp",
    "ability.Damp.description": "Prevents the use of self-destructing moves.",
    "ability.Dancer": "Dancer",
    "ability.Dancer.description": "Copies Dance moves that are used.",
    "ability.DarkAura": "Dark Aura",
    "ability.DarkAura.description": "Powers up each Pokémon's Dark-type moves.",
    "ability.DauntlessShield": "Dauntless Shield",
    "ability.DauntlessShield.description": "Boosts the Pokémon's Defense stat when the Pokémon enters a battle.",
    "ability.Dazzling": "Dazzling",
    "ability.Dazzling.description": "Protects the Pokémon from high-priority moves.",
    "ability.Defeatist": "Defeatist",
    "ability.Defeatist.description": "Lowers stats when HP becomes half or less.",
    "ability.Defiant": "Defiant",
    "ability.Defiant.description": "Boosts the Pokémon's Attack stat when its stats are lowered.",
    "ability.Disguise": "Disguise",
    "ability.Disguise.description": "Once per battle, the shroud that covers the Pokémon can protect it from an attack.",
    "ability.Download": "Download",
    "ability.Download.description": "Adjusts power based on an opposing Pokémon's stats.",
    "ability.DragonsMaw": "Dragon's Maw",
    "ability.DragonsMaw.description": "Powers up Dragon-type moves.",
    "ability.Drizzle": "Drizzle",
    "ability.Drizzle.description": "The Pokémon makes it rain when it enters a battle.",
    "ability.Drought": "Drought",
    "ability.Drought.description": "Turns the sunlight harsh when the Pokémon enters a battle.",
    "ability.DrySkin": "Dry Skin",
    "ability.DrySkin.description": "Reduces HP if it is hot. Water restores HP.",
    "ability.EarlyBird": "Early Bird",
    "ability.EarlyBird.description": "The Pokémon awakens quickly from sleep.",
    "ability.EffectSpore": "Effect Spore",
    "ability.EffectSpore.description": "Contact may poison or cause paralysis or sleep.",
    "ability.ElectricSurge": "Electric Surge",
    "ability.ElectricSurge.description": "Turns the ground into Electric Terrain when the Pokémon enters a battle.",
    "ability.EmergencyExit": "Emergency Exit",
    "ability.EmergencyExit.description": "The Pokémon, sensing danger, switches out when its HP becomes half or less.",
    "ability.Error": "§k?§rError§k?§r",
    "ability.Error.description": "§k5720b010982e4b1865c45061661793a7§r",
    "ability.FairyAura": "Fairy Aura",
    "ability.FairyAura.description": "Powers up each Pokémon's Fairy-type moves.",
    "ability.Filter": "Filter",
    "ability.Filter.description": "Reduces damage from super-effective attacks.",
    "ability.FlameBody": "Flame Body",
    "ability.FlameBody.description": "Contact with the Pokémon may burn the attacker.",
    "ability.FlareBoost": "Flare Boost",
    "ability.FlareBoost.description": "Powers up special attacks when the Pokémon is burned.",
    "ability.FlashFire": "Flash Fire",
    "ability.FlashFire.description": "Powers up the Pokémon's Fire-type moves if it is hit by one.",
    "ability.FlowerGift": "Flower Gift",
    "ability.FlowerGift.description": "Powers up party Pokémon when it is sunny.",
    "ability.FlowerVeil": "Flower Veil",
    "ability.FlowerVeil.description": "Prevents lowering of ally Grass-type Pokémon's stats.",
    "ability.Fluffy": "Fluffy",
    "ability.Fluffy.description": "Halves the damage taken from moves that make direct contact, but doubles that of Fire-type moves.",
    "ability.Forecast": "Forecast",
    "ability.Forecast.description": "Castform transforms with the weather.",
    "ability.Forewarn": "Forewarn",
    "ability.Forewarn.description": "Determines what moves an opposing Pokémon has.",
    "ability.FriendGuard": "Friend Guard",
    "ability.FriendGuard.description": "Reduces damage done to allies.",
    "ability.Frisk": "Frisk",
    "ability.Frisk.description": "The Pokémon can check an opposing Pokémon's held item.",
    "ability.FullMetalBody": "Full Metal Body",
    "ability.FullMetalBody.description": "Prevents other Pokémon from lowering its stats.",
    "ability.FurCoat": "Fur Coat",
    "ability.FurCoat.description": "Halves damage from physical moves.",
    "ability.GaleWings": "Gale Wings",
    "ability.GaleWings.description": "Gives priority to Flying-type moves, but only if the user has full health.",
    "ability.Galvanize": "Galvanize",
    "ability.Galvanize.description": "Normal-type moves become Electric-type moves. The power of those moves is boosted a little.",
    "ability.Gluttony": "Gluttony",
    "ability.Gluttony.description": "Makes the Pokémon use a held Berry earlier than usual.",
    "ability.Gooey": "Gooey",
    "ability.Gooey.description": "Contact with the Pokémon lowers the attackers Speed stat.",
    "ability.GorillaTactics": "Gorilla Tactics",
    "ability.GorillaTactics.description": "Boosts the Pokémon's Attack stat but only allows the use of the first selected move.",
    "ability.GrassPelt": "Grass Pelt",
    "ability.GrassPelt.description": "Boosts the Defense stat in Grassy Terrain.",
    "ability.GrassySurge": "Grassy Surge",
    "ability.GrassySurge.description": "Turns the ground into Grassy Terrain when the Pokémon enters a battle.",
    "ability.GrimNeigh": "Grim Neigh",
    "ability.GrimNeigh.description": "When the Pokémon knocks out a target, it utters a terrifying neigh, which boosts its Special Attack stat.",
    "ability.GulpMissile": "Gulp Missile",
    "ability.GulpMissile.description": "When using Surf or Dive, it catches prey it uses to attack when hit.",
    "ability.Guts": "Guts",
    "ability.Guts.description": "Boosts the Attack stat if the Pokémon has a status condition.",
    "ability.Harvest": "Harvest",
    "ability.Harvest.description": "May create another Berry after one is used.",
    "ability.Healer": "Healer",
    "ability.Healer.description": "Sometimes heals an ally's status condition.",
    "ability.Heatproof": "Heatproof",
    "ability.Heatproof.description": "Weakens the power of Fire-type moves.",
    "ability.HeavyMetal": "Heavy Metal",
    "ability.HeavyMetal.description": "Doubles the Pokémon's weight.",
    "ability.HoneyGather": "Honey Gather",
    "ability.HoneyGather.description": "The Pokémon may gather Honey from somewhere.",
    "ability.HugePower": "Huge Power",
    "ability.HugePower.description": "Boosts the Pokémon's Attack stat.",
    "ability.HungerSwitch": "Hunger Switch",
    "ability.HungerSwitch.description": "The Pokémon changes between Full Belly Mode and Hangry Mode after the end of each turn.",
    "ability.Hustle": "Hustle",
    "ability.Hustle.description": "Boosts the Attack stat, but lowers accuracy.",
    "ability.Hydration": "Hydration",
    "ability.Hydration.description": "Heals status conditions if it is raining.",
    "ability.HyperCutter": "Hyper Cutter",
    "ability.HyperCutter.description": "Prevents other Pokémon from lowering its Attack stat.",
    "ability.IceBody": "Ice Body",
    "ability.IceBody.description": "The Pokémon gradually regains HP in a hailstorm.",
    "ability.IceFace": "Ice Face",
    "ability.IceFace.description": "It's ice head takes a physical attack as substitute, changing it's appearance, and restored when hails.",
    "ability.IceScales": "Ice Scales",
    "ability.IceScales.description": "The Pokémon is protected by ice scales, which halve the damage taken from special moves.",
    "ability.Illuminate": "Illuminate",
    "ability.Illuminate.description": "Raises the likelihood of meeting wild Pokémon.",
    "ability.Illusion": "Illusion",
    "ability.Illusion.description": "Comes out disguised as the Pokémon in the party's last spot.",
    "ability.Immunity": "Immunity",
    "ability.Immunity.description": "Prevents the Pokémon from getting poisoned.",
    "ability.Imposter": "Imposter",
    "ability.Imposter.description": "The Pokémon transforms itself into the Pokémon it is facing.",
    "ability.Infiltrator": "Infiltrator",
    "ability.Infiltrator.description": "Passes through the opposing Pokémon's barrier and strikes.",
    "ability.InnardsOut": "Innards Out",
    "ability.InnardsOut.description": "Deals damage upon fainting.",
    "ability.InnerFocus": "Inner Focus",
    "ability.InnerFocus.description": "Protects the Pokémon from flinching.",
    "ability.Insomnia": "Insomnia",
    "ability.Insomnia.description": "Prevents the Pokémon from falling asleep.",
    "ability.Intimidate": "Intimidate",
    "ability.Intimidate.description": "Lowers the opposing Pokémon's Attack stat.",
    "ability.IntrepidSword": "Intrepid Sword",
    "ability.IntrepidSword.description": "Boosts the Pokémon's Attack stat when the Pokémon enters a battle.",
    "ability.IronBarbs": "Iron Barbs",
    "ability.IronBarbs.description": "Inflicts damage to the attacker on contact.",
    "ability.IronFist": "Iron Fist",
    "ability.IronFist.description": "Powers up punching moves.",
    "ability.Justified": "Justified",
    "ability.Justified.description": "Boosts the Attack stat when it's hit by a Dark-type move.",
    "ability.KeenEye": "Keen Eye",
    "ability.KeenEye.description": "Prevents other Pokémon from lowering accuracy.",
    "ability.Klutz": "Klutz",
    "ability.Klutz.description": "The Pokémon can't use any held items.",
    "ability.LeafGuard": "Leaf Guard",
    "ability.LeafGuard.description": "Prevents status conditions in sunny weather.",
    "ability.Levitate": "Levitate",
    "ability.Levitate.description": "Gives full immunity to all Ground-type moves.",
    "ability.Libero": "Libero",
    "ability.Libero.description": "Changes the Pokémon's type to the type of the move it's about to use.",
    "ability.LightMetal": "Light Metal",
    "ability.LightMetal.description": "Halves the Pokémon's weight.",
    "ability.LightningRod": "Lightning Rod",
    "ability.LightningRod.description": "Draws in all Electric-type moves to boost its Sp. Atk stat.",
    "ability.Limber": "Limber",
    "ability.Limber.description": "Protects the Pokémon from paralysis.",
    "ability.LiquidOoze": "Liquid Ooze",
    "ability.LiquidOoze.description": "Damages attackers using any draining move.",
    "ability.LiquidVoice": "Liquid Voice",
    "ability.LiquidVoice.description": "All sound-based moves become Water-type moves.",
    "ability.LongReach": "Long Reach",
    "ability.LongReach.description": "The Pokémon uses its moves without making contact with the target.",
    "ability.MagicBounce": "Magic Bounce",
    "ability.MagicBounce.description": "Reflects status moves.",
    "ability.MagicGuard": "Magic Guard",
    "ability.MagicGuard.description": "The Pokémon only takes damage from attacks.",
    "ability.Magician": "Magician",
    "ability.Magician.description": "The Pokémon steals the held item of a Pokémon it hits with a move.",
    "ability.MagmaArmor": "Magma Armor",
    "ability.MagmaArmor.description": "Prevents the Pokémon from becoming frozen.",
    "ability.MagnetPull": "Magnet Pull",
    "ability.MagnetPull.description": "Prevents Steel-type Pokémon from escaping.",
    "ability.MarvelScale": "Marvel Scale",
    "ability.MarvelScale.description": "Boosts the Defense stat if the Pokémon has a status condition.",
    "ability.MegaLauncher": "Mega Launcher",
    "ability.MegaLauncher.description": "Powers up aura and pulse moves.",
    "ability.Merciless": "Merciless",
    "ability.Merciless.description": "The Pokémon’s attacks become critical hits if the target is poisoned.",
    "ability.Mimicry": "Mimicry",
    "ability.Mimicry.description": "Changes the Pokémon's type depending on the terrain.",
    "ability.Minus": "Minus",
    "ability.Minus.description": "Boosts the Sp. Atk stat if another Pokémon has Plus or Minus.",
    "ability.MirrorArmor": "Mirror Armor",
    "ability.MirrorArmor.description": "Bounces back only the stat-lowering effects that the Pokémon receives.",
    "ability.MistySurge": "Misty Surge",
    "ability.MistySurge.description": "Turns the ground into Misty Terrain when the Pokémon enters a battle.",
    "ability.MoldBreaker": "Mold Breaker",
    "ability.MoldBreaker.description": "Moves can be used on the target regardless of its Abilities.",
    "ability.Moody": "Moody",
    "ability.Moody.description": "Raises one stat and lowers another.",
    "ability.MotorDrive": "Motor Drive",
    "ability.MotorDrive.description": "Boosts the Speed stat when it's hit by an Electric-type move.",
    "ability.Moxie": "Moxie",
    "ability.Moxie.description": "Boosts the Attack stat after knocking out any Pokémon.",
    "ability.Multiscale": "Multiscale",
    "ability.Multiscale.description": "Reduces damage the Pokémon takes when its HP is full.",
    "ability.Multitype": "Multitype",
    "ability.Multitype.description": "Changes the Pokémon's type to match the Plate it holds.",
    "ability.Mummy": "Mummy",
    "ability.Mummy.description": "Contact with the Pokémon spreads this Ability.",
    "ability.NaturalCure": "Natural Cure",
    "ability.NaturalCure.description": "All status conditions heal when the Pokémon switches out.",
    "ability.NoGuard": "No Guard",
    "ability.NoGuard.description": "Ensures attacks by or against the Pokémon land.",
    "ability.Normalize": "Normalize",
    "ability.Normalize.description": "All the Pokémon's moves become Normal type.",
    "ability.Neuroforce": "Neuroforce",
    "ability.Neuroforce.description": "Powers up moves that are super effective.",
    "ability.NeutralizingGas": "Neutralizing Gas",
    "ability.NeutralizingGas.description": "When in battle, disables the effects of all Pokémon's Abilities.",
    "ability.Oblivious": "Oblivious",
    "ability.Oblivious.description": "Keeps the Pokémon from being infatuated or falling for taunts.",
    "ability.Overcoat": "Overcoat",
    "ability.Overcoat.description": "Protects the Pokémon from things like sand, hail and powder.",
    "ability.Overgrow": "Overgrow",
    "ability.Overgrow.description": "Powers up Grass-type moves when the Pokémon is in trouble.",
    "ability.OwnTempo": "Own Tempo",
    "ability.OwnTempo.description": "Prevents the Pokémon from becoming confused.",
    "ability.ParentalBond": "Parental Bond",
    "ability.ParentalBond.description": "Parent and child attack together.",
    "ability.PastelVeil": "Pastel Veil",
    "ability.PastelVeil.description": "Protects the Pokémon and its ally Pokémon from being poisoned.",
    "ability.PerishBody": "Perish Body",
    "ability.PerishBody.description": "Hit by a contact move, the Pokémon and the attacker will faint after three turns unless switched.",
    "ability.Pickpocket": "Pickpocket",
    "ability.Pickpocket.description": "Steals an item from an attacker that made direct contact.",
    "ability.Pickup": "Pickup",
    "ability.Pickup.description": "The Pokémon may pick up items.",
    "ability.Pixilate": "Pixilate",
    "ability.Pixilate.description": "Normal-type moves become Fairy-type moves.",
    "ability.Plus": "Plus",
    "ability.Plus.description": "Boosts the Sp. Atk stat if another Pokémon has Plus or Minus.",
    "ability.PoisonHeal": "Poison Heal",
    "ability.PoisonHeal.description": "Restores HP if the Pokémon is poisoned.",
    "ability.PoisonPoint": "Poison Point",
    "ability.PoisonPoint.description": "Contact with the Pokémon may poison the attacker.",
    "ability.PoisonTouch": "Poison Touch",
    "ability.PoisonTouch.description": "May poison a target when the Pokémon makes contact.",
    "ability.PowerConstruct": "Power Construct",
    "ability.PowerConstruct.description": "Changes form when HP drops below half.",
    "ability.PowerOfAlchemy": "Power of Alchemy",
    "ability.PowerOfAlchemy.description": "The Pokémon copies the Ability of a defeated ally.",
    "ability.PowerSpot": "Power Spot",
    "ability.PowerSpot.description": "Just being next to the Pokémon powers up moves.",
    "ability.Prankster": "Prankster",
    "ability.Prankster.description": "Gives priority to a status move, but fails against Dark-type Pokémon.",
    "ability.Pressure": "Pressure",
    "ability.Pressure.description": "The Pokémon raises opposing Pokémon's PP usage.",
    "ability.PrismArmor": "Prism Armor",
    "ability.PrismArmor.description": "Reduces the power of super-effective attacks taken.",
    "ability.PropellerTail": "Propeller Tail",
    "ability.PropellerTail.description": "Ignores the effects of opposing Pokémon's Abilities and moves that draw in moves.",
    "ability.Protean": "Protean",
    "ability.Protean.description": "Changes the Pokémon's type to the type of the move it's using.",
    "ability.PsychicSurge": "Psychic Surge",
    "ability.PsychicSurge.description": "Turns the ground into Psychic Terrain when the Pokémon enters a battle.",
    "ability.PunkRock": "Punk Rock",
    "ability.PunkRock.description": "Boosts the power of sound-based moves, taking half their damage.",
    "ability.PurePower": "Pure Power",
    "ability.PurePower.description": "Boosts the Pokémon's Attack stat.",
    "ability.QueenlyMajesty": "Queenly Majesty",
    "ability.QueenlyMajesty.description": "Prevents use of priority moves.",
    "ability.QuickDraw": "Quick Draw",
    "ability.QuickDraw.description": "Enables the Pokémon to move first occasionally.",
    "ability.QuickFeet": "Quick Feet",
    "ability.QuickFeet.description": "Boosts the Speed stat if the Pokémon has a status condition.",
    "ability.RainDish": "Rain Dish",
    "ability.RainDish.description": "The Pokémon gradually regains HP in rain.",
    "ability.Rattled": "Rattled",
    "ability.Rattled.description": "Some move types scare it and boost it Speed stat.",
    "ability.Receiver": "Receiver",
    "ability.Receiver.description": "Inherits an ally's ability when it faints.",
    "ability.Reckless": "Reckless",
    "ability.Reckless.description": "Powers up moves that have recoil damage.",
    "ability.Refrigerate": "Refrigerate",
    "ability.Refrigerate.description": "Normal-type moves become Ice-type moves.",
    "ability.Regenerator": "Regenerator",
    "ability.Regenerator.description": "Restores a little HP when withdrawn from battle.",
    "ability.Ripen": "Ripen",
    "ability.Ripen.description": "Ripens Berries and doubles their effect.",
    "ability.Rivalry": "Rivalry",
    "ability.Rivalry.description": "Deals more damage to Pokémon of the same gender.",
    "ability.RKSSystem": "RKS System",
    "ability.RKSSystem.description": "Changes type depending on held item.",
    "ability.RockHead": "Rock Head",
    "ability.RockHead.description": "Protects the Pokémon from recoil damage.",
    "ability.RoughSkin": "Rough Skin",
    "ability.RoughSkin.description": "Inflicts damage to the attacker on contact.",
    "ability.RunAway": "Run Away",
    "ability.RunAway.description": "Enables a sure getaway from wild Pokémon.",
    "ability.SandForce": "Sand Force",
    "ability.SandForce.description": "Boosts certain moves' power in a sandstorm.",
    "ability.SandRush": "Sand Rush",
    "ability.SandRush.description": "Boosts the Pokémon's Speed stat in a sandstorm.",
    "ability.SandSpit": "Sand Spit",
    "ability.SandSpit.description": "The Pokémon creates a sandstorm when it's hit by an attack.",
    "ability.SandStream": "Sand Stream",
    "ability.SandStream.description": "The Pokémon summons a sandstorm in battle.",
    "ability.SandVeil": "Sand Veil",
    "ability.SandVeil.description": "Boosts the Pokémon's evasion in a sandstorm.",
    "ability.SapSipper": "Sap Sipper",
    "ability.SapSipper.description": "Boosts the Attack stat when hit by a Grass-type move.",
    "ability.Schooling": "Schooling",
    "ability.Schooling.description": "Changes Wishiwashi to School form.",
    "ability.Scrappy": "Scrappy",
    "ability.Scrappy.description": "Makes Normal- and Fighting-type moves hit Ghost-type Pokémon.",
    "ability.ScreenCleaner": "Screen Cleaner",
    "ability.ScreenCleaner.description": "Nullifies the effects of Light Screen, Reflect, and Aurora Veil for all in battle.",
    "ability.SereneGrace": "Serene Grace",
    "ability.SereneGrace.description": "Boosts the likelihood of additional effects occurring.",
    "ability.ShadowShield": "Shadow Shield",
    "ability.ShadowShield.description": "Reduces damage when HP is full.",
    "ability.ShadowTag": "Shadow Tag",
    "ability.ShadowTag.description": "Prevents opposing Pokémon from escaping.",
    "ability.ShedSkin": "Shed Skin",
    "ability.ShedSkin.description": "The Pokémon may heal its own status conditions.",
    "ability.SheerForce": "Sheer Force",
    "ability.SheerForce.description": "Removes additional effects to increase move damage.",
    "ability.ShellArmour": "Shell Armor",
    "ability.ShellArmour.description": "Protects the Pokémon from critical hits.",
    "ability.ShieldDust": "Shield Dust",
    "ability.ShieldDust.description": "Blocks the additional effects of attacks taken.",
    "ability.ShieldsDown": "Shields Down",
    "ability.ShieldsDown.description": "Changes stats when HP drops below half.",
    "ability.Simple": "Simple",
    "ability.Simple.description": "The Pokémon is prone to wild stat changes.",
    "ability.SkillLink": "Skill Link",
    "ability.SkillLink.description": "Increases the number of times multi-strike moves hit.",
    "ability.SlowStart": "Slow Start",
    "ability.SlowStart.description": "Temporarily halves the Pokémon's Attack and Speed stats.",
    "ability.SlushRush": "Slush Rush",
    "ability.SlushRush.description": "Boosts the Pokémon's Speed stat in a hailstorm.",
    "ability.Sniper": "Sniper",
    "ability.Sniper.description": "Powers up moves if they become critical hits.",
    "ability.SnowCloak": "Snow Cloak",
    "ability.SnowCloak.description": "Boosts evasion in a hailstorm.",
    "ability.SnowWarning": "Snow Warning",
    "ability.SnowWarning.description": "The Pokémon summons a hailstorm when it enters a battle.",
    "ability.SolarPower": "Solar Power",
    "ability.SolarPower.description": "Boosts the Sp. Atk stat in sunny weather, but HP decreases.",
    "ability.SolidRock": "Solid Rock",
    "ability.SolidRock.description": "Reduces damage from super-effective attacks.",
    "ability.SoulHeart": "Soul-Heart",
    "ability.SoulHeart.description": "Boosts its Sp. Atk stat every time a Pokémon faints.",
    "ability.Soundproof": "Soundproof",
    "ability.Soundproof.description": "Gives full immunity to all sound-based moves.",
    "ability.SpeedBoost": "Speed Boost",
    "ability.SpeedBoost.description": "Its Speed stat is gradually boosted.",
    "ability.Stakeout": "Stakeout",
    "ability.Stakeout.description": "Doubles the damage dealt to the target's replacement if the target switches out.",
    "ability.Stall": "Stall",
    "ability.Stall.description": "The Pokémon moves after all other Pokémon do.",
    "ability.Stalwart": "Stalwart",
    "ability.Stalwart.description": "Ignores the effects of opposing Pokémon's Abilities and moves that draw in moves.",
    "ability.Stamina": "Stamina",
    "ability.Stamina.description": "Raises Defense when attacked.",
    "ability.StanceChange": "Stance Change",
    "ability.StanceChange.description": "The Pokémon changes form depending on how it battles.",
    "ability.Static": "Static",
    "ability.Static.description": "Contact with the Pokémon may cause paralysis.",
    "ability.Steadfast": "Steadfast",
    "ability.Steadfast.description": "Boosts the Speed stat each time the Pokémon flinches.",
    "ability.SteamEngine": "Steam Engine",
    "ability.SteamEngine.description": "Boosts the Pokémon's Speed stat drastically if hit by a Fire- or Water-type move.",
    "ability.Steelworker": "Steelworker",
    "ability.Steelworker.description": "Powers up Steel-type moves.",
    "ability.SteelySpirit": "Steely Spirit",
    "ability.SteelySpirit.description": "Powers up ally Pokémon's Steel-type moves.",
    "ability.Stench": "Stench",
    "ability.Stench.description": "The stench may cause the target to flinch.",
    "ability.StickyHold": "Sticky Hold",
    "ability.StickyHold.description": "Protects the Pokémon from item theft.",
    "ability.StormDrain": "Storm Drain",
    "ability.StormDrain.description": "Draws in all Water-type moves to boost its Sp. Atk stat.",
    "ability.StrongJaw": "Strong Jaw",
    "ability.StrongJaw.description": "The Pokémon's strong jaw gives it tremendous biting power.",
    "ability.Sturdy": "Sturdy",
    "ability.Sturdy.description": "It cannot be knocked out with one hit.",
    "ability.SuctionCups": "Suction Cups",
    "ability.SuctionCups.description": "Negates all moves and items that force switching out.",
    "ability.SuperLuck": "Super Luck",
    "ability.SuperLuck.description": "Boosts the critical-hit ratios of moves.",
    "ability.SurgeSurfer": "Surge Surfer",
    "ability.SurgeSurfer.description": "Doubles Speed during Electric Terrain.",
    "ability.Swarm": "Swarm",
    "ability.Swarm.description": "Powers up Bug-type moves when the Pokémon is in trouble.",
    "ability.SweetVeil": "Sweet Veil",
    "ability.SweetVeil.description": "Prevents itself and ally Pokémon from falling asleep.",
    "ability.SwiftSwim": "Swift Swim",
    "ability.SwiftSwim.description": "Boosts the Pokémon's Speed stat in rain.",
    "ability.Symbiosis": "Symbiosis",
    "ability.Symbiosis.description": "The Pokémon can pass an item to an ally.",
    "ability.Synchronize": "Synchronize",
    "ability.Synchronize.description": "Passes poison, paralyze, or burn to the Pokémon that inflicted it.",
    "ability.TangledFeet": "Tangled Feet",
    "ability.TangledFeet.description": "Raises evasion if the Pokémon is confused.",
    "ability.TanglingHair": "Tangling Hair",
    "ability.TanglingHair.description": "Contact with the Pokémon lowers the attacker’s Speed stat.",
    "ability.Technician": "Technician",
    "ability.Technician.description": "Powers up the Pokémon's weaker moves.",
    "ability.Telepathy": "Telepathy",
    "ability.Telepathy.description": "Anticipates an ally's attack and dodges it.",
    "ability.Teravolt": "Teravolt",
    "ability.Teravolt.description": "Moves can be used on the target regardless of its Abilities.",
    "ability.ThickFat": "Thick Fat",
    "ability.ThickFat.description": "Boosts resistance to Fire- and Ice-type moves.",
    "ability.TintedLens": "Tinted Lens",
    "ability.TintedLens.description": "Powers up \"not very effective\" moves.",
    "ability.Torrent": "Torrent",
    "ability.Torrent.description": "Powers up Water-type moves when the Pokémon is in trouble.",
    "ability.ToughClaws": "Tough Claws",
    "ability.ToughClaws.description": "Powers up moves that make direct contact.",
    "ability.ToxicBoost": "Toxic Boost",
    "ability.ToxicBoost.description": "Powers up physical attacks when the Pokémon is poisoned.",
    "ability.Trace": "Trace",
    "ability.Trace.description": "The Pokémon copies an opposing Pokémon's Ability.",
    "ability.Transistor": "Transistor",
    "ability.Transistor.description": "Powers up Electric-type moves.",
    "ability.Triage": "Triage",
    "ability.Triage.description": "Gives priority to restorative moves.",
    "ability.Truant": "Truant",
    "ability.Truant.description": "The Pokémon can't attack on consecutive turns.",
    "ability.Turboblaze": "Turboblaze",
    "ability.Turboblaze.description": "Moves can be used on the target regardless of its Abilities.",
    "ability.Unaware": "Unaware",
    "ability.Unaware.description": "Ignores the opposing Pokémon's stat changes.",
    "ability.Unburden": "Unburden",
    "ability.Unburden.description": "Boosts the Speed stat if its held item is used or lost.",
    "ability.Unnerve": "Unnerve",
    "ability.Unnerve.description": "Unnerves opposing Pokémon and makes them unable to eat Berries.",
    "ability.UnseenFist": "Unseen Fist",
    "ability.UnseenFist.description": "If the Pokémon uses moves that make direct contact, it can attack the target even if the target protects itself.",
    "ability.VictoryStar": "Victory Star",
    "ability.VictoryStar.description": "Boosts the accuracy of its allies and itself.",
    "ability.VitalSpirit": "Vital Spirit",
    "ability.VitalSpirit.description": "Prevents the Pokémon from falling asleep.",
    "ability.VoltAbsorb": "Volt Absorb",
    "ability.VoltAbsorb.description": "Restores HP if hit by an Electric-type move.",
    "ability.WanderingSpirit": "Wandering Spirit",
    "ability.WanderingSpirit.description": "Exchanges Abilities with a Pokémon that hits it with a move that makes direct contact.",
    "ability.WaterAbsorb": "Water Absorb",
    "ability.WaterAbsorb.description": "Restores HP if hit by a Water-type move.",
    "ability.WaterBubble": "Water Bubble",
    "ability.WaterBubble.description": "Lowers the power of Fire-type moves and prevents burns.",
    "ability.WaterCompaction": "Water Compaction",
    "ability.WaterCompaction.description": "Sharply raises Defense when hit by a Water-type move.",
    "ability.WaterVeil": "Water Veil",
    "ability.WaterVeil.description": "Prevents the Pokémon from getting a burn.",
    "ability.WeakArmor": "Weak Armor",
    "ability.WeakArmor.description": "Physical attacks lower its Defense stat and raise its Speed stat.",
    "ability.WhiteSmoke": "White Smoke",
    "ability.WhiteSmoke.description": "Prevents other Pokémon from lowering its stats.",
    "ability.WimpOut": "Wimp Out",
    "ability.WimpOut.description": "The Pokémon cowardly switches out when its HP becomes half or less.",
    "ability.WonderGuard": "Wonder Guard",
    "ability.WonderGuard.description": "Only super-effective moves will hit.",
    "ability.WonderSkin": "Wonder Skin",
    "ability.WonderSkin.description": "Makes status moves more likely to miss.",
    "ability.ZenMode": "Zen Mode",
    "ability.ZenMode.description": "Changes the Pokémon's shape when HP is half or less.",
    "ability.DeltaStream": "Delta Stream",
    "ability.DeltaStream.description": "The Pokémon changes the weather to eliminate all of the Flying type's weaknesses.",
    "ability.DesolateLand": "Desolate Land",
    "ability.DesolateLand.description": "The Pokémon changes the weather to nullify Water-type attacks.",
    "ability.PrimordialSea": "Primordial Sea",
    "ability.PrimordialSea.description": "The Pokémon changes the weather to nullify Fire-type attacks.",
    "ability.ComingSoon": "Coming Soon!",
    "ability.ComingSoon.description": "This Ability has not been coded yet, but it will be soon!",

    "pixelmon.battletext.noeffect": "It doesn't affect %s...",
    "pixelmon.battletext.movefailed": "But it failed!",
    "pixelmon.battletext.wontuse": "%s shook its head. It seems like it can't use this move...",
    "pixelmon.battletext.criticalhit": "A critical hit!",
    "pixelmon.battletext.criticalhittarget": "A critical hit on %s!",
    "pixelmon.battletext.wasnoteffective": "It wasn't very effective...",
    "pixelmon.battletext.wasnoteffectivetarget": "It wasn't very effective on %s...",
    "pixelmon.battletext.supereffective": "It's super effective!",
    "pixelmon.battletext.supereffectivetarget": "It's super effective on %s!",
    "pixelmon.battletext.missedattack": "%s avoided the attack!",
    "pixelmon.battletext.butmovefailed": "But it failed!",
    "pixelmon.battletext.used": "%s used %s!",
    "pixelmon.battletext.sentout": "%s sent out %s!",
    "pixelmon.battletext.cantuse": "But %s can't use the move!",
    "pixelmon.battletext.aura": "%s's aura flared to life!",
    "pixelmon.battletext.statsrosespecific1": "Its %s rose!",
    "pixelmon.battletext.statsrose1": "Its stats rose!",
    "pixelmon.battletext.statsrosespecific2": "Its %s rose sharply!",
    "pixelmon.battletext.statsrose2": "Its stats rose sharply!",
    "pixelmon.battletext.statsrosespecific3": "Its %s rose drastically!",
    "pixelmon.battletext.statsrose3": "Its stats rose drastically!",

    "pixelmon.battletext.megareact": "%s's %s is reacting to %s's Key Stone!",
    "pixelmon.battletext.ashgreninja.react": "Greninja became fully charged due to its bond with %s!",
    "pixelmon.battletext.megaevolve": "%s has Mega Evolved into Mega %s!",
    "pixelmon.battletext.ultraburst": "Necrozma regained it's true power through Ultra Burst!",
    "pixelmon.battletext.ashgreninja.evolve": "Greninja has become Ash Greninja!",
    "pixelmon.battletext.rayquazamegareact": "%s's fervent wish has reached Rayquaza!",
    "pixelmon.battletext.necrozmaultrareact": "Bright light is about to burst out of Necrozma!",
    "pixelmon.battletext.primalreversion": "%s drew strength from nature and underwent Primal Reversion!",
    "pixelmon.battletext.dynamax": "Dynamax Energy surrounds %s!",
    "pixelmon.battletext.dynamaxlost": "The Dynamax Energy surrounding %s fades...",

    "pixelmon.effect.regainedenergy": "%s regained energy!",
    "pixelmon.effect.atedreams": "%s ate %s's dream!",
    "pixelmon.effect.notasleep": "%s is not asleep!",
    "pixelmon.effect.effectfailed": "But it failed!",
    "pixelmon.effect.snaptrap": "%s was trapped in the snaptrap!",
    "pixelmon.effect.blockedbydynamax": "The move was blocked by the power of Dynamax!",
    "pixelmon.effect.foresawattack": "%s foresaw an attack!",
    "pixelmon.effect.modifierscleared": "All stat changes were eliminated!",
    "pixelmon.effect.clearsmog": "%s's stat changes were eliminated!",
    "pixelmon.effect.washealed": "%s was healed!",
    "pixelmon.effect.healother": "%s healed %s!",
    "pixelmon.effect.hurtlanding": "%s kept on going and crashed!",
    "pixelmon.effect.magnitude": "Magnitude %d!",
    "pixelmon.effect.wagfinger": "%s waggled its finger!",
    "pixelmon.effect.OHKO": "It's a one-hit KO!",
    "pixelmon.effect.painsplit": "The battlers shared their pain!",
    "pixelmon.effect.payday": "Coins scattered all around!",
    "pixelmon.effect.paydayend": "%s found %s PokéDollars!",
    "pixelmon.effect.psycheup": "%s copied %s stat changes!",
    "pixelmon.effect.poltergeist": "%s is about to be attacked by its %s!",
    "pixelmon.effect.raisestats": "%s's stats rose!",
    "pixelmon.effect.freefrom": "%s freed itself from %s!",
    "pixelmon.effect.clearspikes": "%s cleared all entry hazards!",
    "pixelmon.effect.smackdown": "%s got knocked out of the sky!",
    "pixelmon.effect.ppdrop": "%s's %s lost PP!",
    "pixelmon.effect.struggle": "%s used Struggle!",
    "pixelmon.effect.suicide": "%s blew itself up!",
    "pixelmon.effect.bidetime": "%s bided its time!",
    "pixelmon.effect.burnup": "%s burned itself out!",
    "pixelmon.effect.storeenergy": "%s is storing energy!",
    "pixelmon.effect.unleashenergy": "%s unleashed its energy!",
    "pixelmon.effect.attackfailed": "%s's attack failed!",
    "pixelmon.effect.dighole": "%s digs a hole!",
    "pixelmon.effect.flyup": "%s flies up in the air!",
    "pixelmon.effect.bounce": "%s sprung up!",
    "pixelmon.effect.meteorbeam": "%s began charging up!",
    "pixelmon.effect.becameconfused": "%s became confused!",
    "pixelmon.effect.alreadyconfused": "%s is already confused!",
    "pixelmon.effect.razorwind": "%s whips up a strong wind!",
    "pixelmon.effect.skyattack": "%s becomes cloaked in a harsh light!",
    "pixelmon.effect.thrash": "%s became confused due to fatigue!",
    "pixelmon.effect.accuracyincreased": "%s's accuracy was increased!",
    "pixelmon.effect.accuracydecreased": "%s's accuracy was decreased!",
    "pixelmon.effect.evasionincreased": "%s's evasion was increased!",
    "pixelmon.effect.evasiondecreased": "%s's evasion was decreased!",
    "pixelmon.effect.attackincreased": "%s's Attack was increased!",
    "pixelmon.effect.attackdecreased": "%s's Attack was decreased!",
    "pixelmon.effect.defenseincreased": "%s's Defense was increased!",
    "pixelmon.effect.defensedecreased": "%s's Defense was decreased!",
    "pixelmon.effect.spatkincreased": "%s's Special Attack was increased!",
    "pixelmon.effect.spatkdecreased": "%s's Special Attack was decreased!",
    "pixelmon.effect.spdefincreased": "%s's Special Defense was increased!",
    "pixelmon.effect.spdefdecreased": "%s's Special Defense was decreased!",
    "pixelmon.effect.speedincreased": "%s's Speed was increased!",
    "pixelmon.effect.speeddecreased": "%s's Speed was decreased!",
    "pixelmon.effect.accuracyincreased2": "%s's accuracy was increased sharply!",
    "pixelmon.effect.accuracydecreased2": "%s's accuracy was decreased harshly!",
    "pixelmon.effect.evasionincreased2": "%s's evasion was increased sharply!",
    "pixelmon.effect.evasiondecreased2": "%s's evasion was decreased harshly!",
    "pixelmon.effect.attackincreased2": "%s's Attack was increased sharply!",
    "pixelmon.effect.attackdecreased2": "%s's Attack was decreased harshly!",
    "pixelmon.effect.defenseincreased2": "%s's Defense was increased sharply!",
    "pixelmon.effect.defensedecreased2": "%s's Defense was decreased harshly!",
    "pixelmon.effect.spatkincreased2": "%s's Special Attack was increased sharply!",
    "pixelmon.effect.spatkdecreased2": "%s's Special Attack was decreased harshly!",
    "pixelmon.effect.spdefincreased2": "%s's Special Defense was increased sharply!",
    "pixelmon.effect.spdefdecreased2": "%s's Special Defense was decreased harshly!",
    "pixelmon.effect.speedincreased2": "%s's Speed was increased sharply!",
    "pixelmon.effect.speeddecreased2": "%s's Speed was decreased harshly!",
    "pixelmon.effect.accuracyincreased3": "%s's accuracy was increased drastically!",
    "pixelmon.effect.accuracydecreased3": "%s's accuracy was decreased drastically!",
    "pixelmon.effect.evasionincreased3": "%s's evasion was increased drastically!",
    "pixelmon.effect.evasiondecreased3": "%s's evasion was decreased drastically!",
    "pixelmon.effect.attackincreased3": "%s's Attack was increased drastically!",
    "pixelmon.effect.attackdecreased3": "%s's Attack was decreased drastically!",
    "pixelmon.effect.defenseincreased3": "%s's Defense was increased drastically!",
    "pixelmon.effect.defensedecreased3": "%s's Defense was decreased drastically!",
    "pixelmon.effect.spatkincreased3": "%s's Special Attack was increased drastically!",
    "pixelmon.effect.spatkdecreased3": "%s's Special Attack was decreased drastically!",
    "pixelmon.effect.spdefincreased3": "%s's Special Defense was increased drastically!",
    "pixelmon.effect.spdefdecreased3": "%s's Special Defense was decreased drastically!",
    "pixelmon.effect.speedincreased3": "%s's Speed was increased drastically!",
    "pixelmon.effect.speeddecreased3": "%s's Speed was decreased drastically!",
    "pixelmon.effect.critincreased": "%s is getting pumped!",
    "pixelmon.effect.accuracytoohigh": "%s's accuracy can't go higher!",
    "pixelmon.effect.accuracytoolow": "%s's accuracy can't go lower!",
    "pixelmon.effect.evasiontoohigh": "%s's evasion can't go higher!",
    "pixelmon.effect.evasiontoolow": "%s's evasion can't go lower!",
    "pixelmon.effect.attacktoohigh": "%s's Attack can't go higher!",
    "pixelmon.effect.attacktoolow": "%s's Attack can't go lower!",
    "pixelmon.effect.defensetoohigh": "%s's Defense can't go higher!",
    "pixelmon.effect.defensetoolow": "%s's Defense can't go lower!",
    "pixelmon.effect.spatktoohigh": "%s's Special Attack can't go higher!",
    "pixelmon.effect.spatktoolow": "%s's Special Attack can't go lower!",
    "pixelmon.effect.spdeftoohigh": "%s's Special Defense can't go higher!",
    "pixelmon.effect.spdeftoolow": "%s's Special Defense can't go lower!",
    "pixelmon.effect.speedtoohigh": "%s's Speed can't go higher!",
    "pixelmon.effect.speedtoolow": "%s's Speed can't go lower!",
    "pixelmon.effect.surroundedbywater": "%s is already surrounded by water!",
    "pixelmon.effect.surroundwithwater": "%s surrounds itself in a veil of water!",
    "pixelmon.effect.burnt": "%s has been burned!",
    "pixelmon.effect.beakblast.start": "%s started heating up its beak!",
    "pixelmon.effect.failed": "%s failed!",
    "pixelmon.effect.nomoveyet": "%s hasn't used a move yet!",
    "pixelmon.effect.alreadydisabled": "%s is already disabled!",
    "pixelmon.effect.alreadyfrozen": "%s is already frozen!",
    "pixelmon.effect.frozesolid": "%s has been frozen solid!",
    "pixelmon.effect.starthail": "It started to hail!",
    "pixelmon.effect.alreadycantescape": "%s already cannot escape!",
    "pixelmon.effect.cantescape": "%s cannot escape!",
    "pixelmon.effect.already": "%s is already in love!",
    "pixelmon.effect.falleninlove": "%s has fallen in love!",
    "pixelmon.effect.alreadyseeded": "%s is already seeded!",
    "pixelmon.effect.seedplanted": "%s has planted a seed!",
    "pixelmon.effect.alreadylightscreen": "%s already has a Light Screen!",
    "pixelmon.effect.uplightscreen": "%s has put up a screen of shimmering light!",
    "pixelmon.effect.magnetrise": "%s levitated with electromagnetism!",
    "pixelmon.effect.noescape": "%s can no longer escape!",
    "pixelmon.effect.alreadymist": "%s is already surrounded by mist!",
    "pixelmon.effect.usemist": "%s creates a cloud of mist!",
    "pixelmon.effect.alreadyparalyzed": "%s is already paralyzed!",
    "pixelmon.effect.isparalyzed": "%s is paralyzed!",
    "pixelmon.effect.sandtomb": "%s became trapped by Sand Tomb!",
    "pixelmon.effect.clamped": "%s clamped %s!",
    "pixelmon.effect.swirlingmagma": "%s became trapped by swirling magma!",
    "pixelmon.effect.firevortex": "%s was trapped in the fiery vortex!",
    "pixelmon.effect.squeezed": "%s was squeezed by %s!",
    "pixelmon.effect.wrapped": "%s was wrapped by %s!",
    "pixelmon.effect.vortex": "%s was trapped in the vortex!",
    "pixelmon.effect.alreadypoisoned": "%s is already poisoned!",
    "pixelmon.effect.poisoned": "%s has been poisoned!",
    "pixelmon.effect.badlypoisoned": "%s has been badly poisoned!",
    "pixelmon.effect.redaying": "%s protected itself!",
    "pixelmon.effect.dynamaxprotect": "%s couldn't fully protect itself and got hurt!",
    "pixelmon.effect.raining": "It started to rain!",
    "pixelmon.effect.sandstorm": "A sandstorm kicked up!",
    "pixelmon.effect.alreadybarrier": "%s already has a barrier!",
    "pixelmon.effect.reflectraised": "Reflect raised %s's team's Defense!",
    "pixelmon.effect.healthsleep": "%s went to sleep and regained health!",
    "pixelmon.effect.alreadysafeguard": "%s already has a Safeguard!",
    "pixelmon.effect.guarded": "%s set up Safeguard!",
    "pixelmon.effect.harshsunlight": "The sunlight turned harsh!",
    "pixelmon.effect.alreadysleeping": "%s is already asleep!",
    "pixelmon.effect.fallasleep": "%s has fallen asleep!",
    "pixelmon.effect.itfailed": "But it failed!",
    "pixelmon.effect.spikes": "Spikes were laid around %s!",
    "pixelmon.effect.morespikes": "More spikes were laid around %s!",
    "pixelmon.effect.moretoxicspikes": "More toxic spikes were laid around %s!",
    "pixelmon.effect.toxicspikes": "Toxic spikes were laid around %s!",
    "pixelmon.effect.floatingstones": "Pointed stones float in the air around %s!",
    "pixelmon.effect.sharpsteel": "Sharp-pointed pieces of steel float in the air around %s!",
    "pixelmon.effect.createsubstitute": "%s created a substitute!",
    "pixelmon.effect.trickroomnormal": "The twisted dimensions returned to normal.",
    "pixelmon.effect.becamedrowsy": "%s became drowsy!",
    "pixelmon.effect.alreadydrowsy": "%s is already drowsy!",
    "pixelmon.effect.bellydrum": "%s cut its HP and maximized its Attack!",
    "pixelmon.effect.applydestinybond": "%s is trying to take down the opponent with it!",
    "pixelmon.effect.destinybond": "%s took down the opponent with it!",
    "pixelmon.effect.knockoff": "%s knocked off %s's %s!",
    "pixelmon.effect.flee": "%s was forced out!",
    "pixelmon.effect.escape": "%s escaped back to its Poké Ball!",
    "pixelmon.effect.sketch": "%s sketched %s!",
    "pixelmon.effect.healingwish": "The healing wish came true!",
    "pixelmon.effect.wish": "%s's wish came true!",
    "pixelmon.effect.healfailed": "%s's HP is full!",
    "pixelmon.effect.bugbite": "%s ate %s's %s!",
    "pixelmon.effect.trick": "%s switched items with %s!",
    "pixelmon.effect.trickitem": "%s received a %s.",
    "pixelmon.effect.reflecttype": "%s copied %s's type!",
    "pixelmon.effect.dive": "%s dives down!",
    "pixelmon.effect.skillswap": "%s received %s.",
    "pixelmon.effect.incinerate": "%s's %s was burned up!",
    "pixelmon.effect.focuspunch": "%s is tightening its focus!",
    "pixelmon.effect.lostfocus": "%s lost its focus and couldn't move!",
    "pixelmon.effect.splash": "But nothing happened!",
    "pixelmon.effect.recycle": "%s recovered one %s.",
    "pixelmon.effect.psychoshift": "%s transferred its status to %s!",
    "pixelmon.effect.coaching": "%s's attack and defense were boosted by %s's coaching!",
    "pixelmon.effect.snatch": "%s waits for the opponent to make a move!",
    "pixelmon.effect.snatched": "%s snatched the opponent's move!",
    "pixelmon.effect.powerswap": "%s swapped its Attack and Special Attack changes with %s!",
    "pixelmon.effect.guardswap": "%s swapped its Defense and Special Defense changes with %s!",
    "pixelmon.effect.heartswap": "%s swapped its stat changes with %s!",
    "pixelmon.effect.speedswap": "%s switched Speed with %s!",
    "pixelmon.effect.entrainment": "%s's Ability was changed from %s to %s!",
    "pixelmon.effect.feint": "%s removed %s's protection!",
    "pixelmon.effect.fling": "%s flung its %s!",
    "pixelmon.effect.changetype": "%s transformed into the %s type!",
    "pixelmon.effect.skydrop": "%s took %s into the air!",
    "pixelmon.effect.skullbash": "%s lowered its head!",
    "pixelmon.effect.mimic": "%s copied %s's %s!",
    "pixelmon.effect.uproar": "%s is making an uproar!",
    "pixelmon.effect.uproarend": "%s calmed down.",
    "pixelmon.effect.quash": "%s made %s move last!",
    "pixelmon.effect.healbellstart": "A bell chimed!",
    "pixelmon.effect.aromatherapy": "A soothing aroma wafted through the air!",
    "pixelmon.effect.naturepower": "Nature Power turned into %s!",
    "pixelmon.effect.zbreakneck_blitz": "Breakneck Blitz turned into %s due to the weather!",
    "pixelmon.effect.allyswitch": "%s switched positions with %s!",
    "pixelmon.effect.afteryou": "%s let %s move next!",
    "pixelmon.effect.bestow": "%s gave its %s to %s!",
    "pixelmon.effect.hurt": "%s was hurt!",
    "pixelmon.effect.freezeshock": "%s began charging an attack!",
    "pixelmon.effect.iceburn": "%s began charging an attack!",
    "pixelmon.effect.lunardance": "%s was healed by Lunar Dance!",
    "pixelmon.effect.shadowforce": "%s vanished!",
    "pixelmon.effect.revived": "%s was revived!",
    "pixelmon.effect.thief": "%s stole %s's %s!",
    "pixelmon.effect.celebrate": "Congratulations, %s!",
    "pixelmon.effect.addtype": "%s type was added to %s!",
    "pixelmon.effect.geomancy": "%s is absorbing power!",
    "pixelmon.effect.restorehealth": "%s restored health!",
    "pixelmon.effect.happyhour": "Everyone is caught up in the happy atmosphere!",
    "pixelmon.effect.topsyturvy": "%s's stat changes were all reversed!",
    "pixelmon.effect.auroraveil.raised": "%s has put up an Aurora Veil!",
    "pixelmon.effect.auroraveil.already": "There already is an Aurora Veil!",
    "pixelmon.effect.mysteriousaircurrent": "A mysterious air current was created!",
    "pixelmon.effect.mysteriousaircurrentfaded": "The mysterious air current faded.",
    "pixelmon.effect.sacredash": "Your party has been restored to full health!",
    "pixelmon.effect.resetstats": "%s's reduced stats were restored.",
    "pixelmon.effect.courtchange": "%s swapped the battle effects affecting each side of the field!",
    "pixelmon.effect.laserfocus": "%s concentrated intensely!",

    "pixelmon.effect.wildfire.user": "The opposing Pokémon were surrounded by fire!",
    "pixelmon.effect.wildfire.target": "Your ally Pokémon were surrounded by fire!",
    "pixelmon.status.wildfire": "%s is burning up within G-Max Wildfire's flames!",
    "pixelmon.status.freefromwildfire": "%s was freed from G-Max Wildfire!",

    "pixelmon.effect.vinelash.user": "The opposing Pokémon got trapped with vines!",
    "pixelmon.effect.vinelash.target": "Your ally Pokémon got trapped with vines!",
    "pixelmon.status.vinelash": "%s is hurt by G-Max Vine Lash's ferocious beating!",
    "pixelmon.status.freefromvinelash": "%s was freed from G-Max Vine Lash!",

    "pixelmon.effect.cannonade.user": "The opposing Pokémon got caught in the vortex of water!",
    "pixelmon.effect.cannonade.target": "Your ally Pokémon got caught in the vortex of water!",
    "pixelmon.status.cannonade": "%s is hurt by G-Max Cannonade's vortex!",
    "pixelmon.status.freefromcannonade": "%s was freed from G-Max Cannonade!",

    "pixelmon.effect.volcalith.user": "The opposing Pokémon are being bombarded by rocks!",
    "pixelmon.effect.volcalith.target": "Your ally Pokémon are being bombarded by rocks!",
    "pixelmon.status.volcalith": "%s is hurt by the rocks thrown out by G-Max Volcalith!",
    "pixelmon.status.freefromvolcalith": "%s was freed from G-Max Volcalith!",

    "pixelmon.status.corrosivegas": "%s's held item was melted by corrosive gas!",
    "pixelmon.status.ringheal": "%s is healed by its ring!",
    "pixelmon.status.burnhurt": "%s is hurt by its burn!",
    "pixelmon.status.burn.added": "%s was burned!",
    "pixelmon.status.confusionsnap": "%s snapped out of confusion!",
    "pixelmon.status.confused": "%s is confused...",
    "pixelmon.status.confusionhurtself": "%s hurt itself in its confusion!",
    "pixelmon.status.curseafflicted": "%s is afflicted by the curse!",
    "pixelmon.status.disable": "%s's %s was disabled!",
    "pixelmon.status.disabled": "%s's %s is disabled!",
    "pixelmon.status.nolongerdisabled": "%s's %s is no longer disabled!",
    "pixelmon.status.usefailed": "%s tried to use %s, but it failed!",
    "pixelmon.status.breakice": "%s thawed out!",
    "pixelmon.status.frozensolid": "%s is frozen solid!",
    "pixelmon.status.takefuturesight": "%s took the %s attack!",
    "pixelmon.status.hurthail": "%s was hurt by hail!",
    "pixelmon.status.hailstopped": "The hail stopped.",
    "pixelmon.status.heavyhail": "The hail falls heavily!",
    "pixelmon.status.inlove": "%s is in love with %s!",
    "pixelmon.status.immobilizedbylove": "%s is immobilized by love!",
    "pixelmon.status.drainhealth": "%s drains health from %s!",
    "pixelmon.status.lightscreenoff": "%s's Light Screen wore off!",
    "pixelmon.status.mistprotect": "%s is protected by the mist!",
    "pixelmon.status.mistoff": "%s's mist faded!",
    "pixelmon.status.isparalyzed": "%s is paralyzed and cannot move!",
    "pixelmon.status.freefromsandtomb": "%s was freed from Sand Tomb!",
    "pixelmon.status.freefromclamp": "%s was freed from Clamp!",
    "pixelmon.status.freefromwhirlpool": "%s was freed from Whirlpool!",
    "pixelmon.status.freefromwrap": "%s was freed from Wrap!",
    "pixelmon.status.freefrombind": "%s was freed from Bind!",
    "pixelmon.status.freefromfirespin": "%s was freed from Fire Spin!",
    "pixelmon.status.hurtby": "%s was hurt by %s!",
    "pixelmon.status.perishsongstruck": "%s's perish count fell to %d!",
    "pixelmon.status.hurtbypoison": "%s is hurt by poison!",
    "pixelmon.status.rainstopped": "The rain stopped.",
    "pixelmon.status.heavyrain": "It is raining heavily!",
    "pixelmon.status.recharging": "%s is recharging!",
    "pixelmon.status.reflectoff": "%s's Reflect wore off!",
    "pixelmon.status.safeguardoff": "%s's Safeguard wears off!",
    "pixelmon.status.sandstormsubside": "The sandstorm subsided.",
    "pixelmon.status.sandstormrage": "The sandstorm rages harshly!",
    "pixelmon.effect.spectralthief": "%s's stat changes were removed!",
    "pixelmon.status.buffetedbysandstorm": "%s was buffeted by the sandstorm!",
    "pixelmon.status.wokeup": "%s woke up!",
    "pixelmon.status.stillsleeping": "%s is still sleeping!",
    "pixelmon.status.wakesup": "%s wakes up!",
    "pixelmon.status.hurtbyspikes": "%s was hurt by spikes!",
    "pixelmon.status.hurtbystealthrock": "%s was hurt by Stealth Rock!",
    "pixelmon.status.hurtbysharpsteel": "The sharp steel bit into %s!",
    "pixelmon.status.substitutedamage": "The substitute took damage for %s!",
    "pixelmon.status.substitutefade": "%s's substitute faded away!",
    "pixelmon.status.sunlightfaded": "The sunlight faded.",
    "pixelmon.status.brightlight": "The sunlight is bright!",
    "pixelmon.status.toxicspikesabsorbed": "The toxic spikes were absorbed!",
    "pixelmon.status.toxicspikespoisoned": "The toxic spikes poisoned %s!",
    "pixelmon.status.toxicspikesbadlypoisoned": "The toxic spikes badly poisoned %s!",
    "pixelmon.status.trickroomreturntonormal": "The twisted dimensions returned to normal.",
    "pixelmon.status.ragebuilding": "%s's rage is building!",
    "pixelmon.status.fellasleep": "%s fell asleep!",
    "pixelmon.status.throatchop.cannot": "The effects of Throat Chop prevented %s from using %s!",
    "pixelmon.status.taunted": "%s fell for the taunt!",
    "pixelmon.status.tauntcantuse": "%s can't use %s because of the taunt!",
    "pixelmon.status.tauntnolonger": "%s is no longer taunted!",
    "pixelmon.status.noeffect": "It had no effect!",
    "pixelmon.status.tailwindstarted": "%s whipped up a tailwind!",
    "pixelmon.status.tailwindalready": "Tailwind is already active!",
    "pixelmon.status.tailwindfaded": "%s's tailwind petered out!",
    "pixelmon.status.encore": "%s received an encore!",
    "pixelmon.status.encoreend": "%s's encore ended!",
    "pixelmon.status.transform": "%s transformed into %s!",
    "pixelmon.status.trickroom": "%s twisted the dimensions!",
    "pixelmon.status.safeguard": "%s was protected by Safeguard!",
    "pixelmon.status.magiccoat": "%s's Magic Coat reflected the attack!",
    "pixelmon.status.applymagiccoat": "%s set up Magic Coat!",
    "pixelmon.status.applyingrain": "%s laid down its roots!",
    "pixelmon.status.ingrain": "%s absorbed nutrients with its roots!",
    "pixelmon.status.stockpile": "%s stockpiled %d!",
    "pixelmon.status.stockpileoff": "%s's stockpiled effect wore off!",
    "pixelmon.status.gravity": "The gravity intensified!",
    "pixelmon.status.gravityaffected": "%s couldn't stay airborne because of the intense gravity!",
    "pixelmon.status.gravityend": "The intense gravity returned to normal!",
    "pixelmon.status.torment": "%s was subjected to the torment!",
    "pixelmon.status.foresight": "%s was identified!",
    "pixelmon.status.gastroacid": "%s's Ability was suppressed!",
    "pixelmon.status.worryseed": "%s acquired Insomnia!",
    "pixelmon.status.simplebeam": "%s acquired Simple!",
    "pixelmon.status.powersplit": "%s shared its Attack and Special Attack with %s!",
    "pixelmon.status.guardsplit": "%s shared its Defense and Special Defense with %s!",
    "pixelmon.status.wonderroom": "It created a bizarre environment where Defense and Special Defense are switched!",
    "pixelmon.status.wonderroomend": "The bizarre environment returned to normal.",
    "pixelmon.status.lockon": "%s took aim at %s!",
    "pixelmon.status.endure": "%s braced itself!",
    "pixelmon.status.endurehit": "%s endured the hit!",
    "pixelmon.status.wideguard": "Wide Guard protected %s's team!",
    "pixelmon.status.wideguardprotect": "Wide Guard protected %s!",
    "pixelmon.status.charge": "%s charged power!",
    "pixelmon.status.nightmareadd": "%s was subjected to a nightmare!",
    "pixelmon.status.nightmare": "%s was tormented by the nightmare!",
    "pixelmon.status.powertrick": "%s switched its Attack and Defense stats!",
    "pixelmon.status.autotomize": "%s became nimble!",
    "pixelmon.status.followme": "%s became the center of attention!",
    "pixelmon.status.imprison": "%s sealed the opponent's moves!",
    "pixelmon.status.healblock": "%s was prevented from healing!",
    "pixelmon.status.healblockalready": "%s is already prevented from healing!",
    "pixelmon.status.healblockend": "%s can now heal again!",
    "pixelmon.status.sport": "%s-type moves were weakened!",
    "pixelmon.status.firepledge": "A sea of fire appeared on %s's side!",
    "pixelmon.status.grasspledge": "A swamp appeared around %s's side!",
    "pixelmon.status.waterpledge": "A rainbow appeared above %s's side!",
    "pixelmon.status.firepledgeeffect": "The sea of fire hurt %s!",
    "pixelmon.status.firepledgeend": "The sea of fire on %s's side disappeared!",
    "pixelmon.status.grasspledgeend": "The swamp around %s's side disappeared!",
    "pixelmon.status.waterpledgeend": "The rainbow above %s's side disappeared!",
    "pixelmon.status.telekinesis": "%s was hurled into the air!",
    "pixelmon.status.telekinesisend": "%s was freed from the telekinesis!",
    "pixelmon.status.helpinghand": "%s is ready to help %s!",
    "pixelmon.status.quickguard": "Quick Guard protected %s's team!",
    "pixelmon.status.quickguardprotect": "Quick Guard protected %s!",
    "pixelmon.status.embargo": "%s can't use items!",
    "pixelmon.status.embargoend": "%s's Embargo was lifted!",
    "pixelmon.status.grudge": "%s wants the opponent to bear a grudge!",
    "pixelmon.status.grudgeactivate": "%s's %s lost all of its PP due to the grudge!",
    "pixelmon.status.luckychant": "%s joined the Lucky Chant!",
    "pixelmon.status.luckychantend": "%s's Lucky Chant wore off!",
    "pixelmon.status.lashout": "%s's rage made it hit harder!",
    "pixelmon.status.magicroom": "%s created an environment where items don't function!",
    "pixelmon.status.magicroomend": "The itemless environment wore off!",
    "pixelmon.status.craftyshield": "Crafty Shield protected %s's team!",
    "pixelmon.status.craftyshieldprotect": "Crafty Shield protected %s!",
    "pixelmon.status.electricterrain": "An electric current runs across the battlefield!",
    "pixelmon.status.electricterrainend": "The electricity disappeared from the battlefield.",
    "pixelmon.status.electrify": "%s's moves have been electrified!",
    "pixelmon.status.fairylock": "No one will be able to escape during the next turn!",
    "pixelmon.status.grassyterrain": "Grass grew to cover the battlefield!",
    "pixelmon.status.grassyterrainend": "The grass disappeared from the battlefield.",
    "pixelmon.status.sportfade": "The effects of %s have faded.",
    "pixelmon.status.iondeluge": "A deluge of ions showers the battlefield!",
    "pixelmon.status.matblock": "%s intends to flip up a mat and block incoming attacks!",
    "pixelmon.status.matblocked": "%s was blocked by the kicked-up mat!",
    "pixelmon.status.mistyterrain": "Mist swirls around the battlefield!",
    "pixelmon.status.mistyterrainend": "The mist disappeared from the battlefield.",
    "pixelmon.status.powder": "%s is covered in powder!",
    "pixelmon.status.powderexplode": "When the flame touched the powder on %s, it exploded!",
    "pixelmon.status.stickyweb": "A sticky web has been laid out beneath the opponent's feet!",
    "pixelmon.status.stickywebcaught": "%s was caught in a sticky web!",
    "pixelmon.status.poisoncure": "%s was cured of its poisoning.",
    "pixelmon.status.poisoncureitem": "%s's %s cured its poison!",
    "pixelmon.status.burncure": "%s's burn was healed.",
    "pixelmon.status.burncureitem": "%s's %s healed its burn!",
    "pixelmon.status.paralysiscure": "%s was cured of its paralysis.",
    "pixelmon.status.paralysiscureitem": "%s's %s cured its paralysis!",
    "pixelmon.status.sleepcureitem": "%s's %s woke it up!",
    "pixelmon.status.frozencureitem": "%s's %s thawed it out!",
    "pixelmon.status.confusioncureitem": "%s's %s snapped it out of its confusion!",
    "pixelmon.status.infatuatedcure": "%s got over its infatuation.",
    "pixelmon.status.infatuatedcureitem": "%s's %s got it over its infatuation!",
    "pixelmon.status.psychicterrain": "A psychic aura enveloped the battlefield!",
    "pixelmon.status.psychicterrainend": "The psychic aura faded from the battlefield.",
    "pixelmon.status.auroraveil.woreoff": "%s's Aurora Veil wore off!",
    "pixelmon.status.extremelyheavyrain": "It is raining extremely heavily!",
    "pixelmon.status.extremelybrightlight": "The sunlight is extremely bright!",
    "pixelmon.effect.splinters": "Jagged splinters dug into %s!",
    "pixelmon.status.splintersdamage": "%s was hurt by the jagged splinters digging into it.",
    "pixelmon.status.splinterscleared": "%s's splinters disappeared from existence'",
    "pixelmon.abilities.asone": "%s has 2 Abilities!",
    "pixelmon.abilities.desolateland": "%s's Desolate Land caused the sun to become extremely intense!",
    "pixelmon.abilities.primordialsea": "%s's Primordial Sea caused rain to fall extremely heavily!",
    "pixelmon.abilities.steamengine": "%s's Steam Engine activated!",
    "pixelmon.abilities.stancechange.blade": "%s changed to Blade Stance!",
    "pixelmon.abilities.stancechange.shield": "%s changed to Shield Stance!",
    "pixelmon.abilities.sandspit": "A sandstorm brewed!",
    "pixelmon.abilities.zenmode.zen": "%s went into Zen Mode!",
    "pixelmon.abilities.zenmode.standard": "%s returned to Standard Mode!",
    "pixelmon.abilities.cottondown": "%s's Cotton Down scattered about the field!",
    "pixelmon.abilities.soulheart.activate": "%s's Soul-Heart activated!",
    "pixelmon.abilities.stamina.activate": "%s's Stamina activated!",
    "pixelmon.abilities.powerconstruct.activate": "You sense the presence of many!",
    "pixelmon.abilities.powerconstruct.transform": "%s transformed into its Complete Forme!",
    "pixelmon.abilities.mirrorarmor": "%s's Mirror Armor reflected the stat changes!",
    "pixelmon.abilities.hungerswitch.hangry": "%s is hangry!",
    "pixelmon.abilities.hungerswitch.full": "%s is full!",
    "pixelmon.abilities.flute": "%s played the %s!",

    "pixelmon.abilities.fluteself": "You played the %s!",

    "attack.curse.alreadycursed": "%s is already cursed!",
    "attack.curse.curse": "%s cut its own HP and laid a curse on %s!",

    "key.categories.pixelmon": "Pixelmon",
    "key.descend": "Descend",
    "key.minmaxoverlay": "Minimize/Maximize Overlay",
    "key.nextpokemon": "Next Party Slot",
    "key.previouspokemon": "Previous Party Slot",
    "key.sendpokemon": "Send Out Pokémon",
    "key.pokemonaction": "Select Target Pokémon",
    "key.pokemonexternal": "Use External Move",
    "key.nextexternalmove": "Next External Move",
    "key.pokedex": "Open Pokédex",
    "key.wiki": "Open Wiki",
    "key.spectateBattle": "Spectate Battle",
    "key.pixelmonoptions": "Open Config Screen",
    "key.pcsearch": "PC Search",
    "key.pcrename": "Rename Box",
    "key.pcwallpaper": "Change Box Wallpaper",
    "key.hover": "Hover",
    "key.questcycle": "Open Quest UI",
    "key.questjournal": "Toggle Quest Journal",

    "halloween.entityname": "The Spectral Jeweler",
    "halloween.gemregistered": "The Spectral Jeweler recieved your %s!",
    "halloween.alreadyregistered": "%s has already been recieved!",
    "halloween.alreadyawarded": "You have already finished this quest!",
    "halloween.message": "I'm here to exchange your hallowed Gems!",

    "christmas.notchristmas": "You must wait until Christmas to open this gift!",
    "christmas.ischristmas": "Merry Christmas from the Pixelmon Development Team!",
    "christmas.received": "You have received a Christmas gift from Delibird!",
    "christmas.alreadygifted": "You have already opened a Christmas gift!",
    "item.pixelmon.gift_box": "Gift Box",

    "UnownBlock.A": "Unown Block 'A'",
    "UnownBlock.B": "Unown Block 'B'",
    "UnownBlock.C": "Unown Block 'C'",
    "UnownBlock.D": "Unown Block 'D'",
    "UnownBlock.E": "Unown Block 'E'",
    "UnownBlock.F": "Unown Block 'F'",
    "UnownBlock.G": "Unown Block 'G'",
    "UnownBlock.H": "Unown Block 'H'",
    "UnownBlock.I": "Unown Block 'I'",
    "UnownBlock.J": "Unown Block 'J'",
    "UnownBlock.K": "Unown Block 'K'",
    "UnownBlock.L": "Unown Block 'L'",
    "UnownBlock.M": "Unown Block 'M'",
    "UnownBlock.N": "Unown Block 'N'",
    "UnownBlock.O": "Unown Block 'O'",
    "UnownBlock.P": "Unown Block 'P'",
    "UnownBlock2.Q": "Unown Block 'Q'",
    "UnownBlock2.R": "Unown Block 'R'",
    "UnownBlock2.S": "Unown Block 'S'",
    "UnownBlock2.T": "Unown Block 'T'",
    "UnownBlock2.U": "Unown Block 'U'",
    "UnownBlock2.V": "Unown Block 'V'",
    "UnownBlock2.W": "Unown Block 'W'",
    "UnownBlock2.X": "Unown Block 'X'",
    "UnownBlock2.Y": "Unown Block 'Y'",
    "UnownBlock2.Z": "Unown Block 'Z'",
    "UnownBlock2.!": "Unown Block '!'",
    "UnownBlock2.?": "Unown Block '?'",
    "UnownBlock2._": "Blank Unown Block",

    "pixelmon.dev.join": "§b★Pixelmon Dev★ §n%s§b has joined!",

    "pixelmon.config.title": "Pixelmon Config",

    "pixelmon.config.general": "General",
    "pixelmon.config.general.tooltip": "General settings",
    "pixelmon.config.general.comment": "General settings for the world.",
    "pixelmon.config.battle": "Battle",
    "pixelmon.config.battle.tooltip": "Battle settings",
    "pixelmon.config.battle.comment": "Settings that allow you to alter battle mechanics and rates.",
    "pixelmon.config.starters": "Starter",
    "pixelmon.config.starters.tooltip": "Starter settings",
    "pixelmon.config.starters.comment": "Settings that control the starter screen and Pokémon.",
    "pixelmon.config.spawning": "Spawning",
    "pixelmon.config.spawning.tooltip": "Spawning settings",
    "pixelmon.config.spawning.comment": "Settings that control what Pokémon spawns and how many of them spawn.",
    "pixelmon.config.gens": "Generations",
    "pixelmon.config.spawning.gens": "Set Spawns",
    "pixelmon.config.spawning.gens.comment": "These values set whether or not a Generation's Pokémon will be spawned.",
    "pixelmon.config.pokeloot": "PokéLoot",
    "pixelmon.config.pokeloot.tooltip": "PokéLoot settings",
    "pixelmon.config.pokeloot.comment": "Settings for controlling PokeLoot chest spawns and behavior.",
    "pixelmon.config.afkhandler": "AFK Handler",
    "pixelmon.config.afkhandler.tooltip": "AFK handler settings",
    "pixelmon.config.afkhandler.comment": "Settings for controlling the auto-battler for AFK players.",
    "pixelmon.config.graphics": "Graphics",
    "pixelmon.config.graphics.tooltip": "Graphics settings",
    "pixelmon.config.graphics.comment": "Graphics settings.",
    "pixelmon.config.breeding": "Breeding",
    "pixelmon.config.breeding.tooltip": "Breeding settings",
    "pixelmon.config.breeding.comment": "Settings for breeding behavior.",
    "pixelmon.config.pixelutilities": "PixelUtilities",
    "pixelmon.config.pixelutilities.tooltip": "PixelUtilities settings",
    "pixelmon.config.pixelutilities.comment": "Settings for PixelUtilities features.",
    "pixelmon.config.externalmoves": "External Moves",
    "pixelmon.config.externalmoves.tooltip": "External move settings",
    "pixelmon.config.externalmoves.comment": "Settings for controlling external moves.",
    "pixelmon.config.forageChance": "Forage success chance",
    "pixelmon.config.forageChance.comment": "Higher values for better chances of obtaining item.",
    "pixelmon.config.pokerus": "Pokérus",
    "pixelmon.config.pokerus.tooltip": "Pokérus settings.",
    "pixelmon.config.pokerus.comment": "All sort of settings regarding Pokérus.",
    "pixelmon.config.raids": "Raids",
    "pixelmon.config.raids.tooltip": "Raids settings.",
    "pixelmon.config.raids.comment": "Settings regarding Max Raid Dens.",
    "pixelmon.config.riding": "Riding",
    "pixelmon.config.riding.tooltip": "Ride Settings",
    "pixelmon.config.riding.comment": "Settings that control Pokémon mounts.",
    "pixelmon.config.worldgen": "World Generation",
    "pixelmon.config.worldgen.tooltip": "World Generation settings",
    "pixelmon.config.worldgen.comment": "Settings that control pixelmons World Generation.",
    "pixelmon.config.dimensions": "Dimensions",
    "pixelmon.config.dimensions.tooltip": "Dimension settings",
    "pixelmon.config.dimensions.comment": "Settings that relate to Pixelmon's dimensions.",
    "pixelmon.config.externalfiles": "External Files",
    "pixelmon.config.externalfiles.tooltip": "External Files settings",
    "pixelmon.config.externalfiles.comment": "Settings for enabling External Files",
    "pixelmon.config.storage": "Storage settings",
    "pixelmon.config.storage.tooltip": "Storage settings for party and computer data.",
    "pixelmon.config.storage.comment": "Storage settings for party and computer data.",
    "pixelmon.config.elevator": "Elevator",
    "pixelmon.config.elevator.tooltip": "Elevator settings",
    "pixelmon.config.elevator.comment": "Options for the elevator.",
    "pixelmon.config.healing": "Healing",
    "pixelmon.config.healing.tooltip": "Healing settings",
    "pixelmon.config.healing.comment": "Settings that control how much healing should occur while walking about.",
    "pixelmon.config.outsideeffects": "Outside Effects",
    "pixelmon.config.outsideeffects.tooltip": "Outside Effects settings",
    "pixelmon.config.outsideeffects.comment": "Settings that control how much outside effects should occur while walking about.",
    "pixelmon.config.quests": "Quests",
    "pixelmon.config.quests.tooltip": "Quests settings",
    "pixelmon.config.quests.comment": "Settings that alter how quests function.",

    "pixelmon.config.awardPhotos": "Award photos to wild battle winners",
    "pixelmon.config.awardPhotos.comment": "Award photos to players who defeat wild Pokémon.",
    "pixelmon.config.allowPokemonNicknames": "Allow Pokémon nicknames",
    "pixelmon.config.allowPokemonNicknames.comment": "Allow the player to nickname Pokémon (not a server-wide setting, just a client setting).",
    "pixelmon.config.allowAnvilAutoreloading": "Enable anvil auto-reloading",
    "pixelmon.config.allowAnvilAutoreloading.comment": "Allow the anvil to replace finished items with starting item from player's inventory without manual placing.",
    "pixelmon.config.allowVanillaMobs": "Enable vanilla mobs",
    "pixelmon.config.allowVanillaMobs.comment": "Allow creepers, skeletons, etc. to spawn in the world. DANGER - can kill you while battling.",
    "pixelmon.config.allowCaptureOutsideBattle": "Allow capture outside battle",
    "pixelmon.config.allowCaptureOutsideBattle.comment": "Allow player to throw Poké Balls from hotbar. If false, Poké Balls can only be thrown in battles.",
    "pixelmon.config.allowRandomPokemonToBeLegendary": "Allow Pokémon from commands to be Legendary.",
    "pixelmon.config.allowRandomPokemonToBeLegendary.comment": "Whether Pokémon spawned from /pokegive or from any pokéspec have the possibility of containing Legendary Pokémon.",
    "pixelmon.config.allowRandomSpawnedEggsToBeLegendary": "Random PokemonSpec can contain Legendaries",
    "pixelmon.config.allowRandomSpawnedEggsToBeLegendary.comment": "Enables random pokémon spawned from /pokegive or from any PokemonSpec have the possibility of containing Legendary Pokémon.",
    "pixelmon.config.growthScaleModifier": "Growth size variation",
    "pixelmon.config.growthScaleModifier.comment": "Adjusts the variation in size caused by growth (0-2). 1 is normal.",
    "pixelmon.config.pokemonDropsEnabled": "Enable Pokémon drops",
    "pixelmon.config.pokemonDropsEnabled.comment": "Allows wild Pokémon to drop items like feathers, etc. on death.",
    "pixelmon.config.printErrors": "Print more detailed errors",
    "pixelmon.config.printErrors.comment": "Prints more detailed error messages to the server.log file if enabled.",
    "pixelmon.config.allowShinyCharmFromPokedex": "Unlock Shiny Charm at full Pokédex",
    "pixelmon.config.allowShinyCharmFromPokedex.comment": "Enables unlocking the Shiny Charm upon Pokédex completion.",
    "pixelmon.config.allowOvalCharmFromPokedex": "Unlock Oval Charm at a full regional Pokédex",
    "pixelmon.config.allowOvalCharmFromPokedex.comment": "Enables unlocking the Oval Charm upon completion of a regional Pokédex.",
    "pixelmon.config.expCharmMultiplier": "Exp. Charm Multiplier",
    "pixelmon.config.expCharmMultiplier.comment": "Experience multiplier when an Exp. Charm is equipped.",
    "pixelmon.config.catchingCharmMultiplier": "Catching Charm Multiplier",
    "pixelmon.config.catchingCharmMultiplier.comment": "Multiplier of the chance that a critical capture will occur when a Catching Charm is equipped.",
    "pixelmon.config.markCharmRolls": "Mark Charm Rolls",
    "pixelmon.config.markCharmRolls.comment": "Number of rolls for a wild Pokémon to gain a mark when a Mark Charm is equipped.",
    "pixelmon.config.oreColors": "Ore colors for the Ore Sense moveskill.",
    "pixelmon.config.oreColors.comment": "The ore colors for the Ore Sense moveskill. format is block;color(hex);patternNumber",
    "pixelmon.config.allowPlanting": "Allow Apricorn and Berry planting",
    "pixelmon.config.allowPlanting.comment": "Allow players to plant Apricorns and Berries in the ground.",
    "pixelmon.config.maximumPlants": "Maximum plants",
    "pixelmon.config.maximumPlants.comment": "The maximum plants allowed within a chunk. Applies to Apricorns and Berries.",
    "pixelmon.config.cloningMachineEnabled": "Enable cloning machine",
    "pixelmon.config.cloningMachineEnabled.comment": "Allow players to use cloning machines to clone Mew into Mewtwo.",
    "pixelmon.config.lakeTrioMaxEnchants": "Lake trio max ruby enchants",
    "pixelmon.config.lakeTrioMaxEnchants.comment": "Sets The number of times a Azelf, Mesprit and Uxie can enchant a ruby.",
    "pixelmon.config.engagePlayerByPokeBall": "Enable challenge by throwing Poké Ball",
    "pixelmon.config.engagePlayerByPokeBall.comment": "If enabled, players will be able to challenge others by throwing a Pokémon at the enemy player rather than a Pokémon.",
    "pixelmon.config.computerBoxes": "Amount of PC boxes",
    "pixelmon.config.computerBoxes.comment": "Sets the amount of boxes players have in their PCs (capped at 256 per player).",
    "pixelmon.config.enableWildAggression": "Enable aggressive wild Pokémon",
    "pixelmon.config.enableWildAggression.comment": "Allow wild Pokémon to initiate battles.",
    "pixelmon.config.allowTMReuse": "Allow TM reuse",
    "pixelmon.config.allowTMReuse.comment": "If enabled, TMs are reusable. If disabled, TMs are consumed upon use.",
    "pixelmon.config.allowTRReuse": "Allow TR reuse",
    "pixelmon.config.allowTRReuse.comment": "If enabled, TRs are reusable. If disabled, TRs are consumed upon use.",
    "pixelmon.config.universalTMs": "Universal TMs",
    "pixelmon.config.universalTMs.comment": "Whether TMs, HMs, and TRs can be used regardless of generation if the Pokémon has it in their TM/HM/TR list somewhere.",
    "pixelmon.config.superUniversalTMs": "Super Universal TMs",
    "pixelmon.config.superUniversalTMs.comment": "Whether TMs, HMs, and TRs can be used regardless of generation if the Pokémon has it in their base stats somewhere.",
    "pixelmon.config.writeEntitiesToWorld": "Save entities to world",
    "pixelmon.config.writeEntitiesToWorld.comment": "Saves Pixelmon entities to file when world saves (greatly increases save file size and save time if true). Required for the morph mod.",
    "pixelmon.config.reusableBirdShrines": "Allow bird shrine reuse",
    "pixelmon.config.reusableBirdShrines.comment": "Set Legendary shrines to one use (false) or multiple use (true).",
    "pixelmon.config.spawnersOpOnly": "Spawners op only",
    "pixelmon.config.spawnersOpOnly.comment": "If true, must be opped to use spawners. If false, must be in Creative mode.",
    "pixelmon.config.npcEditorOpOnly": "NPC Editor op only",
    "pixelmon.config.npcEditorOpOnly.comment": "If true, must be opped to use the NPC Editor. If false, must be in Creative mode.",
    "pixelmon.config.questEditorOpOnly": "Quest Editor op only",
    "pixelmon.config.questEditorOpOnly.comment": "If true, must be opped to use the Quest Editor. If false, must be in Creative mode.",
    "pixelmon.config.tradersReusable": "Traders are reusable",
    "pixelmon.config.tradersReusable.comment": "Set traders to one use (false) or multiple use (true).",
    "pixelmon.config.movesPerTutor": "Moves Per Tutor",
    "pixelmon.config.movesPerTutor.comment": "The amount of moves a move Tutor will have",
    "pixelmon.config.starterOnJoin": "Starter list on join",
    "pixelmon.config.starterOnJoin.comment": "Lets you choose to give/not give a starter to a player on join (via the Pixelmon starter screen).",
    "pixelmon.config.useSystemTimeForWorldTime": "Use system time for world time",
    "pixelmon.config.useSystemTimeForWorldTime.comment": "Lets your world follow real world time or not (uses the server's system clock).",
    "pixelmon.config.systemTimeSyncInterval": "Seconds between time syncs",
    "pixelmon.config.systemTimeSyncInterval.comment": "The time taken before syncing to the system clock (in seconds).",
    "pixelmon.config.battleAIWild": "Wild Pokémon battle AI",
    "pixelmon.config.battleAIWild.comment": "The type of AI to use for wild Pokémon in battle.  | 1: Choose moves randomly. 2: Choose the most damaging move possible (with type match-ups), ignoring status moves. 3: Use both offensive and status moves.",
    "pixelmon.config.battleAIBoss": "Boss Pokémon battle AI",
    "pixelmon.config.battleAIBoss.comment": "The type of AI to use for boss Pokémon in battle.  | 1: Choose moves randomly. 2: Choose the most damaging move possible (with type match-ups), ignoring status moves. 3: Use both offensive and status moves.",
    "pixelmon.config.battleAITrainer": "NPC Trainer battle AI",
    "pixelmon.config.battleAITrainer.comment": "The type of AI to use for NPC Trainers in battle.  | 1: Choose moves randomly. 2: Choose the most damaging move possible (with type match-ups), ignoring status moves. 3: Use both offensive and status moves. 4: Use all moves intelligently and switch out when advantageous.",
    "pixelmon.config.multiplePhotosOfSamePokemon": "Allow duplicate Pokémon photos",
    "pixelmon.config.multiplePhotosOfSamePokemon.comment": "Allow each player to take multiple photos of the same Pokémon.",
    "pixelmon.config.bedsHealPokemon": "Beds heal Pokémon",
    "pixelmon.config.bedsHealPokemon.comment": "Whether sleeping in a bed heals a player's Pokémon.",
    "pixelmon.config.allowPokemonEditors": "Allow Pokémon editors",
    "pixelmon.config.allowPokemonEditors.comment": "Server-side, whether players can use Pokémon editors. Client-side, whether other players can use a Pokémon editor on the player with the setting.",
    "pixelmon.config.allowChisels": "Allow Chisels",
    "pixelmon.config.allowChisels.comment": "Server-side, whether players can use Chisels.",
    "pixelmon.config.dataSaveOnWorldSave": "Data save on world save",
    "pixelmon.config.dataSaveOnWorldSave.comment": "If players party and computer are forcefully saved upon every world save (If false, you should be saving data via /saveall, or risk data loss)",
    "pixelmon.config.useDropGUI": "Use drop GUI",
    "pixelmon.config.useDropGUI.comment": "Whether to display a GUI with Pokémon drops after defeating a regular Pokémon.",
    "pixelmon.config.berryTreeGrowthMultiplier": "Berry Tree growth multiplier",
    "pixelmon.config.berryTreeGrowthMultiplier.comment": "Multipier for the speed at which berry trees grow. Can be between 0.1 and 1000.",
    "pixelmon.config.maxLevel": "Maximum level",
    "pixelmon.config.maxLevel.comment": "The maximum level that a Pokémon can be.",
    "pixelmon.config.despawnRadius": "Despawn Radius",
    "pixelmon.config.despawnRadius.comment": "The minimum number of blocks away from the nearest player a Pokémon can be when despawned.",
    "pixelmon.config.canPokemonBeHit": "Can Pokémon be hit",
    "pixelmon.config.canPokemonBeHit.comment": "Whether or not out-of-battle wild Pokémon can be hurt by physical attacks.",
    "pixelmon.config.alwaysHaveDynamaxBand": "Always have Dynamax band",
    "pixelmon.config.alwaysHaveDynamaxBand.comment": "Whether or not players will automatically have a Dynamax band",
    "pixelmon.config.alwaysHaveMegaRing": "Always have Mega ring",
    "pixelmon.config.alwaysHaveMegaRing.comment": "Whether or not players will automatically have a Mega ring.",
    "pixelmon.config.deleteUnwantedDrops": "Delete unwanted Pokémon drops",
    "pixelmon.config.deleteUnwantedDrops.comment": "Whether or not the \"Drop All\" button in the Pokémon drops screen will delete the items or drop them on the ground.",
    "pixelmon.config.chanceToGetSpecialBidoof": "Chance to get special Bidoof",
    "pixelmon.config.chanceToGetSpecialBidoof.comment": "The chance of obtaining a Special Bidoof from catching a Bidoof with a Luxury Ball. (-1 to disable)",
    "pixelmon.config.disabledNonPlayerPixelmonMovement": "Disable non player Pokémon movement",
    "pixelmon.config.disabledNonPlayerPixelmonMovement.comment": "Determines if non player owned Pokémon's movement is disabled or not.",
    "pixelmon.config.useSystemTimeForBerries": "Use system time for berries",
    "pixelmon.config.useSystemTimeForBerries.comment": "Whether the system time is used for berry growth, meaning they will grow even when the game isn't running.",
    "pixelmon.config.averageLureExpiryTicks": "Average lure expiry ticks",
    "pixelmon.config.averageLureExpiryTicks.comment": "How many ticks it will take for a lure to expire on average.",
    "pixelmon.config.limitShopKeeperStackSize": "Limit shopkeeper max purchase size to stack size",
    "pixelmon.config.limitShopKeeperStackSize.comment": "False will be based on the remaining inventory of the player.",
    "pixelmon.config.relaxedBattleGimmickRules": "Dynamax and Mega/Z same battle",
    "pixelmon.config.relaxedBattleGimmickRules.comment": "Whether which battle gimmick can be used is determined purely by band chosen.",
    "pixelmon.config.oldGenDimensions": "Old Gen Dimensions",
    "pixelmon.config.oldGenDimensions.comment": "Which dimensions use Gen 7 features (eg. Mega Bosses). Any other dimension will use Gen 8 (eg. Max Raids).",
    "pixelmon.config.bothGenDimensions": "Both Gen Dimensions",
    "pixelmon.config.bothGenDimensions.comment": "Which dimensions use both Gen 7 and Gen 8 features. Overrides other options that would affect this otherwise.",
    "pixelmon.config.allowIllegalShinies": "Allow Illegal Shinies",
    "pixelmon.config.allowIllegalShinies.comment": "Whether shinies which aren't available in Pokémon are available here or not.",
    "pixelmon.config.battleMusicVolume": "Battle Music Volume",
    "pixelmon.config.battleMusicVolume.comment": "Volume of the music that is played during battles.",
    "pixelmon.config.useUpdateEntityWithOptionalForceFix": "Use updateEntityWithOptionalForce Fix",
    "pixelmon.config.useUpdateEntityWithOptionalForceFix.comment": "Whether to use the fix for clumping Pokémon around the edges of the world. If you are on Sponge, or don't know what it is, keep it off.",
    "pixelmon.config.verbose": "Enable verbose logging",
    "pixelmon.config.verbose.comment": "Keep this off unless you are diagnosing issues.",
    "pixelmon.config.berryJuiceCrafting": "Berry Juice crafting",
    "pixelmon.config.berryJuiceCrafting.comment": "Whether berry juices can be crafted in the infuser or not.",
    "pixelmon.config.dynamaxSize": "Dynamax size",
    "pixelmon.config.dynamaxSize.comment": "Height of Dynamax and Gigantamax in blocks.",
    "pixelmon.config.shrineEncounterMode": "The Legendary bird shrine reuse settings.",
    "pixelmon.config.shrineEncounterMode.comment": "Whether Legendary bird shrines can be used multiple times. 0 = Once, 1 = Once per player, 2 = Once per mc day, 3 = Once per day, 4 = Unlimited",

    "pixelmon.config.allowPvPExperience": "Enable PvP exp.",
    "pixelmon.config.allowPvPExperience.comment": "Determines if player vs. player battles give Pokémon experience. No EXP gain in PvP when false.",
    "pixelmon.config.allowTrainerExperience": "Enable Trainer exp.",
    "pixelmon.config.allowTrainerExperience.comment": "Determines if player vs. Trainer battles give Pokémon experience. No EXP gain in Trainer when false.",
    "pixelmon.config.returnHeldItems": "Return held items after PvP battles",
    "pixelmon.config.returnHeldItems.comment": "If enabled, consumable held items will be returned to Pokémon at the end of player vs. player battles.",
    "pixelmon.config.forceEndBattleResult": "Force-end battle result",
    "pixelmon.config.forceEndBattleResult.comment": "What will happen if a battle is force-ended without a proper conclusion. 0: A winner is determined based on the number of remaining Pokémon (with % HP as a tiebreaker). 1: The battle is considered a draw. 2: The battle is considered abnormally ended.",
    "pixelmon.config.expModifier": "Experience modifier",
    "pixelmon.config.expModifier.comment": "Multiplier for experience gained in Pokémon battles.",
    "pixelmon.config.synchronizeChance": "Synchronize nature sync chance",
    "pixelmon.config.synchronizeChance.comment": "Chance for Synchronize to sync nature on battle start.",
    "pixelmon.config.allowHappyHour": "Allow Happy Hour",
    "pixelmon.config.allowHappyHour.comment": "Whether Happy Hour will award double PokéDollars when used.",
    "pixelmon.config.allowPayDay": "Allow Pay Day",
    "pixelmon.config.allowPayDay.comment": "Whether Pay Day will award extra PokéDollars when used.",
    "pixelmon.config.payDayMultiplier": "Pay Day multiplier",
    "pixelmon.config.payDayMultiplier.comment": "Amount to multiply the level by when Pay Day is used.",
    "pixelmon.config.allowGMaxGoldRush": "Allow G-Max Gold Rush",
    "pixelmon.config.allowGMaxGoldRush.comment": "Whether G-Max Gold Rush will award extra PokéDollars when used.",
    "pixelmon.config.gMaxGoldRushMultiplier": "G-Max Gold Rush multiplier",
    "pixelmon.config.gMaxGoldRushMultiplier.comment": "Whether G-Max Gold Rush will award extra PokéDollars when used.",
    "pixelmon.config.allowAmuletCoin": "Allow Amulet Coin",
    "pixelmon.config.allowAmuletCoin.comment": "Whether Amulet Coin will award double PokéDollars when used.",
    "pixelmon.config.pickupRate": "Pickup rate",
    "pixelmon.config.pickupRate.comment": "Chance of the Pickup Ability picking up an item after a battle (1/rate). 0 disables this.",
    "pixelmon.config.allowCatchCombo": "Allow Catch Combos",
    "pixelmon.config.allowCatchCombo.comment": "Allows chaining catches to get bonus exp, higher shiny and perfect iv rates.",
    "pixelmon.config.catchComboThresholds": "Catch Combo thresholds",
    "pixelmon.config.catchComboThresholds.comment": "Catch combo count thresholds at which the effects of the combo change.",
    "pixelmon.config.catchComboExpBonuses": "Catch Combo exp bonuses",
    "pixelmon.config.catchComboExpBonuses.comment": "Catch combo exp bonuses per threshold.",
    "pixelmon.config.catchComboShinyModifiers": "Catch Combo shiny modifiers",
    "pixelmon.config.catchComboShinyModifiers.comment": "Catch combo shiny modifiers per threshold.",
    "pixelmon.config.catchComboPerfectIVs": "Catch Combo perfect IVs",
    "pixelmon.config.catchComboPerfectIVs.comment": "Catch combo perfect IVs per threshold.",

    "pixelmon.config.usePassiveHealer": "Passive healing",
    "pixelmon.config.usePassiveHealer.comment": "Whether to passively heal party Pokémon over time or not.",
    "pixelmon.config.chanceToRevivePassively": "Revive chance",
    "pixelmon.config.chanceToRevivePassively.comment": "Chance to passively revive a knocked out party Pokémon with each step.",
    "pixelmon.config.chanceToHealStatusPassively": "Status heal chance",
    "pixelmon.config.chanceToHealStatusPassively.comment": "Chance to passively heal status effects from a party Pokémon with each step.",
    "pixelmon.config.stepsToHealHealthPassively": "Health heal steps",
    "pixelmon.config.stepsToHealHealthPassively.comment": "Number of steps after which to heal 1 HP from a party Pokémon.",
    "pixelmon.config.passiveHealingMaxHealthPercentage": "Heal maximum",
    "pixelmon.config.passiveHealingMaxHealthPercentage.comment": "Percentage of maximum health that the passive heal can go up to.",

    "pixelmon.config.useOutsideEffects": "Outside effects healing",
    "pixelmon.config.useOutsideEffects.comment": "Whether to use outside effects or not",
    "pixelmon.config.stepsToApplyEffects": "Number of steps after which effects are applied",
    "pixelmon.config.stepsToApplyEffects.comment": "Number of steps after which effects are applied",
    "pixelmon.config.poisonMaxDamage": "Max damage poison can afflict",
    "pixelmon.config.poisonMaxDamage.comment": "Max damage poison can afflict",

    "pixelmon.config.shinySpawnRate": "Shiny spawn rate",
    "pixelmon.config.shinySpawnRate.comment": "Shiny calculation uses 1/(Shiny rate) to get odds of becoming Shiny.",
    "pixelmon.config.bossRate": "Boss spawn rate",
    "pixelmon.config.bossRate.comment": "The rate of boss Pokémon in the wild (1/x) not including mega bosses.",
    "pixelmon.config.bossLevelIncreases": "Boss level increases",
    "pixelmon.config.bossLevelIncreases.comment": "The level increases of each boss tier. Common, Uncommon, Rare, Epic, Legendary, Ultimate, Haunted, Drowned.",
    "pixelmon.config.bossSpawnTicks": "Boss spawn ticks",
    "pixelmon.config.bossSpawnTicks.comment": "Average number of ticks before spawning a boss Pokémon",
    "pixelmon.config.bossSpawnChance": "Boss spawn chance",
    "pixelmon.config.bossSpawnChance.comment": "Chance that a mega boss spawn attempt will succeed (0-1)",
    "pixelmon.config.legendarySpawnTicks": "Legendary spawn ticks",
    "pixelmon.config.legendarySpawnTicks.comment": "Average number of ticks before an attempt at Legendary spawning will be made (modified by spawn chance).",
    "pixelmon.config.legendarySpawnChance": "Legendary spawn chance",
    "pixelmon.config.legendarySpawnChance.comment": "Chance that a Legendary spawn attempt will succeed (0-1).",
    "pixelmon.config.spawnTicksPlayerMultiplier": "Spawn Ticks Player Multiplier",
    "pixelmon.config.spawnTicksPlayerMultiplier.comment": "A multiplier that speeds up legendary and mega boss spawning based on player count. ticks = spawnTicks / (1 + (number of players - 1) * spawnTicksPlayerMultiplier)",
    "pixelmon.config.spawnLevelsByDistance": "Spawn levels by distance",
    "pixelmon.config.spawnLevelsByDistance.comment": "Sets whether or not Pokémon levels are determined by distance from the World's spawn point.",
    "pixelmon.config.maxLevelByDistance": "Maximum spawn level (by distance)",
    "pixelmon.config.maxLevelByDistance.comment": "Maximum level Pokémon will spawn at when Spawn Levels By Distance enabled.",
    "pixelmon.config.distancePerLevel": "Distance per level",
    "pixelmon.config.distancePerLevel.comment": "Number of blocks for a level increase when Spawn Levels By Distance enabled.",
    "pixelmon.config.spawnLevelsCloserToPlayerLevels": "Spawn closer to player's level",
    "pixelmon.config.spawnLevelsCloserToPlayerLevels.comment": "Whether or not wild Pokémon will have levels closer to the player's Pokémon. Note: This will effect the external jsons!",
    "pixelmon.config.spawnLevelsIncreaseInCaves": "Higher levels underground",
    "pixelmon.config.spawnLevelsIncreaseInCaves.comment": "Whether or not wild Pokémon will spawn with higher levels underground.",
    "pixelmon.config.transformToDittoOnCatch": "Ditto transform chance on catch",
    "pixelmon.config.transformToDittoOnCatch.comment": "Chance for a wild Pokémon to turn into a Ditto on capture.",
    "pixelmon.config.meltanSpawnChance": "Meltan chance to spawn when smelting",
    "pixelmon.config.meltanSpawnChance.comment": "Chance for a Meltan to spawn when smelting a metal ore block. 1/x",
    "pixelmon.config.meltanTransformChance": "Meltan to ditto transform chance",
    "pixelmon.config.meltanTransformChance.comment": "Percentage chance for a Meltan to transform into Ditto on capture.",
    "pixelmon.config.canTransformToDittoOnCatch": "Pokémon which can transform to Ditto.",
    "pixelmon.config.canTransformToDittoOnCatch.comment": "Pokémon which can transform to Ditto.",
    "pixelmon.config.hiddenAbilitySpawnRate": "Hidden Ability spawn rate",
    "pixelmon.config.hiddenAbilitySpawnRate.comment": "Chance of a wild Pokémon spawning with its hidden Ability (1/rate). 0 disables hidden Ability spawns.",
    "pixelmon.config.gigantamaxFactorSpawnRate": "Gigantamax Factor spawn rate",
    "pixelmon.config.gigantamaxFactorSpawnRate.comment": "Chance of a wild Pokémon spawning with the Gigantamax Factor (1/rate). 0 disables Gigantamax Factor spawns.",
    "pixelmon.config.allowLegendarySpawn": "Allow Legendaries to spawn",
    "pixelmon.config.allowLegendarySpawn.comment": "Allow wild Legendaries to spawn (besides specific event spawns).",
    "pixelmon.config.legendaryDespawnTicks": "Legendary despawn ticks",
    "pixelmon.config.legendaryDespawnTicks.comment": "Number of ticks until legendaries will despawn.",
    "pixelmon.config.displayLegendaryGlobalMessage": "Display Legendary global message",
    "pixelmon.config.displayLegendaryGlobalMessage.comment": "Displays server-wide announcement 'A Legendary has spawned in <name> biome' when a Legendary spawns.",
    "pixelmon.config.doLegendaryRaidEvent": "Display Raid Legendary global message",
    "pixelmon.config.doLegendaryRaidEvent.comment": "Displays server-wide announcement 'A Legendary has spawned in a Max Raid Den in a <name> biome' when a Legendary spawns in one.",
    "pixelmon.config.useRecentLevelMoves": "Spawn with recent moves",
    "pixelmon.config.useRecentLevelMoves.comment": "If true, Pokémon will spawn with the most recent moves in their level-up movepools. If false, Pokémon will spawn with random moves from their level-up movepools.",
    "pixelmon.config.caveMaxMultiplier" : "Cave Max Multiplier",
    "pixelmon.config.caveMaxMultiplier.comment": "Multiplies the level of a wild Pokémon based on how far underground it spawned. Defines the highest number the multiplier can be at y = 0.",
    "pixelmon.config.despawnOnFleeOrLoss": "Despawn on flee or loss",
    "pixelmon.config.despawnOnFleeOrLoss.comment": "Forces wild Pokémon to despawn after a battle.",
    "pixelmon.config.entitiesPerPlayer": "Entities per Player",
    "pixelmon.config.entitiesPerPlayer.comment": "The maximum number of entities (NPC or Pokémon) that can spawn per player. Lower for better performance.",
    "pixelmon.config.spawnsPerPass": "Spawns per Pass",
    "pixelmon.config.spawnsPerPass.comment": "The maximum number of spawns in a single spawn cycle for a single player. Lower for slower spawning and better performance.",
    "pixelmon.config.spawnFrequency": "Spawn Frequency",
    "pixelmon.config.spawnFrequency.comment": "The number of spawn passes made per minute. Decrease for better performance.",
    "pixelmon.config.minimumDistanceBetweenSpawns": "Min Distance between Spawns",
    "pixelmon.config.minimumDistanceBetweenSpawns.comment": "The minimum number of blocks between a spawned entity and an existing living entity.",
    "pixelmon.config.minimumDistanceFromCentre": "Min Distance from Centre",
    "pixelmon.config.minimumDistanceFromCentre.comment": "The minimum distance from the player that entities may spawn. The lower this is, the closer entities will spawn to players.",
    "pixelmon.config.maximumDistanceFromCentre": "Max Distance from Centre",
    "pixelmon.config.maximumDistanceFromCentre.comment": "The maximum distance from the player that entities may spawn.",
    "pixelmon.config.horizontalTrackFactor": "Horizontal Track Factor",
    "pixelmon.config.horizontalTrackFactor.comment": "How many ticks 'lead' the player tracking spawner will give players based on their motion. This tries to spawn at locations the player is about to be.",
    "pixelmon.config.verticalTrackFactor": "Vertical Track Factor",
    "pixelmon.config.verticalTrackFactor.comment": "How many ticks 'lead' the player tracking spawner will give players based on their vertical motion. Typically best as zero due to the interference jumping can cause.",
    "pixelmon.config.horizontalSliceRadius": "Horizontal Slice Radius",
    "pixelmon.config.horizontalSliceRadius.comment": "The horizontal radius of the areas randomly selected near the player to do spawning in. Lower for better performance but less reliable spawning.",
    "pixelmon.config.verticalSliceRadius": "Vertical Slice Radius",
    "pixelmon.config.verticalSliceRadius.comment": "The vertical radius of the areas randomly selected near the player to do spawning in. Lower for better performance but less reliable spawning. Larger than horizontal to better match player behavior.",
    "pixelmon.config.maximumSpawnedPokemon": "Maximum Spawned Pokémon",
    "pixelmon.config.maximumSpawnedPokemon.comment": "The maximum number of Pokémon that can be naturally spawned in at once (soft limit). This does not count fishing, external moves, commands, or legendary spawning.",
    "pixelmon.config.maximumSpawnedFlyingPokemon": "Max Flying Pokémon per Player",
    "pixelmon.config.maximumSpawnedFlyingPokemon.comment": "The maximum number of Flying Pokémon that can be naturally spawned in at once (soft limit). This does not count fishing, external moves, commands, or legendary spawning.",
    "pixelmon.config.maximumSpawnedFlyingPokemonPerPlayer": "Maximum Spawned Flying Pokémon",
    "pixelmon.config.maximumSpawnedFlyingPokemonPerPlayer.comment": "The maximum number of Flying Pokémon that can spawn per player. Lower for better performance.",
    "pixelmon.config.bellSuccessChance": "Bell success chance",
    "pixelmon.config.bellSuccessChance.comment": "Chance that a bell, at dawn, will start to ring. 1 = 100%.",
    "pixelmon.config.bellInclusionRange": "Bell inclusion range",
    "pixelmon.config.bellInclusionRange.comment": "Range in blocks that Clear/Tidal Bells will seek out other bells.",
    "pixelmon.config.ilexShrineSpawnRate": "Ilex Shrine Spawn Rate",
    "pixelmon.config.ilexShrineSpawnRate.comment": "Chance per valid chunk to contain an Ilex Shrine.",
    "pixelmon.config.spawnZygardeCells": "Spawn Zygarde Cells in the wild",
    "pixelmon.config.spawnZygardeCells.comment": "Allow Zygarde Cells to spawn randomly in the world.",
    "pixelmon.config.bossWeights": "Boss weights",
    "pixelmon.config.bossWeights.comment": "Relative spawn chances of each boss tier.",
    "pixelmon.config.bossCandyChances": "Boss Rare Candy chances",
    "pixelmon.config.bossCandyChances.comment": "Chances to get a Rare Candy from a boss, per boss type.",
    "pixelmon.config.bossesAlwaysMegaIfPossible": "Bosses must mega if possible",
    "pixelmon.config.bossesAlwaysMegaIfPossible.comment": "Whether bosses that spawn must Mega Evolve if they can.",
    "pixelmon.config.lureFluteDuration": "Black/White Flute duration",
    "pixelmon.config.lureFluteDuration.comment": "How long the effects of the Black/White Flute last for in seconds once used.",
    "pixelmon.config.lureFluteLevelModifier": "Black/White Flute level modifier",
    "pixelmon.config.lureFluteLevelModifier.comment": "By how many levels the Black/White Flute can affect spawns by",

    "pixelmon.config.Gen1": "Generation 1",
    "pixelmon.config.Gen1.comment": "Pokedex 1-151",
    "pixelmon.config.Gen2": "Generation 2",
    "pixelmon.config.Gen2.comment": "Pokedex 152-251",
    "pixelmon.config.Gen3": "Generation 3",
    "pixelmon.config.Gen3.comment": "Pokedex 252-386",
    "pixelmon.config.Gen4": "Generation 4",
    "pixelmon.config.Gen4.comment": "Pokedex 387-493",
    "pixelmon.config.Gen5": "Generation 5",
    "pixelmon.config.Gen5.comment": "Pokedex 494-649",
    "pixelmon.config.Gen6": "Generation 6",
    "pixelmon.config.Gen6.comment": "Pokedex 650-721",
    "pixelmon.config.Gen7": "Generation 7",
    "pixelmon.config.Gen7.comment": "Pokedex 722-809",
    "pixelmon.config.Gen8": "Generation 8",
    "pixelmon.config.Gen8.comment": "Pokedex 810-890",

    "pixelmon.config.spawnNormal": "Spawn normal PokéLoot",
    "pixelmon.config.spawnNormal.comment": "Allows normal visible PokeChests to spawn around the world randomly.",
    "pixelmon.config.spawnHidden": "Spawn invisible PokéLoot",
    "pixelmon.config.spawnHidden.comment": "Allows invisible PokeChests to spawn around the world randomly.",
    "pixelmon.config.spawnGrotto": "Spawn Hidden Grottos",
    "pixelmon.config.spawnGrotto.comment": "Allow Hidden Grottos to spawn in the world.",
    "pixelmon.config.spawnRate": "PokéLoot spawn rate",
    "pixelmon.config.spawnRate.comment": "Chest spawn rate. 0: 1 per 64 chunks. 1: 1 per 32 chunks. 2: 1 per 18 chunks. 3: 1 per 10 chunks",
    "pixelmon.config.spawnMode": "PokéLoot spawn mode",
    "pixelmon.config.spawnMode.comment": "Default spawn mode (FCFS=0, PL1D=1, PUD=2, TIMED=3). FCFS = First Come First Serve, only one player can loot chest, then chests vanishes. PL1D = Player 1 Drop, chest gives one drop per person. Chest remains for others to use once each. PUD = Player Unlimited Drops, chests can be used infinitely by all players. TIMED = Each player allowed to loot again after specified time interval (individual timers). Chest remains after looting.",
    "pixelmon.config.timedLootReuseHours": "Reuse cooldown",
    "pixelmon.config.timedLootReuseHours.comment": "Sets frequency (hours) that a player can reuse a timed loot chest (both placed in Creative and naturally spawned) if set to TIMED.",

    "pixelmon.config.enableAFKHandler": "AFK handler enabled",
    "pixelmon.config.enableAFKHandler.comment": "Have auto-battle take over if the player is AFK during a battle. Activates after the specified time period and gives specified time for each turn after that.",
    "pixelmon.config.afkActivateSeconds": "AFK activate seconds",
    "pixelmon.config.afkActivateSeconds.comment": "The time in seconds before a player in a battle is declared to be AFK and the auto-battle code takes over for them.",
    "pixelmon.config.afkHandlerTurnSeconds": "AFK turn seconds",
    "pixelmon.config.afkHandlerTurnSeconds.comment": "The time in seconds before the auto-battle handler picks a move automatically each turn.",

    "pixelmon.config.renderDistanceWeight": "Render distance weight",
    "pixelmon.config.renderDistanceWeight.comment": "Multiplier of the 64 distance usually used for rendering.",
    "pixelmon.config.namePlateRange": "Name plate distance",
    "pixelmon.config.namePlateRange.comment": "Sets how far Pokémon names and levels can be seen from (client setting only). 1=Default, 2=Farther, 3=Far",
    "pixelmon.config.renderWildLevels": "Show wild Pokémon levels",
    "pixelmon.config.renderWildLevels.comment": "Whether or not wild Pokémon should show their level above their head.",
    "pixelmon.config.showWildNames": "Show wild Pokémon names",
    "pixelmon.config.showWildNames.comment": "Whether to show wild Pokémon names on their nameplates.",
    "pixelmon.config.scalePokemonModels": "Increase model size by 30%%",
    "pixelmon.config.scalePokemonModels.comment": "Increases size of Pokémon models in-game by 30%.",
    "pixelmon.config.useSmoothShadingOnPokeBalls": "Smooth shading on Poké Balls",
    "pixelmon.config.useSmoothShadingOnPokeBalls.comment": "Use the SMD normal maps for shading Poké Balls.",
    "pixelmon.config.useSmoothShadingOnPokemon": "Smooth shading on Pokémon",
    "pixelmon.config.smoothAnimations": "Enable smooth animations on all SMD models",
    "pixelmon.config.smoothAnimations.comment": "Whether SMD models use smooth animations or not.",
    "pixelmon.config.useSmoothShadingOnPokemon.comment": "Adds interpolation to SMD model animation. Will have a performance penalty.",
    "pixelmon.config.showCurrentAttackTarget": "Show current attack target",
    "pixelmon.config.showCurrentAttackTarget.comment": "Display the currently selected Pokémon's attack target on the screen.",
    "pixelmon.config.drawHealthBars": "Draw Pokémon health bars",
    "pixelmon.config.drawHealthBars.comment": "Show each Pokémon's health in a bar above their heads.",
    "pixelmon.config.useBattleCamera": "Use battle camera",
    "pixelmon.config.useBattleCamera.comment": "Set whether or not to switch to an external camera during battles.",
    "pixelmon.config.playerControlCamera": "Player-controlled battle camera",
    "pixelmon.config.playerControlCamera.comment": "Set whether or not the player can control the camera during battles (sets to sphere based camera positioning)",
    "pixelmon.config.onlyShowAttackEffectsToBattlers": "Only show attack effects to battlers",
    "pixelmon.config.onlyShowAttackEffectsToBattlers.comment": "If true, attack effects are only displayed to players participating in or spectating a battle.",
    "pixelmon.config.advancedBattleInformation": "Advanced battle information",
    "pixelmon.config.advancedBattleInformation.comment": "If true, show percentage of opponent HP remaining",
    "pixelmon.config.rangeToDisplayAttackAnimations": "Range to display attack animations",
    "pixelmon.config.rangeToDisplayAttackAnimations.comment": "The range (in blocks) at which battle effects should be displayed to players if they are not in the battle.",
    "pixelmon.config.emissiveTextures": "Emissive Textures",
    "pixelmon.config.emissiveTextures.comment": "Emissive textures add an additional effect that makes some Pokémon glow, but come with a significant performance penalty.",
    "pixelmon.config.emissiveTexturesDistance": "Distance to stop rendering emissive textures",
    "pixelmon.config.emissiveTexturesDistance.comment": "The distance to stop rendering emissive textures at.",

    "pixelmon.config.allowBreeding": "Allow breeding",
    "pixelmon.config.allowBreeding.comment": "Allows the placement of Ranch Blocks, which are required for breeding Pokémon.",
    "pixelmon.config.maxCumulativePokemonInRanch": "Maximum cumulative Pokémon in Ranch Blocks",
    "pixelmon.config.maxCumulativePokemonInRanch.comment": "Maximum Pokémon a player can have in all ranches across the world. Max of 0 is unlimited.",
    "pixelmon.config.allowDittoDittoBreeding": "Allow Ditto-Ditto breeding",
    "pixelmon.config.allowDittoDittoBreeding.comment": "Allows two Ditto to breed together to produce Eggs with random Pokémon inside.",
    "pixelmon.config.allowRandomBreedingEggsToBeLegendary": "Ditto-Ditto can contain Legendaries",
    "pixelmon.config.allowRandomBreedingEggsToBeLegendary.comment": "Enable random Eggs from Ditto-Ditto breeding to contain Legendaries.",
    "pixelmon.config.useBreedingEnvironment": "Use breeding environments",
    "pixelmon.config.useBreedingEnvironment.comment": "Control speed of breeding based on the blocks set in the area. If false, will set breeding speed to 1.0x.",
    "pixelmon.config.stepsPerEggCycle": "Steps per Egg cycle",
    "pixelmon.config.stepsPerEggCycle.comment": "Sets the number of steps per Egg cycle. Lower numbers hatch Eggs faster.",
    "pixelmon.config.numBreedingStages": "Breeding stages",
    "pixelmon.config.numBreedingStages.comment": "Number of stages to go through before breeding occurs (1-5).",
    "pixelmon.config.breedingTicks": "Ticks per stage",
    "pixelmon.config.breedingTicks.comment": "Number of world ticks needed to increase the breeding stage.",
    "pixelmon.config.allowRanchExpansion": "Enable ranch expansion",
    "pixelmon.config.allowRanchExpansion.comment": "Allow the ranch expansion.",
    "pixelmon.config.ovalCharmMultiplier": "Oval Charm breeding modifier",
    "pixelmon.config.ovalCharmMultiplier.comment": "Breeding rate modifier that is applied if the Oval Charm is equipped.",
    "pixelmon.config.regionalFormsByDimension": "Regional forms by dimension",
    "pixelmon.config.regionalFormsByDimension.comment": "Whether alolan and galarian forms are granted to an egg if they are in a certain dimension.",
    "pixelmon.config.alolanEggDimensions": "Alolan egg dimensions",
    "pixelmon.config.alolanEggDimensions.comment": "The list of dimensions where eggs will be alolan. requires regionalFormsByDimension to be enabled.",
    "pixelmon.config.galarianEggDimensions": "Galarian egg dimensions",
    "pixelmon.config.galarianEggDimensions.comment": "The list of dimensions where eggs will be galarian. requires regionalFormsByDimension to be enabled.",

    "pixelmon.config.scaleGrassBattles": "Scale grass battle levels to player",
    "pixelmon.config.scaleGrassBattles.comment": "Scale grass battles to players' team levels?",
    "pixelmon.config.pokeGiftReusable": "Poké Gifts reusable",
    "pixelmon.config.pokeGiftReusable.comment": "Enable multiple players to get the Pokémon from the gift.",
    "pixelmon.config.pokeGiftHaveEvents": "Enable Poké Gift events",
    "pixelmon.config.pokeGiftHaveEvents.comment": "Allows Poke Gifts to be used (both placing and using, prevention against spam).",
    "pixelmon.config.eventPokeGiftLoad": "Enable event Poké Gift spawning",
    "pixelmon.config.eventPokeGiftLoad.comment": "Should an event Poke Gift spawn?",
    "pixelmon.config.eventHasLegendaries": "Allow Legendaries in event Poké Gifts",
    "pixelmon.config.eventHasLegendaries.comment": "Enable/Disable Legendaries from being added to the event Poke Gift.",
    "pixelmon.config.eventHasShinies": "Enable event Poké Gift Shinies",
    "pixelmon.config.eventHasShinies.comment": "Each Pokémon has a 1/10 chance of being a Shiny.",
    "pixelmon.config.eventMaxPokemon": "Event Poké Gift maximum Pokémon",
    "pixelmon.config.eventMaxPokemon.comment": "Sets the maximum amount of Pokémon that are in spawned Poke Gifts.",
    "pixelmon.config.eventShinyRate": "Event Poké Gift Shiny rate (1/x)",
    "pixelmon.config.eventShinyRate.comment": "The rate of Shiny Pokémon appearing in a Poke Gift (1/x).",
    "pixelmon.config.eventTime": "Event Poké Gift custom date (D/M)",
    "pixelmon.config.eventTime.comment": "Define a custom date for Poke Gift events (day then month).",
    "pixelmon.config.eventCoords": "Event Poké Gift spawning coordinates",
    "pixelmon.config.eventCoords.comment": "Specify the coordinates of the event Poke Gift chest here.",

    "pixelmon.config.allowExternalMoves": "Allow external moves",
    "pixelmon.config.allowExternalMoves.comment": "Allows the use of external moves such as Rock Smash and Cut.",
    "pixelmon.config.allowDestructiveExternalMoves": "Allow destructive external moves",
    "pixelmon.config.allowDestructiveExternalMoves.comment": "Allow destructive external moves (includes Cut, Dig, Explode, LightFire, Lightning, RockSmash)",

    "pixelmon.config.pkrsEnabled": "Enable Pokérus",
    "pixelmon.config.pkrsEnabled.comment": "Whether or not the Pokérus is enabled. This blocks the growth, the spread and the spawning of the Pokérus.",
    "pixelmon.config.pkrsSpawnRate": "Pokerus spawn rate",
    "pixelmon.config.pkrsSpawnRate.comment": "Pokerus spawn rate (1/x). (0 to disable)",
    "pixelmon.config.pkrsInformPlayers": "Inform player of Pokérus",
    "pixelmon.config.pkrsInformPlayers.comment": "Whether or not the player should be informed if their Pokémon got Pokérus.",
    "pixelmon.config.pkrsSpreadRate": "Pokérus spread rate",
    "pixelmon.config.pkrsSpreadRate.comment": "Chance to spread the Pokérus to the near Pokémon after a battle. (1/x) (-1 to disable; 0 to keep always active)",

    "pixelmon.config.allowRiding": "Allow Pokémon to be ridden",
    "pixelmon.config.allowRiding.comment": "Allow players to ride Pokémon. If false, no Pokémon can be ridden.",
    "pixelmon.config.ridingSpeedMultiplier": "Riding speed multiplier",
    "pixelmon.config.ridingSpeedMultiplier.comment": "Multipier for the speed that mounted Pokémon travel at.",
    "pixelmon.config.enablePointToSteer": "Enable point to steer",
    "pixelmon.config.enablePointToSteer.comment": "When mounted, enables steering the Pokémon by looking.",
    "pixelmon.config.landMount": "Allow Pokémon to be mounted for land riding.",
    "pixelmon.config.landMount.comment": "Allows riding Pokémon mounts that do not have the ability to fly or surf.",
    "pixelmon.config.requireHM": "Require the HM moves fly or surf",
    "pixelmon.config.requireHM.comment": "Requires flying and water Pokémon mounts to have HM moves Fly or Surf (respectively) to use those abilities when ridden.",
    "pixelmon.config.flyingSpeedLimit": "Maximum Flying Speed",
    "pixelmon.config.flyingSpeedLimit.comment": "Sets the flying speed limit for a mounted Pokémon in the new flying system.",

    "pixelmon.config.spawnStructures": "Spawn Pixelmon structures in world",
    "pixelmon.config.spawnStructures.comment": "Allow random generation of structures such as Pokémon Centers, shrines, and other buildings if true.",
    "pixelmon.config.spawnBirdShrines": "Spawn bird shrines",
    "pixelmon.config.spawnBirdShrines.comment": "Allow Legendary bird shrines to spawn randomly in the world.",
    "pixelmon.config.spawnCelebiShrines": "Spawn Celebi Shrines",
    "pixelmon.config.spawnCelebiShrines.comment": "Allow Celebi shrines (Ilex Shrine) to spawn randomly in the world.",
    "pixelmon.config.replaceMCVillagers": "Replace Minecraft villagers",
    "pixelmon.config.replaceMCVillagers.comment": "Replaces Minecraft's villagers with Pixelmon NPCs.",
    "pixelmon.config.spawnPokeMarts": "Spawn shopkeepers",
    "pixelmon.config.spawnPokeMarts.comment": "Poke Marts will spawn with shopkeepers in Minecraft's towns.",
    "pixelmon.config.spawnGyms": "Spawn Gyms",
    "pixelmon.config.spawnGyms.comment": "Sets spawning of Gyms in close proximity to newly generated towns on or off.",
    "pixelmon.config.injectIntoLootTables": "Inject into loot tables",
    "pixelmon.config.injectIntoLootTables.comment": "Whether or not Pixelmon should modify Minecraft loot tables.",

    "pixelmon.config.ultraSpace": "Enable Ultra Space",
    "pixelmon.config.ultraSpace.comment": "Whether the Ultra Space Dimension is activated or not.",
    "pixelmon.config.ultraSpaceDimId": "Ultra Space Dimension ID",
    "pixelmon.config.ultraSpaceDimId.comment": "The dimension ID Ultra Space will utilize. If smaller than 2, defaults to ID 72.",
    "pixelmon.config.ultraSpaceShinyModifier": "Ultra Space Shiny Modifier",
    "pixelmon.config.ultraSpaceShinyModifier.comment": "Modifies the rarity of shiny Pokémon in the Ultra Space Dimension (shinyRate * ultraSpaceShinyModifier).",
    "pixelmon.config.ultraSpaceBossModifier": "Ultra Space Boss Modifier",
    "pixelmon.config.ultraSpaceBossModifier.comment": "Modifies the rarity of bosses in the Ultra Space Dimension (bossRate * ultraSpaceBossModifier).",
    "pixelmon.config.ultraSpaceHiddenAbilityModifier": "Ultra Space Hidden Ability Modifier",
    "pixelmon.config.ultraSpaceHiddenAbilityModifier.comment": "Modifies the rarity of hidden abilities in the Ultra Space Dimension (hiddenAbilitySpawnRate * ultraSpaceHiddenAbilityModifier).",
    "pixelmon.config.ultraSpaceGigantamaxFactorModifier": "Ultra Space Gigantamax Factor Modifier",
    "pixelmon.config.ultraSpaceGigantamaxFactorModifier.comment": "Modifies the rarity of the Gigantamax Factor in the Ultra Space Dimension (gigantamaxFactorSpawnRate * ultraSpaceGigantamaxFactorModifier). -1 disables Gigantamax Factor spawns in Ultra Space.",
    "pixelmon.config.ultraSpaceColourblindMode": "Ultra Space Colourblind Mode",
    "pixelmon.config.ultraSpaceColourblindMode.comment": "Whether to use Ultra Space fog colourblind mode.",
    "pixelmon.config.spawnUltraSpaceEndCities": "Ultra Space End City Spawning",
    "pixelmon.config.spawnUltraSpaceEndCities.comment": "Whether End Cities should be generated in new Ultra Space chunks.",
    "pixelmon.config.spawnUltraSpaceExtraLoots": "Ultra Space Extra Pokéloot",
    "pixelmon.config.spawnUltraSpaceExtraLoots.comment": "Whether more Pokéloot chests should be generated in new Ultra Space chunks.",
    "pixelmon.config.spawnUltraSpaceExtraOres": "Ultra Space Extra Ore spawns",
    "pixelmon.config.spawnUltraSpaceExtraOres.comment": "Whether more ores should be generated in new Ultra Space chunks.",
    "pixelmon.config.spawnUltraSpaceExtraPlants": "Ultra Space Extra Plant spawns",
    "pixelmon.config.spawnUltraSpaceExtraPlants.comment": "Whether more plants (apricorns, berries) should be generated in new Ultra Space chunks.",
    "pixelmon.config.spawnUltraSpaceExtraShrines": "Ultra Space Extra Shrines",
    "pixelmon.config.spawnUltraSpaceExtraShrines.comment": "Whether more shrines should be generated in new Ultra Space chunks.",
    "pixelmon.config.spawnUltraSpaceNetherForts": "Ultra Space Nether Fort spawns",
    "pixelmon.config.spawnUltraSpaceNetherForts.comment": "Whether Nether Forts should be generated in new Ultra Space chunks.",

    "pixelmon.config.drownedWorld": "Enable Drowned World",
    "pixelmon.config.drownedWorld.comment": "Whether the Drowned World has its quest based restrictions or not.",
    "pixelmon.config.drownedWorldDimId": "Drowned World Dimension ID",
    "pixelmon.config.drownedWorldDimId.comment": "The dimension ID Drowned World will utilize. If smaller than 2, defaults to ID 73.",
    "pixelmon.config.drownedWorldRadius": "Drowned World Radius (chunks)",
    "pixelmon.config.drownedWorldRadius.comment": "The radius of the Drowned World. If a player travels beyond this, they are teleported to the opposite side.",

    "pixelmon.config.raidShinyChances": "Raid shiny rates",
    "pixelmon.config.raidShinyChances.comment": "Shiny rates per raid star level",
    "pixelmon.config.raidHAChances": "Raid HA rates",
    "pixelmon.config.raidHAChances.comment": "HA rates per raid star level",
    "pixelmon.config.raidGigantamaxFactorChances": "Raid Gigantamax Factor rates",
    "pixelmon.config.raidGigantamaxFactorChances.comment": "Gigantamax Factor rates per raid star level",
    "pixelmon.config.denSpawnChancePerChunk": "Den spawn chance per chunk",
    "pixelmon.config.denSpawnChancePerChunk.comment": "Chance of a den spawning per chunk",
    "pixelmon.config.denAdditionalSpawnChanceOnLiquid": "Den on liquid spawn chance modifier",
    "pixelmon.config.denAdditionalSpawnChanceOnLiquid.comment": "Modifier of the den spawn chance if the den is going to spawn on liquid.",
    "pixelmon.config.denRespawnTime": "Den respawn time",
    "pixelmon.config.denRespawnTime.comment": "Time of day when dens attempt to respawn their boss",
    "pixelmon.config.denRespawnChance": "Den respawn chance",
    "pixelmon.config.denRespawnChance.comment": "Chance of a den respawning their boss when the den respawn time is hit",
    "pixelmon.config.denStarWeights": "Den star weights",
    "pixelmon.config.denStarWeights.comment": "Weights of each star level appearing in raids",
    "pixelmon.config.denStarDrops": "Den star drops",
    "pixelmon.config.denStarDrops.comment": "Number of item drops for each star level in raids",
    "pixelmon.config.raidHaveLegendaries": "Raids have legendaries",
    "pixelmon.config.raidHaveLegendaries.comment": "Whether raids can have legendaries",
    "pixelmon.config.raidHaveUltraBeasts": "Raids have Ultra Beasts",
    "pixelmon.config.raidHaveUltraBeasts.comment": "Whether raids can have Ultra Beasts",
    "pixelmon.config.raidMasterBallBlock": "Raid Master/Park Ball block",
    "pixelmon.config.raidMasterBallBlock.comment": "Star levels at which Master Balls/Park Balls cannot be used.",
    "pixelmon.config.raidOnlyLeaderCanCatch": "Raid leader only catch",
    "pixelmon.config.raidOnlyLeaderCanCatch.comment": "Star levels at which only the leader of the raid has a catch attempt.",
    "pixelmon.config.raidCatchHealthPercentage": "Raid catch health percentage",
    "pixelmon.config.raidCatchHealthPercentage.comment": "Health percentage raids are treated as having for catch purposes, per star level.",
    "pixelmon.config.raidBlacklist": "Raid blacklist",
    "pixelmon.config.raidBlacklist.comment": "Species which can never appear in raids",
    "pixelmon.config.raidDensBreakable": "Dens breakable",
    "pixelmon.config.raidDensBreakable.comment": "Whether or not dens can be broken with repeat pickaxe hits",

    "pixelmon.config.useExternalJSONFilesDrops": "Use external JSON files for drops",
    "pixelmon.config.useExternalJSONFilesDrops.comment": "Load external configuration files used for drops from the \"pixelmon/drops\" folder. If set to true and the \"pixelmon/drops\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesNPCs": "Use external JSON files for NPCs",
    "pixelmon.config.useExternalJSONFilesNPCs.comment": "Load external configuration files used for NPCs from the \"pixelmon/npcs\" folder. If set to true and the \"pixelmon/npcs\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesRules": "Use external JSON files for battle rules",
    "pixelmon.config.useExternalJSONFilesRules.comment": "Load external configuration files used for battle rules from the \"pixelmon/rules\" folder. If set to true and the \"pixelmon/rules\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesSpawning": "Use external JSON files for spawning",
    "pixelmon.config.useExternalJSONFilesSpawning.comment": "Load external configuration files used for spawning from the \"pixelmon/spawning\" folder. If set to true and the \"pixelmon/spawning\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesStructures": "Use external JSON files for structures",
    "pixelmon.config.useExternalJSONFilesStructures.comment": "Load external configuration files used for structures from the \"pixelmon/structures\" folder. If set to true and the \"pixelmon/structures\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesStats": "Use external JSON files for stats",
    "pixelmon.config.useExternalJSONFilesStats.comment": "Load external configuration files used for stats from the \"pixelmon/stats\" folder. If set to true and the \"pixelmon/stats\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesMoves": "Use external JSON files for moves",
    "pixelmon.config.useExternalJSONFilesMoves.comment": "Load external configuration files used for moves from the \"pixelmon/moves\" folder. If set to true and the \"pixelmon/moves\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.useExternalJSONFilesQuests": "Use external JSON files for quests",
    "pixelmon.config.useExternalJSONFilesQuests.comment": "Load external configuration files used for quests from the \"pixelmon/quests\" folder. If set to true and the \"pixelmon/quests\" folder does not exist, Pixelmon will create the folder and dump the existing files there.",
    "pixelmon.config.spawnSetFolder": "Spawn Set Folder",
    "pixelmon.config.spawnSetFolder.comment": "Which folder to use under ./pixelmon/spawning/ for spawn sets.",
    "pixelmon.config.useBetterSpawnerConfig": "Use Better Spawner config",
    "pixelmon.config.useBetterSpawnerConfig.comment": "Whether or not to use the file under config/pixelmon for the Better Spawner",
    "pixelmon.config.lootIgnoreList": "Loot ingnore list",
    "pixelmon.config.lootIgnoreList.comment": "Which types of loot, such as \"simple_dungeon\", that Pixelmon should not modify.",

    "pixelmon.config.level": "Starter level",
    "pixelmon.config.level.comment": "The starting level. (min=5, max=100)",
    "pixelmon.config.shiny": "Shiny starters",
    "pixelmon.config.shiny.comment": "Whether starters should always be shiny.",
    "pixelmon.config.useCustomStarters": "Use custom starters",
    "pixelmon.config.useCustomStarters.comment": "Whether the starter list should be loaded from this config.",
    "pixelmon.config.starterList": "Starter list",
    "pixelmon.config.starterList.comment": "List of starters, up to a maximum of 24. Supports some specs, namely \"form:#\" (1 for Alolan, 2 for Galarian) and \"shiny\". Example: \"Vulpix form:1\" (double quotes are required)",
    "pixelmon.config.starterMarks": "Starter Marks",
    "pixelmon.config.starterMarks.comment": "Whether starter Pokémon get the Destiny mark or not.",

    "pixelmon.config.useAsyncSaving.comment": "Activates off-main thread saving of party and computer data. (server only)",
    "pixelmon.config.asyncInterval.comment": "The interval in seconds that the async saver will save all queued data to disk.",

    "pixelmon.config.elevatorSearchRange": "Search range (up/down)",
    "pixelmon.config.elevatorSearchRange.comment": "Maximum search range up/down for a pairing elevator.",

    "pixelmon.config.questMaxRange": "Quest max range",
    "pixelmon.config.questMaxRange.comment": "The maximum distance a player can get before a quest can be found on a new NPC if not taken.",
    "pixelmon.config.questRandomNPCs": "Random Quest NPCs",
    "pixelmon.config.questRandomNPCs.comment": "Whether to let NPCs be randomly assigned quests or not. This does not affect quests that have already been started.",

    "pixelmon.config.wildCanFlee": "Allow wild Pokémon to flee",
    "pixelmon.config.wildCanFlee.comment": "Wild Pokémon will have a chance based on unfavourable battle conditions to try and flee from battle.",

    "ribbon.none.description": "Select a Ribbon above.",
    "ribbon.none.name": "No Ribbon selected",
    "ribbon.none.title": "%s",

    "ribbon.champion.description": "A Ribbon awarded for clearing the Pokémon League and entering the Hall of Fame somewhere long ago.",
    "ribbon.champion.name": "Champion Ribbon",
    "ribbon.champion.title": "%s the Champion",
    "ribbon.kanto_champion.description": "A Ribbon awarded for clearing the Kanto Champion and entering the Kanto Hall of Fame.",
    "ribbon.kanto_champion.name": "Kanto Champion Ribbon",
    "ribbon.kanto_champion.title": "%s the Kanto Champion",
    "ribbon.orange_champion.description": "A Ribbon awarded for clearing the Orange Archipelago Champion and entering the Orange Archipelago Hall of Fame.",
    "ribbon.orange_champion.name": "Orange Archipelago Champion Ribbon",
    "ribbon.orange_champion.title": "%s the Orange Archipelago Champion",
    "ribbon.johto_champion.description": "A Ribbon awarded for clearing the Johto Champion and entering the Johto Hall of Fame.",
    "ribbon.johto_champion.name": "Johto Champion Ribbon",
    "ribbon.johto_champion.title": "%s the Johto Champion",
    "ribbon.hoenn_champion.description": "A Ribbon awarded for clearing the Hoenn Champion and entering the Hoenn Hall of Fame.",
    "ribbon.hoenn_champion.name": "Hoenn Champion Ribbon",
    "ribbon.hoenn_champion.title": "%s the Hoenn Champion",
    "ribbon.sinnoh_champion.description": "A Ribbon awarded for clearing the Sinnoh Champion and entering the Sinnoh Hall of Fame.",
    "ribbon.sinnoh_champion.name": "Sinnoh Champion Ribbon",
    "ribbon.sinnoh_champion.title": "%s the Sinnoh Champion",
    "ribbon.unova_champion.description": "A Ribbon awarded for clearing the Unova Champion and entering the Unova Hall of Fame.",
    "ribbon.unova_champion.name": "Unova Champion Ribbon",
    "ribbon.unova_champion.title": "%s the Unova Champion",
    "ribbon.kalos_champion.description": "A Ribbon awarded for clearing the Kalos Champion and entering the Kalos Hall of Fame.",
    "ribbon.kalos_champion.name": "Kalos Champion Ribbon",
    "ribbon.kalos_champion.title": "%s the Kalos Champion",
    "ribbon.alola_champion.description": "A Ribbon awarded for clearing the Alola Champion and entering the Alola Hall of Fame.",
    "ribbon.alola_champion.name": "Alola Champion Ribbon",
    "ribbon.alola_champion.title": "%s the Alola Champion",
    "ribbon.galar_champion.description": "A Ribbon awarded for clearing the Galar Champion and entering the Galar Hall of Fame.",
    "ribbon.galar_champion.name": "Galar Champion Ribbon",
    "ribbon.galar_champion.title": "%s the Galar Champion",

    "ribbon.skillful_battler.description": "A Ribbon that can be given to a Pokémon that has achieved victory in difficult battles.",
    "ribbon.skillful_battler.name": "Skillful Battler Ribbon",
    "ribbon.skillful_battler.title": "%s the Veteran",
    "ribbon.expert_battler.description": "A Ribbon that can be given to a brave Pokémon that has honed its battle skills to an art.",
    "ribbon.expert_battler.name": "Expert Battler Ribbon",
    "ribbon.expert_battler.title": "%s the Master",
    "ribbon.battle_tree_great.description": "A Ribbon awarded for winning against a Battle Legend in the Battle Tree.",
    "ribbon.battle_tree_great.name": "Battle Tree Great Ribbon",
    "ribbon.battle_tree_great.title": "%s the Tree Victor",
    "ribbon.battle_tree_master.description": "A Ribbon awarded for winning against a Battle Legend in super battles in the Battle Tree.",
    "ribbon.battle_tree_master.name": "Battle Tree Master Ribbon",
    "ribbon.battle_tree_master.title": "%s the Tree Master",
    "ribbon.tower_master.description": "A Ribbon awarded for winning against a champion in the Battle Tower.",
    "ribbon.tower_master.name": "Tower Master Ribbon",
    "ribbon.tower_master.title": "%s the Tower Master",

    "ribbon.artist.description": "A Ribbon awarded for being chosen as a super sketch model.",
    "ribbon.artist.name": "Artist Ribbon",
    "ribbon.artist.title": "%s the Model for Paintings",
    "ribbon.effort.description": "A Ribbon awarded for being an exceptionally hard worker.",
    "ribbon.effort.name": "Effort Ribbon",
    "ribbon.effort.title": "%s the Once Well-Trained",
    "ribbon.alert.description": "A Ribbon for recalling an invigorating event that created life energy.",
    "ribbon.alert.name": "Alert Ribbon",
    "ribbon.alert.title": "%s the Once Vigilant",
    "ribbon.shock.description": "A Ribbon for recalling a thrilling event that made life more exciting.",
    "ribbon.shock.name": "Shock Ribbon",
    "ribbon.shock.title": "%s the Once Cowardly",
    "ribbon.downcast.description": "A Ribbon for recalling feelings of sadness that added spice to life.",
    "ribbon.downcast.name": "Downcast Ribbon",
    "ribbon.downcast.title": "%s the Once Shaken",
    "ribbon.careless.description": "A Ribbon for recalling a careless error that helped steer life decisions.",
    "ribbon.careless.name": "Careless Ribbon",
    "ribbon.careless.title": "%s the Once Imperfect",
    "ribbon.relax.description": "A Ribbon for recalling a refreshing event that added sparkle to life.",
    "ribbon.relax.name": "Relax Ribbon",
    "ribbon.relax.title": "%s the Once Well-Rested",
    "ribbon.snooze.description": "A Ribbon for recalling a deep slumber that made life soothing.",
    "ribbon.snooze.name": "Snooze Ribbon",
    "ribbon.snooze.title": "%s the Once Sleepy",
    "ribbon.smile.description": "A Ribbon for recalling that smiles enrich the quality of life.",
    "ribbon.smile.name": "Smile Ribbon",
    "ribbon.smile.title": "%s the Once Cheery",
    "ribbon.gorgeous.description": "An extraordinarily gorgeous and extravagant Ribbon.",
    "ribbon.gorgeous.name": "Gorgeous Ribbon",
    "ribbon.gorgeous.title": "%s the Gorgeous",
    "ribbon.royal.description": "An incredibly regal Ribbon with an air of nobility.",
    "ribbon.royal.name": "Royal Ribbon",
    "ribbon.royal.title": "%s the Royal",
    "ribbon.gorgeous_royal.description": "A gorgeous and regal Ribbon that is the peak of fabulous.",
    "ribbon.gorgeous_royal.name": "Gorgeous Royal Ribbon",
    "ribbon.gorgeous_royal.title": "%s the Gorgeous Royal",
    "ribbon.footprint.description": "A Ribbon awarded to a Pokémon deemed to have a top-quality footprint.",
    "ribbon.footprint.name": "Footprint Ribbon",
    "ribbon.footprint.title": "%s the Strutter",
    "ribbon.record.description": "A Ribbon awarded for setting an incredible record.",
    "ribbon.record.name": "Record Ribbon",
    "ribbon.record.title": "%s the Record Holder",
    "ribbon.legend.description": "A Ribbon for setting a legendary record.",
    "ribbon.legend.name": "Legend Ribbon",
    "ribbon.legend.title": "%s the Living Legend",
    "ribbon.best_friends.description": "A Ribbon that can be given to a Pokémon with which you have a close and meaningful bond.",
    "ribbon.best_friends.name": "Best Friends Ribbon",
    "ribbon.best_friends.title": "%s the Great Friend",
    "ribbon.training.description": "A Ribbon that can be given to a Pokémon that has overcome rigorous trials and training.",
    "ribbon.training.name": "Training Ribbon",
    "ribbon.training.title": "%s the Tried and True",
    "ribbon.battle_royal_master.description": "A Ribbon that can be given to a Pokémon that has achieved victory in the Battle Royal.",
    "ribbon.battle_royal_master.name": "Battle Royal Master Ribbon",
    "ribbon.battle_royal_master.title": "%s the Royal Master",
    "ribbon.master_rank.description": "A Ribbon awarded for winning against a Trainer in the Master Ball Tier of Ranked Battles.",
    "ribbon.master_rank.name": "Master Rank Ribbon",
    "ribbon.master_rank.title": "%s the Rank Master",
    "ribbon.country.description": "A Ribbon awarded to a Pokémon League Champion.",
    "ribbon.country.name": "Country Ribbon.",
    "ribbon.country.title": "%s the Victor",
    "ribbon.national.description": "A Ribbon awarded for overcoming all difficult challenges.",
    "ribbon.national.name": "National Ribbon",
    "ribbon.national.title": "%s the Triumphant",
    "ribbon.earth.description": "A Ribbon awarded for winning one hundred battles in a row.",
    "ribbon.earth.name": "Earth Ribbon",
    "ribbon.earth.title": "%s the 100x Victorious",
    "ribbon.world.description": "A Ribbon awarded to a Pokémon League Champion.",
    "ribbon.world.name": "World Ribbon",
    "ribbon.world.title": "%s the World Conqueror",
    "ribbon.battle_champion.description": "A Ribbon awarded to a Battle Competition Champion.",
    "ribbon.battle_champion.name": "Battle Champion Ribbon",
    "ribbon.battle_champion.title": "%s the Battle Champion",
    "ribbon.regional_champion.description": "A Ribbon awarded to a Regional Champion in the Pokémon World Championships.",
    "ribbon.regional_champion.name": "Regional Champion Ribbon",
    "ribbon.regional_champion.title": "%s the Regional Champion",
    "ribbon.national_champion.description": "A Ribbon awarded to a National Champion in the Pokémon World Championships.",
    "ribbon.national_champion.name": "National Champion Ribbon",
    "ribbon.national_champion.title": "%s the National Champion",
    "ribbon.world_champion.description": "A Ribbon awarded to a World Champion in the Pokémon World Championships.",
    "ribbon.world_champion.name": "World Champion Ribbon",
    "ribbon.world_champion.title": "%s the World Champion",
    "ribbon.classic.description": "A Ribbon that proclaims love for Pokémon",
    "ribbon.classic.name": "Classic Ribbon",
    "ribbon.classic.title": "%s the Pokémon Fan",
    "ribbon.premier.description": "A Ribbon awarded for a suprise holiday.",
    "ribbon.premier.name": "Premier Ribbon",
    "ribbon.premier.title": "%s the Celebratory",
    "ribbon.event.description": "A Ribbon awarded for participating in a special Pokémon event.",
    "ribbon.event.name": "Event Ribbon",
    "ribbon.event.title": "%s the Festive",
    "ribbon.birthday.description": "A Ribbon that commemorates a birthday.",
    "ribbon.birthday.name": "Birthday Ribbon",
    "ribbon.birthday.title": "%s the Best Buddy",
    "ribbon.special.description": "A special Ribbon for a special day.",
    "ribbon.special.name": "Special Ribbon",
    "ribbon.special.title": "%s the Premium",
    "ribbon.souvenir.description": "A Ribbon for cherishing a special memory.",
    "ribbon.souvenir.name": "Souvenir Ribbon",
    "ribbon.souvenir.title": "%s the Cherished",
    "ribbon.wishing.description": "A Ribbon said to make your wish come true.",
    "ribbon.wishing.name": "Wishing Ribbon",
    "ribbon.wishing.title": "%s the Wish Granter",

    "ribbon.absent_minded.description": "A mark for a spacey Pokémon.",
    "ribbon.absent_minded.name": "Absent-Minded Mark",
    "ribbon.absent_minded.title": "%s the Spacey",
    "ribbon.angry.description": "A mark for a furious Pokémon.",
    "ribbon.angry.name": "Angry Mark",
    "ribbon.angry.title": "%s the Furious",
    "ribbon.blizzard.description": "A mark for a shivering Pokémon.",
    "ribbon.blizzard.name": "Blizzard Mark",
    "ribbon.blizzard.title": "%s the Shivering",
    "ribbon.calmness.description": "A mark for a serene Pokémon.",
    "ribbon.calmness.name": "Calmness Mark",
    "ribbon.calmness.title": "%s the Serene",
    "ribbon.charismatic.description": "A mark for a radient Pokémon.",
    "ribbon.charismatic.name": "Charismatic Mark",
    "ribbon.charismatic.title": "%s the Radient",
    "ribbon.cloudy.description": "A mark for a cloud-watching Pokémon.",
    "ribbon.cloudy.name": "Cloudy Mark",
    "ribbon.cloudy.title": "%s the Cloud Watcher",
    "ribbon.crafty.description": "A mark for a opportunistic Pokémon.",
    "ribbon.crafty.name": "Crafty Mark",
    "ribbon.crafty.title": "%s the Opportunist",
    "ribbon.curry.description": "A mark fpr a curry-connoiseur Pokémon.",
    "ribbon.curry.name": "Curry Mark",
    "ribbon.curry.title": "%s the Curry Connoisseur",
    "ribbon.dawn.description": "A mark for an early-riser Pokémon.",
    "ribbon.dawn.name": "Dawn Mark",
    "ribbon.dawn.title": "%s the Early Riser",
    "ribbon.destiny.description": "A mark of a chosen Pokémon.",
    "ribbon.destiny.name": "Destiny Mark",
    "ribbon.destiny.title": "%s the Chosen One",
    "ribbon.dry.description": "A mark for a parched Pokémon.",
    "ribbon.dry.name": "Dry Mark",
    "ribbon.dry.title": "%s the Parched",
    "ribbon.dusk.description": "A mark for a dozy Pokémon.",
    "ribbon.dusk.name": "Dusk Mark",
    "ribbon.dusk.title": "%s the Dozy",
    "ribbon.excited.description": "A mark for a giddy Pokémon.",
    "ribbon.excited.name": "Excited Mark",
    "ribbon.excited.title": "%s the Giddy",
    "ribbon.ferocious.description": "A mark for a rampaging Pokémon.",
    "ribbon.ferocious.name": "Ferocious Mark",
    "ribbon.ferocious.title": "%s the Rampaging",
    "ribbon.fishing.description": "A mark for a catch-of-the-day Pokémon.",
    "ribbon.fishing.name": "Fishing Mark",
    "ribbon.fishing.title": "%s the Catch of the Day",
    "ribbon.flustered.description": "A mark for an easily flustered Pokémon.",
    "ribbon.flustered.name": "Flustered Mark",
    "ribbon.flustered.title": "%s the Easily Flustered",
    "ribbon.humble.description": "A mark for a humble Pokémon.",
    "ribbon.humble.name": "Humble Mark",
    "ribbon.humble.title": "%s the Humble",
    "ribbon.intellectual.description": "A mark for a scholarly Pokémon.",
    "ribbon.intellectual.name": "Intellectual Mark",
    "ribbon.intellectual.title": "%s the Scholar",
    "ribbon.intense.description": "A mark for a feisty Pokémon.",
    "ribbon.intense.name": "Intense Mark",
    "ribbon.intense.title": "%s the Feisty",
    "ribbon.jittery.description": "A mark for an anxious Pokémon.",
    "ribbon.jittery.name": "Jittery Mark",
    "ribbon.jittery.title": "%s the Anxious",
    "ribbon.joyful.description": "A mark for a joyful Pokémon.",
    "ribbon.joyful.name": "Joyful Mark",
    "ribbon.joyful.title": "%s the Joyful",
    "ribbon.kindly.description": "A mark for a Kindhearted Pokémon.",
    "ribbon.kindly.name": "Kindly Mark",
    "ribbon.kindly.title": "%s the Kindhearted",
    "ribbon.lunchtime.description": "A mark for a peckish Pokémon.",
    "ribbon.lunchtime.name": "Lunchtime Mark",
    "ribbon.lunchtime.title": "%s the Peckish",
    "ribbon.misty.description": "A mark for a mist-drifter Pokémon.",
    "ribbon.misty.name": "Misty Mark",
    "ribbon.misty.title": "%s the Mist Drifter",
    "ribbon.peeved.description": "A mark for a grumpy Pokémon.",
    "ribbon.peeved.name": "Peeved Mark",
    "ribbon.peeved.title": "%s the Grumpy",
    "ribbon.prideful.description": "A mark for an arrogant Pokémon.",
    "ribbon.prideful.name": "Prideful Mark",
    "ribbon.prideful.title": "%s the Arrogant",
    "ribbon.pumped_up.description": "A mark for a driven Pokémon.",
    "ribbon.pumped_up.name": "Pumped-Up Mark",
    "ribbon.pumped_up.title": "%s the Driven",
    "ribbon.rainy.description": "A mark for a sodden Pokémon.",
    "ribbon.rainy.name": "Rainy Mark",
    "ribbon.rainy.title": "%s the Sodden",
    "ribbon.rare.description": "A mark for a reclusive Pokémon.",
    "ribbon.rare.name": "Rare Mark",
    "ribbon.rare.title": "%s the Recluse",
    "ribbon.rowdy.description": "A mark for a rowdy Pokémon.",
    "ribbon.rowdy.name": "Rowdy Mark",
    "ribbon.rowdy.title": "%s the Rowdy",
    "ribbon.sandstorm.description": "A mark for a sandswept Pokémon.",
    "ribbon.sandstorm.name": "Sandswept Mark",
    "ribbon.sandstorm.title": "%s the Sandswept",
    "ribbon.scowling.description": "A mark for a stern Pokémon.",
    "ribbon.scowling.name": "Scowling Mark",
    "ribbon.scowling.title": "%s the Stern",
    "ribbon.sleepy_time.description": "A mark for a sleepy Pokémon.",
    "ribbon.sleepy_time.name": "Sleepy-Time Mark",
    "ribbon.sleepy_time.title": "%s the Sleepy",
    "ribbon.slump.description": "A mark for a worn-Out Pokémon.",
    "ribbon.slump.name": "Slump Mark",
    "ribbon.slump.title": "%s the Worn-Out",
    "ribbon.smiley.description": "A mark for a beaming Pokémon.",
    "ribbon.smiley.name": "Smiley Mark",
    "ribbon.smiley.title": "%s the Beaming",
    "ribbon.snowy.description": "A mark for a snow-frollicking Pokémon.",
    "ribbon.snowy.name": "Snowy Mark",
    "ribbon.snowy.title": "%s the Snow Frolicker",
    "ribbon.stormy.description": "A mark for a thunderstruck Pokémon.",
    "ribbon.stormy.name": "Stormy Mark",
    "ribbon.stormy.title": "%s the Thunderstruck",
    "ribbon.teary.description": "A mark for a teary-eyed Pokémon.",
    "ribbon.teary.name": "Teary Mark",
    "ribbon.teary.title": "%s the Teary-Eyed",
    "ribbon.thorny.description": "A mark for a pompous Pokémon.",
    "ribbon.thorny.name": "Thorny Mark",
    "ribbon.thorny.title": "%s the Pompous",
    "ribbon.uncommon.description": "A mark for a socialable Pokémon.",
    "ribbon.uncommon.name": "Uncommon Mark",
    "ribbon.uncommon.title": "%s the Sociable",
    "ribbon.unsure.description": "A mark for a reluctant Pokémon.",
    "ribbon.unsure.name": "Unsure Mark",
    "ribbon.unsure.title": "%s the Reluctant",
    "ribbon.upbeat.description": "A mark for a chipper Pokémon.",
    "ribbon.upbeat.name": "Upbeat Mark",
    "ribbon.upbeat.title": "%s the Chipper",
    "ribbon.vigor.description": "A mark for a lively Pokémon.",
    "ribbon.vigor.name": "Vigor Mark",
    "ribbon.vigor.title": "%s the Lively",
    "ribbon.zero_energy.description": "A mark for an apathetic Pokémon.",
    "ribbon.zero_energy.name": "Zero-Energy Mark",
    "ribbon.zero_energy.title": "%s the Apathetic",
    "ribbon.zoned_out.description": "A mark for a daydreaming Pokémon.",
    "ribbon.zoned_out.name": "Zoned-Out Mark",
    "ribbon.zoned_out.title": "%s the Daydreamer",
    "ribbon.day_care.name": "The Caring Ribbon",
    "ribbon.day_care.title": "%s, The Caring",
    "ribbon.day_care.description": "A ribbon for a Pokémon created using Isi's Diamond Hourglass",

    "ribbon.waterdude.description": "A mark for encountering Waterdude.",
    "ribbon.waterdude.name": "Aqueous Mark",
    "ribbon.waterdude.title": "%s the Aqueous One",
    "ribbon.oa10712.description": "A mark for encountering Oa10712.",
    "ribbon.oa10712.name": "Assorted Mark",
    "ribbon.oa10712.title": "%s the Scattered",
    "ribbon.jay113355.description": "A mark for encountering Jay113355.",
    "ribbon.jay113355.name": "Adventurer's Mark",
    "ribbon.jay113355.title": "%s the Adventurer",
    "ribbon.ras.description": "A mark for encountering Rasgnarok.",
    "ribbon.ras.name": "Ras' Mark",
    "ribbon.ras.title": "%s, Mother of Pixelmon",
    "ribbon.isi.description": "A mark for encountering Isi.",
    "ribbon.isi.name": "Mark of Isi",
    "ribbon.isi.title": "%s, the Legend",
    "ribbon.ribchop.description": "A mark for encountering Ribchop",
    "ribbon.ribchop.name": "Mark of Ribchop",
    "ribbon.ribchop.title": "%s, the Shiba",
    "ribbon.daniel_n.description": "A mark for encountering Envyful",
    "ribbon.daniel_n.name": "Mark of Envyful",
    "ribbon.daniel_n.title": "%s, the Beef Lord",
    "ribbon.asa.description": "A mark for encountering Asa.",
    "ribbon.asa.name": "Asa's Mark",
    "ribbon.asa.title": "%s, the Beginner",
    "ribbon.wop.description": "A mark for encountering wop0911.",
    "ribbon.wop.name": "wop0911's Mark",
    "ribbon.wop.title": "%s, the Spawned",
    "ribbon.hacko.description": "A mark for encountering HackoJacko.",
    "ribbon.hacko.name": "Brony Mark",
    "ribbon.hacko.title": "%s, the Brony",

    "advancements.ball_capture.title": "Well, it’s One for the Money",
    "advancements.ball_capture.description": "Catch a Pokémon with a Pokéball.",
    "advancements.premier_ball_capture.title": "Two for the Show",
    "advancements.premier_ball_capture.description": "Catch a Pokémon with a Premier Ball.",
    "advancements.great_ball_capture.title": "Three to get Ready",
    "advancements.great_ball_capture.description": "Catch a Pokémon with a Great Ball.",
    "advancements.ultra_ball_capture.title": "Now go, cat, go!",
    "advancements.ultra_ball_capture.description": "Catch a Pokémon with a Ultra Ball.",
    "advancements.master_ball_capture.title": "Not getting away this time!",
    "advancements.master_ball_capture.description": "Catch a Pokémon with a Master Ball.",
    "advancements.cherish_ball_capture.title": "For the ones you love",
    "advancements.cherish_ball_capture.description": "Catch a Pokémon with a Cherish Ball.",
    "advancements.dive_ball_capture.title": "Into the Deep",
    "advancements.dive_ball_capture.description": "Catch a Pokémon with a Dive Ball.",
    "advancements.dusk_ball_capture.title": "Catch the Night",
    "advancements.dusk_ball_capture.description": "Catch a Pokémon with a Dusk Ball.",
    "advancements.fast_ball_capture.title": "Struck Out",
    "advancements.fast_ball_capture.description": "Catch a Pokémon with a Fast Ball.",
    "advancements.friend_ball_capture.title": "Friend Zoned",
    "advancements.friend_ball_capture.description": "Catch a Pokémon with a Friend Ball.",
    "advancements.gs_ball_capture.title": "The Great Smith",
    "advancements.gs_ball_capture.description": "Catch a Pokémon with a GS Ball.",
    "advancements.heal_ball_capture.title": "Nurse Joy approved",
    "advancements.heal_ball_capture.description": "Catch a Pokémon with a Heal Ball.",
    "advancements.heavy_ball_capture.title": "Weightlifter",
    "advancements.heavy_ball_capture.description": "Catch a Pokémon with a Heavy Ball.",
    "advancements.level_ball_capture.title": "Get in the ball little one!",
    "advancements.level_ball_capture.description": "Catch a Pokémon with a Level Ball.",
    "advancements.love_ball_capture.title": "Match Maker",
    "advancements.love_ball_capture.description": "Catch a Pokémon with a Love Ball.",
    "advancements.lure_ball_capture.title": "Bait taken",
    "advancements.lure_ball_capture.description": "Catch a Pokémon with a Lure Ball.",
    "advancements.luxury_ball_capture.title": "When a normal Pokéball just won't do",
    "advancements.luxury_ball_capture.description": "Catch a Pokémon with a Luxury Ball.",
    "advancements.moon_ball_capture.title": "To the Moon Alice!",
    "advancements.moon_ball_capture.description": "Catch a Pokémon with a Moon Ball.",
    "advancements.nest_ball_capture.title": "Give it a good home",
    "advancements.nest_ball_capture.description": "Catch a Pokémon with a Nest Ball.",
    "advancements.net_ball_capture.title": "Catch of the day",
    "advancements.net_ball_capture.description": "Catch a Pokémon with a Net Ball.",
    "advancements.park_ball_capture.title": "Cheater!",
    "advancements.park_ball_capture.description": "Catch a Pokémon with a Park Ball.",
    "advancements.quick_ball_capture.title": "Round one knock out",
    "advancements.quick_ball_capture.description": "Catch a Pokémon with a Quick Ball.",
    "advancements.repeat_ball_capture.title": "Got it! Got it! Got it! Got it!",
    "advancements.repeat_ball_capture.description": "Catch a Pokémon with a Repeat Ball.",
    "advancements.safari_ball_capture.title": "The Steve Irwin of Pokéballs",
    "advancements.safari_ball_capture.description": "Catch a Pokémon with a Safari Ball.",
    "advancements.sport_ball_capture.title": "Gooooooooooooooooal!",
    "advancements.sport_ball_capture.description": "Catch a Pokémon with a Sport Ball.",
    "advancements.timer_ball_capture.title": "Set it for 2 minutes",
    "advancements.timer_ball_capture.description": "Catch a Pokémon with a Timer Ball.",

    "advancements.pokedex.title": "You picked a starter!",
    "advancements.pokedex.description": "Pick a starter.",
    "advancements.pokedex_10.title": "One out of ten isn’t bad right?",
    "advancements.pokedex_10.description": "Fill 10%% of the Pokedex.",
    "advancements.pokedex_25.title": "Climbing the ranks",
    "advancements.pokedex_25.description": "Fill 25%% of the Pokedex.",
    "advancements.pokedex_50.title": "Halfway there!",
    "advancements.pokedex_50.description": "Fill 50%% of the Pokedex.",
    "advancements.pokedex_75.title": "Collector Extraordinaire",
    "advancements.pokedex_75.description": "Fill 75%% of the Pokedex.",
    "advancements.pokedex_100.title": "Pokémon Master",
    "advancements.pokedex_100.description": "Fill 100%% of the Pokedex.",

    "advancements.legendary_capture.title": "Legend… wait for it… dary!!!",
    "advancements.legendary_capture.description": "Catch a Legendary Pokémon.",
    "advancements.articuno_capture.title": "Frozen Chicken Dinner",
    "advancements.articuno_capture.description": "Catch Articuno.",
    "advancements.zapdos_capture.title": "Electric Chicken? Is that a dance?",
    "advancements.zapdos_capture.description": "Catch Zapdos.",
    "advancements.moltres_capture.title": "Extra Crispy Chicken",
    "advancements.moltres_capture.description": "Catch Moltres.",
    "advancements.mewtwo_capture.title": "Behold my powers!",
    "advancements.mewtwo_capture.description": "Catch Mewtwo.",
    "advancements.mew_capture.title": "Well um technically it’s Mythical…",
    "advancements.mew_capture.description": "Catch Mew.",
    "advancements.raikou_capture.title": "Thunder! Thunder! Thunder… no wait wrong",
    "advancements.raikou_capture.description": "Catch Raikou.",
    "advancements.entei_capture.title": "Fire beast",
    "advancements.entei_capture.description": "Catch Entei.",
    "advancements.suicune_capture.title": "Water Beast",
    "advancements.suicune_capture.description": "Catch Suicune.",
    "advancements.lugia_capture.title": "Aww it’s not XD001",
    "advancements.lugia_capture.description": "Catch Lugia.",
    "advancements.ho-oh_capture.title": "Resurrecting Rainbow",
    "advancements.ho-oh_capture.description": "Catch Ho-Oh.",
    "advancements.celebi_capture.title": "Let me tell you about the birds and the bees and the flowers and the trees",
    "advancements.celebi_capture.description": "Catch Celebi.",
    "advancements.regirock_capture.title": "Rock!",
    "advancements.regirock_capture.description": "Catch Regirock.",
    "advancements.regice_capture.title": "Ice!",
    "advancements.regice_capture.description": "Catch Regice.",
    "advancements.registeel_capture.title": "Steel!",
    "advancements.registeel_capture.description": "Catch Registeel.",
    "advancements.latias_capture.title": "Blast off!",
    "advancements.latias_capture.description": "Catch Latias.",
    "advancements.latios_capture.title": "At the speed of light!",
    "advancements.latios_capture.description": "Catch Latios.",
    "advancements.kyogre_capture.title": "Wave crasher!",
    "advancements.kyogre_capture.description": "Catch Kyogre.",
    "advancements.groudon_capture.title": "Ground smasher!",
    "advancements.groudon_capture.description": "Catch Groudon.",
    "advancements.rayquaza_capture.title": "Wind rider!",
    "advancements.rayquaza_capture.description": "Catch Rayquaza.",
    "advancements.jirachi_capture.title": "Wish upon a Star",
    "advancements.jirachi_capture.description": "Catch Jirachi.",
    "advancements.deoxys_capture.title": "Wacky Waving Inflatable Arm Flailing Tube Man",
    "advancements.deoxys_capture.description": "Catch Deoxys",

    "advancements.shiny_spec.title": "Oooh, shiny!",
    "advancements.shiny_spec.description": "Catch a Shiny Pokémon.",
    "advancements.feebas_karp.title": "Wait, that's not right...",
    "advancements.feebas_karp.description": "Catch a disguised Feebas.",
    "advancements.spec.title": "A Pokémon of a different color.",
    "advancements.spec.description": "Catch a non-standard form of a Pokémon.",
    "advancements.strike.title": "It was a stormy night...",
    "advancements.strike.description": "Capture a Strike form Pokémon.",
    "advancements.alter.title": "Tainted Grail",
    "advancements.alter.description": "Capture an Alter form Pokémon.",
    "advancements.summer.title": "Don't forget the sunscreen",
    "advancements.summer.description": "Capture a Summer form Pokémon",
    "advancements.pink.title": "Pretty in pink",
    "advancements.pink.description": "Capture a Pink form Pokémon.",
    "advancements.valencian.title": "From the Orange Isles",
    "advancements.valencian.description": "Capture a Valencian form Pokémon.",
    "advancements.drowned.title": "Underwater for a bit too long...",
    "advancements.drowned.description": "Capture a Drowned form Pokémon.",
    "advancements.rainbow.title": "ALL THE COLORS!",
    "advancements.rainbow.description": "Capture a Rainbow form Pokémon.",
    "advancements.valentine.title": "Will you be mine?",
    "advancements.valentine.description": "Capture a Valentines Day form Pokémon.",
    "advancements.zombie.title": "Trick or Treat!",
    "advancements.zombie.description": "Capture a Halloween form Pokémon.",
    "advancements.magikarp_jump.title": "Magikarp JUMP!",
    "advancements.magikarp_jump.description": "Capture a special Magikarp.",
    "advancements.magikarp_jump_all.title": "Ultimate Completionist",
    "advancements.magikarp_jump_all.description": "Capture all special Magikarp forms.",
    "advancements.shellos_jump.title": "Shellos JUMP!",
    "advancements.shellos_jump.description": "Capture a special Shellos.",
    "advancements.shellos_jump_all.title": "From Coast to Coast",
    "advancements.shellos_jump_all.description": "Capture all special Shellos forms.",
    "advancements.clobbopus_jump.title": "Clobbopus JUMP!",
    "advancements.clobbopus_jump.description": "Capture a special Clobbopus.",
    "advancements.clobbopus_jump_all.title": "Clobberin' Time",
    "advancements.clobbopus_jump_all.description": "Capture all special Clobbopus forms.",
    "advancements.spheal_jump.title": "Spheal JUMP!",
    "advancements.spheal_jump.description": "Capture a special Spheal.",
    "advancements.spheal_jump_all.title": "A Spheal for Every Situation",
    "advancements.spheal_jump_all.description": "Capture all special Spheal forms.",
    "advancements.spiky_pichu.title": "Friendship FTW.",
    "advancements.spiky_pichu.description": "Capture a spiky-eared Pichu.",
    "advancements.crystal_onix.title": "Ooh, Sparkley",
    "advancements.crystal_onix.description": "Capture a Crystal Onix.",
    "advancements.sir_doofus.title": "A Proper Gentleman.",
    "advancements.sir_doofus.description": "Capture Sir Doofus III.",
    "advancements.eeveelution_capture_all.title": "What an Achieveement!",
    "advancements.eeveelution_capture_all.description": "Capture Eevee and all its Eeveelutions.",
    "advancements.unown_capture_all.title": "The Sentient Script",
    "advancements.unown_capture_all.description": "Capture all 28 forms of Unown.",
    "advancements.minior_capture_all.title": "Star Guardian",
    "advancements.minior_capture_all.description": "Capture all 7 colors of Minior.",

    "advancements.capture_type.title": "It's a Mystery!",
    "advancements.capture_type.description": "Catch any Type.",
    "advancements.capture_normal_10.title": "Plain as day",
    "advancements.capture_normal_10.description": "Catch 10 Normal Type Pokémon.",
    "advancements.capture_normal_25.title": "What is normal?",
    "advancements.capture_normal_25.description": "Catch 25 Normal Type Pokémon.",
    "advancements.capture_normal_total.title": "A whole lot of Normal",
    "advancements.capture_normal_total.description": "Catch 114 Normal Type Pokémon.",
    "advancements.capture_fighting_10.title": "First rule of Fight Club",
    "advancements.capture_fighting_10.description": "Catch 10 Fighting Type Pokémon.",
    "advancements.capture_fighting_25.title": "Second rule of Fight Club",
    "advancements.capture_fighting_25.description": "Catch 25 Fighting Type Pokémon.",
    "advancements.capture_fighting_total.title": "His name is Robert Paulson",
    "advancements.capture_fighting_total.description": "Catch 57 Fighting Type Pokémon.",
    "advancements.capture_flying_10.title": "Up up and away!",
    "advancements.capture_flying_10.description": "Catch 10 Flying Type Pokémon.",
    "advancements.capture_flying_25.title": "It's a bird!",
    "advancements.capture_flying_25.description": "Catch 25 Flying Type Pokémon.",
    "advancements.capture_flying_total.title": "It's a plane....nope, still a bird",
    "advancements.capture_flying_total.description": "Catch 104 Flying Type Pokémon.",
    "advancements.capture_poison_10.title": "Go on have a bite",
    "advancements.capture_poison_10.description": "Catch 10 Poison Type Pokémon.",
    "advancements.capture_poison_25.title": "That girl is Poison",
    "advancements.capture_poison_25.description": "Catch 25 Poison Type Pokémon.",
    "advancements.capture_poison_total.title": "Come, bitter poison",
    "advancements.capture_poison_total.description": "Catch 68 Poison Type Pokémon.",
    "advancements.capture_ground_10.title": "Treading new ground",
    "advancements.capture_ground_10.description": "Catch 10 Ground Type Pokémon.",
    "advancements.capture_ground_25.title": "Retreading old ground",
    "advancements.capture_ground_25.description": "Catch 25 Ground Type Pokémon.",
    "advancements.capture_ground_total.title": "Ground Pounding",
    "advancements.capture_ground_total.description": "Catch 68 Ground Type Pokémon.",
    "advancements.capture_rock_10.title": "Rock Bottom",
    "advancements.capture_rock_10.description": "Catch 10 Rock Type Pokémon.",
    "advancements.capture_rock_25.title": "Rock n’ Roll",
    "advancements.capture_rock_25.description": "Catch 25 Rock Type Pokémon.",
    "advancements.capture_rock_total.title": "Rock Crusher",
    "advancements.capture_rock_total.description": "Catch 63 Rock Type Pokémon.",
    "advancements.capture_bug_10.title": "Bug Catcher!",
    "advancements.capture_bug_10.description": "Catch 10 Bug Type Pokémon.",
    "advancements.capture_bug_25.title": "Creepy-Crawly",
    "advancements.capture_bug_25.description": "Catch 25 Bug Type Pokémon.",
    "advancements.capture_bug_total.title": "Entomologist",
    "advancements.capture_bug_total.description": "Catch 80 Bug Type Pokémon.",
    "advancements.capture_ghost_10.title": "If there’s something strange…",
    "advancements.capture_ghost_10.description": "Catch 10 Ghost Type Pokémon.",
    "advancements.capture_ghost_25.title": "In your neighborhood…",
    "advancements.capture_ghost_25.description": "Catch 25 Ghost Type Pokémon.",
    "advancements.capture_ghost_total.title": "Who ya gonna call?",
    "advancements.capture_ghost_total.description": "Catch 46 Ghost Type Pokémon.",
    "advancements.capture_steel_10.title": "Cast Iron",
    "advancements.capture_steel_10.description": "Catch 10 Steel Type Pokémon.",
    "advancements.capture_steel_25.title": "Stainless",
    "advancements.capture_steel_25.description": "Catch 25 Steel Type Pokémon.",
    "advancements.capture_steel_total.title": "Tempered",
    "advancements.capture_steel_total.description": "Catch 54 Steel Type Pokémon.",
    "advancements.capture_fire_10.title": "Out of the Frying Pan",
    "advancements.capture_fire_10.description": "Catch 10 Fire Type Pokémon.",
    "advancements.capture_fire_25.title": "Into the Fire",
    "advancements.capture_fire_25.description": "Catch 25 Fire Type Pokémon.",
    "advancements.capture_fire_total.title": "Hell Hath no Fury",
    "advancements.capture_fire_total.description": "Catch 70 Fire Type Pokémon.",
    "advancements.capture_water_10.title": "Flow like water",
    "advancements.capture_water_10.description": "Catch 10 Water Type Pokémon.",
    "advancements.capture_water_25.title": "Rolling Tide",
    "advancements.capture_water_25.description": "Catch 25 Water Type Pokémon.",
    "advancements.capture_water_total.title": "Raging Rapids",
    "advancements.capture_water_total.description": "Catch 134 Water Type Pokémon.",
    "advancements.capture_grass_10.title": "Cull the Weeds",
    "advancements.capture_grass_10.description": "Catch 10 Grass Type Pokémon.",
    "advancements.capture_grass_25.title": "Plant the Seeds",
    "advancements.capture_grass_25.description": "Catch 25 Grass Type Pokémon.",
    "advancements.capture_grass_total.title": "Feed me Seymour!",
    "advancements.capture_grass_total.description": "Catch 101 Grass Type Pokémon.",
    "advancements.capture_electric_10.title": "The Electric Co.",
    "advancements.capture_electric_10.description": "Catch 10 Electric Type Pokémon.",
    "advancements.capture_electric_25.title": "Electric Boogaloo",
    "advancements.capture_electric_25.description": "Catch 25 Electric Type Pokémon.",
    "advancements.capture_electric_total.title": "Electric Avenue",
    "advancements.capture_electric_total.description": "Catch 95 Electric Type Pokémon.",
    "advancements.capture_psychic_10.title": "Is this your card?",
    "advancements.capture_psychic_10.description": "Catch 10 Psychic Type Pokémon.",
    "advancements.capture_psychic_25.title": "Nothing up my sleeves",
    "advancements.capture_psychic_25.description": "Catch 25 Psychic Type Pokémon.",
    "advancements.capture_psychic_total.title": "There is no spoon",
    "advancements.capture_psychic_total.description": "Catch 90 Psychic Type Pokémon.",
    "advancements.capture_ice_10.title": "Ice to meet you",
    "advancements.capture_ice_10.description": "Catch 10 Ice Type Pokémon.",
    "advancements.capture_ice_25.title": "Ice Ice Baby",
    "advancements.capture_ice_25.description": "Catch 25 Ice Type Pokémon.",
    "advancements.capture_ice_total.title": "You're cold as Ice",
    "advancements.capture_ice_total.description": "Catch 40 Ice Type Pokémon.",
    "advancements.capture_dragon_10.title": "Let sleeping dragons lie",
    "advancements.capture_dragon_10.description": "Catch 10 Dragon Type Pokémon.",
    "advancements.capture_dragon_25.title": "Dragon Slayer",
    "advancements.capture_dragon_25.description": "Catch 25 Dragon Type Pokémon.",
    "advancements.capture_dragon_total.title": "House Targaryen",
    "advancements.capture_dragon_total.description": "Catch 51 Dragon Type Pokémon.",
    "advancements.capture_dark_10.title": "Shot in the Dark",
    "advancements.capture_dark_10.description": "Catch 10 Dark Type Pokémon.",
    "advancements.capture_dark_25.title": "Promises in the Dark",
    "advancements.capture_dark_25.description": "Catch 25 Dark Type Pokémon.",
    "advancements.capture_dark_total.title": "Curse the Darkness",
    "advancements.capture_dark_total.description": "Catch 51 Dark Type Pokémon.",
    "advancements.capture_fairy_10.title": "Once upon a time…",
    "advancements.capture_fairy_10.description": "Catch 10 Fairy Type Pokémon.",
    "advancements.capture_fairy_25.title": "They all lived…",
    "advancements.capture_fairy_25.description": "Catch 25 Fairy Type Pokémon.",
    "advancements.capture_fairy_total.title": "Happily Ever After",
    "advancements.capture_fairy_total.description": "Catch 49 Fairy Type Pokémon.",

    "advancements.wild_battle_victory.title": "Only took me four tries *Fist pump*",
    "advancements.wild_battle_victory.description": "Defeat your first Pokémon in battle.",
    "advancements.wild_battle_victory_50.title": "Nose to the Grindstone",
    "advancements.wild_battle_victory_50.description": "Defeat 50 Pokémon",
    "advancements.wild_battle_victory_1000.title": "Get your grind on!",
    "advancements.wild_battle_victory_1000.description": "Defeat 1000 Pokémon",
    "advancements.wild_battle_victory_5000.title": "Time Flies!",
    "advancements.wild_battle_victory_5000.description": "Defeat 5000 Pokémon",
    "advancements.wild_battle_victory_50000.title": "Are we still counting?",
    "advancements.wild_battle_victory_50000.description": "Defeat 50000 Pokémon",
    "advancements.wild_battle_victory_100000.title": "Oh hey, I guess we were",
    "advancements.wild_battle_victory_100000.description": "Defeat 100000 Pokémon",

    "pixelmon.time.dawn": "Dawn",
    "pixelmon.time.morning": "Morning",
    "pixelmon.time.day": "Day",
    "pixelmon.time.midday": "Midday",
    "pixelmon.time.afternoon": "Afternoon",
    "pixelmon.time.dusk": "Dusk",
    "pixelmon.time.night": "Night",
    "pixelmon.time.midnight": "Midnight",

    "weather.clear": "Clear",
    "weather.rain": "Rain",
    "weather.storm": "Storm",

    "effect.pixelmon.repel": "Repel",
    "pixelmon.type:null": "Type: Null",
    "pixelmon.type:null.description": "A Pokémon weapon developed for a specific mission, it went berserk during an experiment, so it was cryogenically frozen.",
    "pixelmon.command.heal.permissionother": "You don't have permission to heal someone else.",
    "pixelmon.items.azure.fail": "The Azure Flute echoed hollowly...",
    "pixelmon.blocks.plate.fail": "This plate's energy is already present!",
    "pixelmon.blocks.plate.add": "%s plates remain!",
    "pixelmon.items.alreadyhave": "You already have this unlocked!",

    "gui.pokemoneditor.copy": "Copy",
    "gui.pokemoneditor.paste": "Paste",
    "gui.nursejohn": "Doctor John",
    "gui.badgecase.register": "Register",
    "trainer.model.lass": "Short Haired Youngster Girl",
    "key.trainercard": "Open Trainer Card",

    "spawning.collections.default": "One of a group of things",
    "spawning.collections.items": "An item",
    "spawning.collections.pokemon": "A Pokémon",
    "spawning.collections.npc": "An NPC",
    "spawning.attemptlegendaryspawn": "Attempting legendary spawn...",
    "spawning.error.legendaryspawnermissing": "The legendary spawner is missing! This is bad!",
    "spawning.error.nooneisonline": "No one is online!",
    "spawning.checkspawns.timeuntilnextattempt1": "Time until next spawn attempt:",
    "spawning.checkspawns.timeuntilnextattempt2": "%s minutes.",
    "spawning.checkspawns.chanceofspawning": "Spawn chance:",
    "spawning.checkspawns.possiblespawns": "Possible spawns:",
    "spawning.error.mustbeplayer": "You must be a player or specify a player to check these spawns.",
    "spawning.error.notlookingatblock": "%s is not looking at a block.",
    "spawning.error.invalidblock": "Invalid block type.",
    "spawning.error.midairorinvalid": "Specific location is not a valid spawn location.",
    "spawning.error.notfishing": "%s is not currently fishing.",

    "pixelmon.general.error": "An error has occurred.",

    "pokerus.message.informPrefix": "The healer dings at you, and an automated message plays.",
    "pokerus.message.inform1": "Your Pokémon appear to have been infected by Pokérus, a microscopic life-form that we do not know much about just yet.",
    "pokerus.message.inform2": "It spreads quickly, but does not seem to cause any harm.",
    "pokerus.message.inform3": "It has, on occasion, even proven to be beneficial to a Pokémon's growth, though infections seem to be short-lived.",

    "generator.ultra_space": "Ultra Space",
    "generator.ultra_space.info": "No fog, normal gravity. The void kills!",
    "generator.drowned_world": "???",
    "generator.drowned_world.info": "An unlimited ocean with no respite.",

    "pixelmon.lure.expire": "Your lure just expired!",

    "menu.pixelmon": "Pixelmon",
    "menu.discord": "Discord",
    "menu.richpresence": "Rich Presence",
    "menu.richpresence.enable": "Click to enable!",
    "menu.richpresence.starting": "Starting up...",
    "menu.richpresence.disable": "Click to disable",
    "menu.refresh": "Refresh",
    "quest.ui.quests": "Quests",
    "quest.ui.history": "History",
    "quest.ui.track": "Track",
    "quest.ui.hide": "Hide",
    "quest.ui.abandon": "Abandon",
    "quest.ui.abandoncheck": "Sure?",

    "quest.catch_shiny": "All That Glitters",
    "quest.catch_shiny.desc-10": "?NAME? wants you to catch an elusive Shiny Pokémon.",
    "quest.catch_shiny.desc-20": "Now you have caught a Shiny Pokémon, you should go and show ?NAME?!",
    "quest.catch_shiny.desc-x": "You caught a Shiny Pokémon, and were given some Big Nuggets as a reward!",
    "quest.catch_shiny.npcname": "?NAME?",
    "quest.catch_shiny.start": "Can you catch a Shiny Pokémon for me?",
    "quest.catch_shiny.startyes": "Yes, I can!",
    "quest.catch_shiny.startno": "I'm a little busy...",
    "quest.catch_shiny.accepted": "Great, I look forward to hearing back from you!",
    "quest.catch_shiny.rejected": "A pity. Another time, perhaps.",
    "quest.catch_shiny.stage-10-0": "Catch a Shiny Pokémon",
    "quest.catch_shiny.stage-20-0": "Return to ?NAME?",
    "quest.catch_shiny.end": "Thank you for showing me this amazing Shiny! Here, take these!",
    "quest.catch_shiny.goodbye": "Goodbye",

    "quest.catch_15": "Catching Curator: ?SPEC_T?",
    "quest.catch_15.desc-10": "?NAME? wants you to catch a bunch of ?SPEC_T?-type Pokémon.",
    "quest.catch_15.desc-20": "Now you have caught all the ?SPEC_T?-type Pokémon, you should go and show ?NAME?!",
    "quest.catch_15.desc-x": "You caught all the Pokémon, and were given some berries as a reward!",
    "quest.catch_15.npcname": "?NAME?",
    "quest.catch_15.start": "Can you catch 15 ?SPEC_T?-type Pokémon for me?",
    "quest.catch_15.startyes": "Yes, I can!",
    "quest.catch_15.startno": "I'm a little busy...",
    "quest.catch_15.accepted": "Great, let me know once you're done!",
    "quest.catch_15.rejected": "A pity. Another time, perhaps.",
    "quest.catch_15.stage-10-0": "Catch # ?SPEC_T?-type Pokémon",
    "quest.catch_15.stage-20-0": "Return to ?NAME?",
    "quest.catch_15.end": "Thank you for showing me these amazing ?SPEC_T?-types! Here, take these!",
    "quest.catch_15.goodbye": "Goodbye",

    "quest.defeat_5_specific": "Pokédex Filler",
    "quest.defeat_5_specific.desc-10": "?NAME? wants you to defeat a bunch of unique Pokémon.",
    "quest.defeat_5_specific.desc-20": "Now you have defeated all the Pokémon, you should go and tell ?NAME?!",
    "quest.defeat_5_specific.desc-x": "You defeated all the Pokémon, and were given some Rare Candy as a reward!",
    "quest.defeat_5_specific.npcname": "?NAME?",
    "quest.defeat_5_specific.start": "Can you defeat 5 different Pokémon for me?",
    "quest.defeat_5_specific.startyes": "Yes, I can!",
    "quest.defeat_5_specific.startno": "I'm a little busy...",
    "quest.defeat_5_specific.accepted": "Great, I'll write down the Pokémon species for you!",
    "quest.defeat_5_specific.rejected": "A pity. Another time, perhaps.",
    "quest.defeat_5_specific.stage-10-5": "Defeat # ?SPEC_A_S?",
    "quest.defeat_5_specific.stage-10-6": "Defeat # ?SPEC_B_S?",
    "quest.defeat_5_specific.stage-10-7": "Defeat # ?SPEC_C_S?",
    "quest.defeat_5_specific.stage-10-8": "Defeat # ?SPEC_D_S?",
    "quest.defeat_5_specific.stage-10-9": "Defeat # ?SPEC_E_S?",
    "quest.defeat_5_specific.stage-20-0": "Return to ?NAME?",
    "quest.defeat_5_specific.end": "You have a good eye! Here, take these!",
    "quest.defeat_5_specific.goodbye": "Goodbye",

    "quest.defeat_30": "Typographer: ?SPEC_T?",
    "quest.defeat_30.desc-10": "?NAME? wants you to defeat a bunch of ?SPEC_T?-type Pokémon.",
    "quest.defeat_30.desc-20": "Now you have defeated all the ?SPEC_T?-type Pokémon, you should go and tell ?NAME?!",
    "quest.defeat_30.desc-x": "You defeated all the Pokémon, and were given some Gems as a reward!",
    "quest.defeat_30.npcname": "?NAME?",
    "quest.defeat_30.start": "Can you defeat 30 ?SPEC_T?-type Pokémon for me?",
    "quest.defeat_30.startyes": "Yes, I can!",
    "quest.defeat_30.startno": "I'm a little busy...",
    "quest.defeat_30.accepted": "Great, let me know once you're done!",
    "quest.defeat_30.rejected": "A pity. Another time, perhaps.",
    "quest.defeat_30.stage-10-0": "Defeat # ?SPEC_T?-type Pokémon",
    "quest.defeat_30.stage-20-0": "Return to ?NAME?",
    "quest.defeat_30.end": "You have some serious skill! Here, take these!",
    "quest.defeat_30.goodbye": "Goodbye",

    "quest.find_pokeloot": "Another Man's Trash",
    "quest.find_pokeloot.desc-10": "?NAME? wants you find a Poké Loot.",
    "quest.find_pokeloot.desc-20": "Now you have found a Poké Loot, you should go and tell ?NAME?!",
    "quest.find_pokeloot.desc-x": "You found a Poké Loot, and were given some gold as a reward!",
    "quest.find_pokeloot.npcname": "?NAME?",
    "quest.find_pokeloot.start": "Can you locate a Poké Loot for me?",
    "quest.find_pokeloot.startyes": "Yes, I can!",
    "quest.find_pokeloot.startno": "I'm a little busy...",
    "quest.find_pokeloot.accepted": "Great, I look forward to hearing back from you!",
    "quest.find_pokeloot.rejected": "A pity. Another time, perhaps.",
    "quest.find_pokeloot.stage-10-0": "Find a Poké Loot",
    "quest.find_pokeloot.stage-20-0": "Return to ?NAME?",
    "quest.find_pokeloot.end": "Thank you for letting me know! Here, take this!",
    "quest.find_pokeloot.goodbye": "Goodbye",

    "quest.mine_20_diamonds": "A Diamond in the Rough",
    "quest.mine_20_diamonds.desc-10": "?NAME? wants you to mine a bunch of diamonds.",
    "quest.mine_20_diamonds.desc-20": "Now you mined all the diamonds, you should go and show ?NAME?!",
    "quest.mine_20_diamonds.desc-x": "You mined all the diamonds, and were given some extra diamonds as a reward!",
    "quest.mine_20_diamonds.npcname": "?NAME?",
    "quest.mine_20_diamonds.start": "Can you mine 20 diamonds for me?",
    "quest.mine_20_diamonds.startyes": "Yes, I can!",
    "quest.mine_20_diamonds.startno": "I'm a little busy...",
    "quest.mine_20_diamonds.accepted": "Great, I look forward to hearing back from you!",
    "quest.mine_20_diamonds.rejected": "A pity. Another time, perhaps.",
    "quest.mine_20_diamonds.stage-10-0": "Mine # Diamond Ore",
    "quest.mine_20_diamonds.stage-20-0": "Return to ?NAME?",
    "quest.mine_20_diamonds.end": "Thank you for showing me these diamonds! Here, take some more!",
    "quest.mine_20_diamonds.goodbye": "Goodbye",

    "quest.mine_50_redstone": "Redstone Power",
    "quest.mine_50_redstone.desc-10": "?NAME? wants you to mine a bunch of redstone.",
    "quest.mine_50_redstone.desc-20": "Now you mined all the redstone, you should go and show ?NAME?!",
    "quest.mine_50_redstone.desc-x": "You mined all the redstone, and were given some 'yellowstone' as a reward!",
    "quest.mine_50_redstone.npcname": "?NAME?",
    "quest.mine_50_redstone.start": "Can you mine 50 redstone ores for me?",
    "quest.mine_50_redstone.startyes": "Yes, I can!",
    "quest.mine_50_redstone.startno": "I'm a little busy...",
    "quest.mine_50_redstone.accepted": "Great, I look forward to hearing back from you!",
    "quest.mine_50_redstone.rejected": "A pity. Another time, perhaps.",
    "quest.mine_50_redstone.stage-10-0": "Mine # Redstone Ore",
    "quest.mine_50_redstone.stage-20-0": "Return to ?NAME?",
    "quest.mine_50_redstone.end": "Thank you for showing me your redstone! Here, take some yellowstone I found!",
    "quest.mine_50_redstone.goodbye": "Goodbye",

    "quest.pick_apricorns": "Apricorn Avalanche",
    "quest.pick_apricorns.desc-10": "?NAME? wants you harvest a wide selection of apricorns.",
    "quest.pick_apricorns.desc-20": "Now you have harvested all the apricorns, you should go and show ?NAME?!",
    "quest.pick_apricorns.desc-x": "\"You found a lot of apricorns, and were given a gardening kit as a reward!\"",
    "quest.pick_apricorns.npcname": "?NAME?",
    "quest.pick_apricorns.start": "Can you harvest some apricorns for me?",
    "quest.pick_apricorns.startyes": "Yes, I can!",
    "quest.pick_apricorns.startno": "I'm a little busy...",
    "quest.pick_apricorns.accepted": "Great, I look forward to hearing back from you!",
    "quest.pick_apricorns.rejected": "A pity. Another time, perhaps.",
    "quest.pick_apricorns.stage-10-0": "# Red Apricorn",
    "quest.pick_apricorns.stage-10-1": "# Yellow Apricorn",
    "quest.pick_apricorns.stage-10-2": "# Blue Apricorn",
    "quest.pick_apricorns.stage-10-3": "# Green Apricorn",
    "quest.pick_apricorns.stage-10-4": "# Pink Apricorn",
    "quest.pick_apricorns.stage-10-5": "# White Apricorn",
    "quest.pick_apricorns.stage-10-6": "# Black Apricorn",
    "quest.pick_apricorns.stage-20-0": "Return to ?NAME?",
    "quest.pick_apricorns.end": "Thank you for sharing your apricorn growing tips! Here, take these!",
    "quest.pick_apricorns.goodbye": "Goodbye",

    "quest.defeat_250": "Super Effective",
    "quest.defeat_250.desc-10": "?NAME? wants you to defeat a bunch of Pokémon.",
    "quest.defeat_250.desc-20": "Now you have defeated all the Pokémon, you should go and tell ?NAME?!",
    "quest.defeat_250.desc-x": "You defeated all the Pokémon, and were given a rare item as a reward!",
    "quest.defeat_250.npcname": "?NAME?",
    "quest.defeat_250.start": "Can you defeat 250 Pokémon for me?",
    "quest.defeat_250.startyes": "Yes, I can!",
    "quest.defeat_250.startno": "I'm a little busy...",
    "quest.defeat_250.accepted": "Great, let me know once you're done!",
    "quest.defeat_250.rejected": "A pity. Another time, perhaps.",
    "quest.defeat_250.stage-10-0": "Defeat # Pokémon",
    "quest.defeat_250.stage-20-0": "Return to ?NAME?",
    "quest.defeat_250.end": "You have some skill, that's for sure! Here, take this!",
    "quest.defeat_250.goodbye": "Goodbye",

    "quest.find_fortress": "Interplanar Highway",
    "quest.find_fortress.desc-10": "?NAME? wants you to find a fortress.",
    "quest.find_fortress.desc-20": "Now you have found a fortress, you should go and tell ?NAME? all about it!",
    "quest.find_fortress.desc-x": "You found a fortress, and were given a rare golden apple as a reward!",
    "quest.find_fortress.npcname": "?NAME?",
    "quest.find_fortress.start": "Can you find a fortress in the Nether, and tell me about it afterwards?",
    "quest.find_fortress.startyes": "Yes, I can!",
    "quest.find_fortress.startno": "I'm a little busy...",
    "quest.find_fortress.accepted": "Great, I look forward to hearing back from you!",
    "quest.find_fortress.rejected": "A pity. Another time, perhaps.",
    "quest.find_fortress.stage-10-0": "Find a Fortress",
    "quest.find_fortress.stage-20-0": "Return to ?NAME?",
    "quest.find_fortress.end": "Thank you for telling me all about it! Here, take this!",
    "quest.find_fortress.goodbye": "Goodbye",

    "quest.find_pyramid": "Temple Run",
    "quest.find_pyramid.desc-10": "?NAME? wants you to find a temple.",
    "quest.find_pyramid.desc-20": "Now you have found a temple, you should go and tell ?NAME? all about it!",
    "quest.find_pyramid.desc-x": "You found a temple, and were given some glowing rods as a reward!",
    "quest.find_pyramid.npcname": "?NAME?",
    "quest.find_pyramid.start": "Can you find a temple, and tell me about it afterwards?",
    "quest.find_pyramid.startyes": "Yes, I can!",
    "quest.find_pyramid.startno": "I'm a little busy...",
    "quest.find_pyramid.accepted": "Great, I look forward to hearing back from you!",
    "quest.find_pyramid.rejected": "A pity. Another time, perhaps.",
    "quest.find_pyramid.stage-10-0": "Find a Temple",
    "quest.find_pyramid.stage-20-0": "Return to ?NAME?",
    "quest.find_pyramid.end": "Thank you for telling me all about it! Here, take this!",
    "quest.find_pyramid.goodbye": "Goodbye",

    "quest.find_stronghold": "Eye of the Beholder",
    "quest.find_stronghold.desc-10": "?NAME? wants you to find the stronghold, and they have given you an Eye of Ender to aid in this.",
    "quest.find_stronghold.desc-20": "Now you have found the stronghold, you should go and tell ?NAME? all about it!",
    "quest.find_stronghold.desc-x": "You found the stronghold, and were given an egg belonging to an alien creature as a reward!",
    "quest.find_stronghold.npcname": "?NAME?",
    "quest.find_stronghold.start": "Can you find the legendary stronghold, and tell me about it afterwards?",
    "quest.find_stronghold.startyes": "Yes, I can!",
    "quest.find_stronghold.startno": "I'm a little busy...",
    "quest.find_stronghold.accepted": "Great, I look forward to hearing back from you!",
    "quest.find_stronghold.rejected": "A pity. Another time, perhaps.",
    "quest.find_stronghold.stage-10-0": "Find the Stronghold",
    "quest.find_stronghold.stage-20-0": "Return to ?NAME?",
    "quest.find_stronghold.end": "Thank you for telling me all about it! Here, take this, I'm not sure what it is though!",
    "quest.find_stronghold.goodbye": "Goodbye",

    "quest.visit_end": "The End?",
    "quest.visit_end.desc-10": "?NAME? wants you to travel to the End.",
    "quest.visit_end.desc-20": "Now you have visited the End, you should go and tell ?NAME? all about it!",
    "quest.visit_end.desc-x": "You visited the End, and were given the means to explore it more freely as a reward!",
    "quest.visit_end.npcname": "?NAME?",
    "quest.visit_end.start": "Can you visit the End and tell me about it afterwards?",
    "quest.visit_end.startyes": "Yes, I can!",
    "quest.visit_end.startno": "I'm a little busy...",
    "quest.visit_end.accepted": "Great, I look forward to hearing back from you!",
    "quest.visit_end.rejected": "A pity. Another time, perhaps.",
    "quest.visit_end.stage-10-0": "Visit the End",
    "quest.visit_end.stage-20-0": "Return to ?NAME?",
    "quest.visit_end.end": "Thank you for your tales! Here, take these!",
    "quest.visit_end.goodbye": "Goodbye",

    "quest.visit_nether": "We Need to Go Deeper",
    "quest.visit_nether.desc-10": "?NAME? wants you to travel to the Nether.",
    "quest.visit_nether.desc-20": "Now you have visited the Nether, you should go and tell ?NAME? all about it!",
    "quest.visit_nether.desc-x": "You visited the Nether, and were given the materials for another portal as a reward!",
    "quest.visit_nether.npcname": "?NAME?",
    "quest.visit_nether.start": "Can you visit the Nether and tell me about it afterwards?",
    "quest.visit_nether.startyes": "Yes, I can!",
    "quest.visit_nether.startno": "I'm a little busy...",
    "quest.visit_nether.accepted": "Great, I look forward to hearing back from you!",
    "quest.visit_nether.rejected": "A pity. Another time, perhaps.",
    "quest.visit_nether.stage-10-0": "Visit the Nether",
    "quest.visit_nether.stage-20-0": "Return to ?NAME?",
    "quest.visit_nether.end": "Thank you for your tales! Here, take these!",
    "quest.visit_nether.goodbye": "Goodbye",

    "quest.visit_ultra_space": "Interstellar",
    "quest.visit_ultra_space.desc-10": "Ultra Recon Agent ?NAME? wants you to travel to Ultra Space.",
    "quest.visit_ultra_space.desc-20": "Now you have visited Ultra Space, you should go and tell Ultra Recon Agent ?NAME? all about it!",
    "quest.visit_ultra_space.desc-x": "You visited Ultra Space, and were given the means to befriend the unusual denizens of the dimension as a reward!",
    "quest.visit_ultra_space.npcname": "Ultra Recon Agent ?NAME?",
    "quest.visit_ultra_space.start": "Can you visit Ultra Space and divulge information to me about it afterwards?",
    "quest.visit_ultra_space.startyes": "Yes, I can!",
    "quest.visit_ultra_space.startno": "I'm a little busy...",
    "quest.visit_ultra_space.accepted": "Please return for data extraction prompty!",
    "quest.visit_ultra_space.rejected": "Fine, I'll do it myself.",
    "quest.visit_ultra_space.stage-10-0": "Visit Ultra Space",
    "quest.visit_ultra_space.stage-20-0": "Return to Ultra Recon Agent ?NAME?",
    "quest.visit_ultra_space.end": "Data extracted. Reward given.",
    "quest.visit_ultra_space.goodbye": "Goodbye",

    "quest.catch_a_pokemon": "Gather the Party",
    "quest.catch_a_pokemon.desc-10": "With your newly acquired Poké Ball, you are ready to try and add new Pokémon to your party!",
    "quest.catch_a_pokemon.desc-x": "You successfully befriended a new Pokémon! You should now train them up so they become the greatest!",
    "quest.catch_a_pokemon.stage-10-1": "Catch a ?SPEC_T?-type Pokémon",
    "quest.catch_a_pokemon.message": "§6You have caught a certain Pokémon!",

    "quest.craft_great_ball": "Moving on Up",
    "quest.craft_great_ball.desc-10": "Having made Poké Balls, the next step is to add Great Balls to your arsenal!",
    "quest.craft_great_ball.desc-x": "You successfully crafted a Great Ball, ready to be used to befriend more powerful Pokémon.",
    "quest.craft_great_ball.stage-10-0": "Craft a Great Ball",
    "quest.craft_great_ball.message": "§6You have crafted a Great Ball!",

    "quest.craft_healer": "Doctor Who?",
    "quest.craft_healer.desc-10": "Having used a Healer in a Pokémon Center, it is time to create your own!",
    "quest.craft_healer.desc-x": "You successfully crafted a Healer, ready to be used to keep your party in their prime.",
    "quest.craft_healer.stage-10-0": "Craft a Healer",
    "quest.craft_healer.message": "§6You have crafted a Healer!",

    "quest.craft_pc": "Processing Power",
    "quest.craft_pc.desc-10": "Having used a PC in a Pokémon Center, it is time to create your own!",
    "quest.craft_pc.desc-x": "You successfully crafted a PC, ready to be used to keep your party organized.",
    "quest.craft_pc.stage-10-0": "Craft a PC",
    "quest.craft_pc.message": "§6You have crafted a PC!",

    "quest.craft_poke_ball": "Kurt's Footsteps",
    "quest.craft_poke_ball.desc-10": "The first step to becoming a successful Pokémon Trainer is creating your own Poké Balls! Your party won't build itself!",
    "quest.craft_poke_ball.desc-x": "You successfully crafted a Poké Ball, ready to be used to befriend your first new Pokémon.",
    "quest.craft_poke_ball.stage-10-0": "Craft a Poké Ball",
    "quest.craft_poke_ball.message": "§6You have crafted a Poké Ball!",

    "quest.craft_ultra_ball": "Elite Four Ready",
    "quest.craft_ultra_ball.desc-10": "Having made Great Balls, it is time to make the Ball of choice of Elite Four members everywhere, the Ultra Ball!",
    "quest.craft_ultra_ball.desc-x": "You successfully crafted an Ultra Ball, ready to be used to befriend the most elusive Pokémon.",
    "quest.craft_ultra_ball.stage-10-0": "Craft an Ultra Ball",
    "quest.craft_ultra_ball.message": "§6You have crafted an Ultra Ball!",

    "quest.defeat_a_pokemon": "Training Time",
    "quest.defeat_a_pokemon.desc-10": "With your newly befriended Pokémon, you are ready to train them and hone their skills!",
    "quest.defeat_a_pokemon.desc-x": "You successfully trained with your Pokémon! You should keep at it so they become unstoppable in battle!",
    "quest.defeat_a_pokemon.stage-10-1": "Defeat # ?SPEC_T?-type Pokémon",
    "quest.defeat_a_pokemon.message": "§6You have defeated 3 Pokémon of a certain type!",

    "quest.find_master_ball": "Pinnacle of Silph Co.",
    "quest.find_master_ball.desc-10": "Having made Ultra Balls, it is time to venture out and discover the most powerful of them all, the Master Ball!",
    "quest.find_master_ball.desc-x": "You successfully found a Master Ball, ready to be used to befriend legendary beings of extraordinary strength.",
    "quest.find_master_ball.stage-10-0": "Find a Master Ball",
    "quest.find_master_ball.message": "§6You have found a Master Ball!",

    "quest.find_village": "Village Roots",
    "quest.find_village.desc-0": "Finding a village to live in is always a good start, you will need the services of their Pokémon Center to succeed!",
    "quest.find_village.desc-x": "You successfully found a village.",
    "quest.find_village.stage-0-0": "Find a Village",
    "quest.find_village.message": "§6You have found a village!",

    "quest.heal_team": "Medic!",
    "quest.heal_team.desc-10": "You will probably want to heal up your party, and you should head to the Pokémon Center to do so!",
    "quest.heal_team.desc-x": "You have successfully healed your party to full.",
    "quest.heal_team.stage-10-0": "Use a Healer",
    "quest.heal_team.message": "§6You have healed your party!",

    "quest.open_pc": "Internet Explorer",
    "quest.open_pc.desc-10": "In order to manage your party, you'll want to visit a PC! Give it a go!",
    "quest.open_pc.desc-x": "You have browsed a PC and used it to manage your party.",
    "quest.open_pc.stage-10-0": "Use a PC",
    "quest.open_pc.message": "§6You have opened your PC!",

    "quest.pick_apricorn": "Harvest Dawn",
    "quest.pick_apricorn.desc-10": "Exploring the wilderness can lead you to find many useful forms of flora to use in your adventures!",
    "quest.pick_apricorn.desc-x": "You successfully harvested a Red Apricorn, ready to be used to make your own Poké Balls.",
    "quest.pick_apricorn.stage-10-0": "Harvest a Red Apricorn",
    "quest.pick_apricorn.message": "§6You have harvested a Red Apricorn!",

    "quest.talk_to_npc": "Local Gossip",
    "quest.talk_to_npc.desc-10": "You may find that the village locals have useful information and tasks for you!",
    "quest.talk_to_npc.desc-x": "You've spoken to the locals. Maybe they'll have more jobs for you later on!",
    "quest.talk_to_npc.stage-10-0": "Speak to a Villager",
    "quest.talk_to_npc.message": "§6You have spoken to a villager!",

    "quest.zapdos": "Electric Eagle",
    "quest.zapdos.desc-10": "You've been told a tale about a magical orb and a bird seldom seen in the electric savannahs of the land...",
    "quest.zapdos.desc-20": "You get the sense you should infuse your orb with the essence of thunder...",
    "quest.zapdos.desc-30": "For the orb to regain the power it has lost, it has to test your mettle...",
    "quest.zapdos.desc-40": "The orb seeks an ancient shrine found in the energetic grasslands...",
    "quest.zapdos.desc-50": "You are being drawn to the shrine before you...",
    "quest.zapdos.desc-60": "You caught a Zapdos! You should return to Lorekeepr ?NAME?, and let them know!",
    "quest.zapdos.desc-x": "You successfully caught a Zapdos, and gave Lorekeeper ?NAME? valuable information about it! They gave you a strange charm and some candies as a reward!",
    "quest.zapdos.npcname": "Lorekeeper ?NAME?",
    "quest.zapdos.start": "May I humor you with a tale of a legendary Pokémon seldom seen in these parts?",
    "quest.zapdos.startyes": "Do tell!",
    "quest.zapdos.startno": "Not right now...",
    "quest.zapdos.rejected": "A shame. Should you like to hear it another time, do come back to me!",
    "quest.zapdos.talka": "Fantastic! So, since before history was known, the Legendary Birds have been known throughout the world.",
    "quest.zapdos.continuea": "Do continue...",
    "quest.zapdos.talkb": "Over time, records have dried up. Sightings are few and far between, with none having been seen in over 100 years.",
    "quest.zapdos.continueb": "Interesting...",
    "quest.zapdos.talkc": "However, I have found something! It seems that there are rare Orbs which can anchor their essence. I believe you should try and find one of these Orbs.",
    "quest.zapdos.continuec": "An Orb. Got it!",
    "quest.zapdos.message.a": "§eYou get the sense you should infuse your orb with the essence of thunder...",
    "quest.zapdos.message.b": "§eFor the orb to regain the power it has lost, it has to test your mettle...",
    "quest.zapdos.message.c": "§eThe orb seeks an ancient shrine found in the energetic grasslands...",
    "quest.zapdos.message.d": "§eYou are being drawn to the shrine before you...",
    "quest.zapdos.message.e": "§eYou caught Zapdos! Lorekeeper ?NAME? will definitely want to see!",
    "quest.zapdos.end": "Congratulations on befriending your new Zapdos! I wonder if there are any more rare Legendaries out there just waiting to be found...",
    "quest.zapdos.stage-10-0": "Find an Orb",
    "quest.zapdos.stage-20-0": "Infuse the Orb with Thunder",
    "quest.zapdos.stage-30-0": "Defeat # Pokémon",
    "quest.zapdos.stage-40-0": "Find a Static Shrine",
    "quest.zapdos.stage-50-0": "Catch Zapdos",
    "quest.zapdos.stage-60-0": "Return to Lorekeeper ?NAME?",
    "quest.zapdos.goodbye": "Goodbye.",

    "quest.moltres": "Fiery Flight",
    "quest.moltres.desc-10": "You've been told a tale about a magical orb and a bird seldom seen in the arid mesas of the land...",
    "quest.moltres.desc-20": "You get the sense you should infuse your orb with the essence of fire...",
    "quest.moltres.desc-30": "For the orb to regain the power it has lost, it has to test your mettle...",
    "quest.moltres.desc-40": "The orb seeks an ancient shrine found in the scorching badlands...",
    "quest.moltres.desc-50": "You are being drawn to the shrine before you...",
    "quest.moltres.desc-60": "You caught a Moltres! You should return to Lorekeepr ?NAME?, and let them know!",
    "quest.moltres.desc-x": "You successfully caught a Moltres, and gave Lorekeeper ?NAME? valuable information about it! They gave you a strange charm and some candies as a reward!",
    "quest.moltres.npcname": "Lorekeeper ?NAME?",
    "quest.moltres.start": "May I humor you with a tale of a legendary Pokémon seldom seen in these parts?",
    "quest.moltres.startyes": "Do tell!",
    "quest.moltres.startno": "Not right now...",
    "quest.moltres.rejected": "A shame. Should you like to hear it another time, do come back to me!",
    "quest.moltres.talka": "Fantastic! So, since before history was known, the Legendary Birds have been known throughout the world.",
    "quest.moltres.continuea": "Do continue...",
    "quest.moltres.talkb": "Over time, records have dried up. Sightings are few and far between, with none having been seen in over 100 years.",
    "quest.moltres.continueb": "Interesting...",
    "quest.moltres.talkc": "However, I have found something! It seems that there are rare Orbs which can anchor their essence. I believe you should try and find one of these Orbs.",
    "quest.moltres.continuec": "An Orb. Got it!",
    "quest.moltres.message.a": "§eYou get the sense you should infuse your orb with the essence of fire...",
    "quest.moltres.message.b": "§eFor the orb to regain the power it has lost, it has to test your mettle...",
    "quest.moltres.message.c": "§eThe orb seeks an ancient shrine found in the scorching badlands...",
    "quest.moltres.message.d": "§eYou are being drawn to the shrine before you...",
    "quest.moltres.message.e": "§eYou caught Moltres! Lorekeeper ?NAME? will definitely want to see!",
    "quest.moltres.end": "Congratulations on befriending your new Moltres! I wonder if there are any more rare Legendaries out there just waiting to be found...",
    "quest.moltres.stage-10-0": "Find an Orb",
    "quest.moltres.stage-20-0": "Infuse the Orb with Fire",
    "quest.moltres.stage-30-0": "Defeat # Pokémon",
    "quest.moltres.stage-40-0": "Find a Fiery Shrine",
    "quest.moltres.stage-50-0": "Catch Moltres",
    "quest.moltres.stage-60-0": "Return to Lorekeeper ?NAME?",
    "quest.moltres.goodbye": "Goodbye.",

    "quest.articuno": "Arctic Avian",
    "quest.articuno.desc-10": "You've been told a tale about a magical orb and a bird seldom seen in the arctic tundras of the land...",
    "quest.articuno.desc-20": "You get the sense you should infuse your orb with the essence of ice...",
    "quest.articuno.desc-30": "For the orb to regain the power it has lost, it has to test your mettle...",
    "quest.articuno.desc-40": "The orb seeks an ancient shrine found in the winter wastes...",
    "quest.articuno.desc-50": "You are being drawn to the shrine before you...",
    "quest.articuno.desc-60": "You caught an Articuno! You should return to Lorekeepr ?NAME?, and let them know!",
    "quest.articuno.desc-x": "You successfully caught a Articuno, and gave Lorekeeper ?NAME? valuable information about it! They gave you a strange charm and some candies as a reward!",
    "quest.articuno.npcname": "Lorekeeper ?NAME?",
    "quest.articuno.start": "May I humor you with a tale of a legendary Pokémon seldom seen in these parts?",
    "quest.articuno.startyes": "Do tell!",
    "quest.articuno.startno": "Not right now...",
    "quest.articuno.rejected": "A shame. Should you like to hear it another time, do come back to me!",
    "quest.articuno.talka": "Fantastic! So, since before history was known, the Legendary Birds have been known throughout the world.",
    "quest.articuno.continuea": "Do continue...",
    "quest.articuno.talkb": "Over time, records have dried up. Sightings are few and far between, with none having been seen in over 100 years.",
    "quest.articuno.continueb": "Interesting...",
    "quest.articuno.talkc": "However, I have found something! It seems that there are rare Orbs which can anchor their essence. I believe you should try and find one of these Orbs.",
    "quest.articuno.continuec": "An Orb. Got it!",
    "quest.articuno.message.a": "§eYou get the sense you should infuse your orb with the essence of ice...",
    "quest.articuno.message.b": "§eFor the orb to regain the power it has lost, it has to test your mettle...",
    "quest.articuno.message.c": "§eThe orb seeks an ancient shrine found in the winter wastes...",
    "quest.articuno.message.d": "§eYou are being drawn to the shrine before you...",
    "quest.articuno.message.e": "§eYou caught Articuno! Lorekeeper ?NAME? will definitely want to see!",
    "quest.articuno.end": "Congratulations on befriending your new Articuno! I wonder if there are any more rare Legendaries out there just waiting to be found...",
    "quest.articuno.stage-10-0": "Find an Orb",
    "quest.articuno.stage-20-0": "Infuse the Orb with Ice",
    "quest.articuno.stage-30-0": "Defeat # Pokémon",
    "quest.articuno.stage-40-0": "Find a Frozen Shrine",
    "quest.articuno.stage-50-0": "Catch Articuno",
    "quest.articuno.stage-60-0": "Return to Lorekeeper ?NAME?",
    "quest.articuno.goodbye": "Goodbye.",

    "quest.celebi": "The Forest Guardian",
    "quest.celebi.desc-10": "Kurt is asking you to craft some Level Balls for them.",
    "quest.celebi.stage-10-0": "Craft # Level Balls",
    "quest.celebi.desc-11": "You should return the Level Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-11-0": "Return to Kurt",
    "quest.celebi.desc-20": "Kurt is asking you to craft some Friend Balls for them.",
    "quest.celebi.stage-20-0": "Craft # Friend Balls",
    "quest.celebi.desc-21": "You should return the Friend Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-21-0": "Return to Kurt",
    "quest.celebi.desc-30": "Kurt is asking you to craft some Lure Balls for them.",
    "quest.celebi.stage-30-0": "Craft # Lure Balls",
    "quest.celebi.desc-31": "You should return the Lure Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-31-0": "Return to Kurt",
    "quest.celebi.desc-40": "Kurt is asking you to craft some Moon Balls for them.",
    "quest.celebi.stage-40-0": "Craft # Moon Balls",
    "quest.celebi.desc-41": "You should return the Moon Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-41-0": "Return to Kurt",
    "quest.celebi.desc-50": "Kurt is asking you to craft some Heavy Balls for them.",
    "quest.celebi.stage-50-0": "Craft # Heavy Balls",
    "quest.celebi.desc-51": "You should return the Heavy Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-51-0": "Return to Kurt",
    "quest.celebi.desc-60": "Kurt is asking you to craft some Fast Balls for them.",
    "quest.celebi.stage-60-0": "Craft # Fast Balls",
    "quest.celebi.desc-61": "You should return the Fast Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-61-0": "Return to Kurt",
    "quest.celebi.desc-70": "Kurt is asking you to craft some Love Balls for them.",
    "quest.celebi.stage-70-0": "Craft # Love Balls",
    "quest.celebi.desc-71": "You should return the Love Balls to Kurt, and find out what's next!",
    "quest.celebi.stage-71-0": "Return to Kurt",
    "quest.celebi.desc-80": "Kurt needs some time to work on something - you should return to them later!",
    "quest.celebi.stage-80-0": "Wait for Kurt to be ready",
    "quest.celebi.desc-90": "Kurt is probably ready for you now!",
    "quest.celebi.stage-90-0": "Return to Kurt",
    "quest.celebi.desc-100": "Kurt has given you a strange golden Poké Ball, and says there's a shrine deep in the forests of these lands that should accept it as an offering...",
    "quest.celebi.stage-100-0": "Find an Ilex Shrine",
    "quest.celebi.desc-110": "The Time Travel Pokémon appears!",
    "quest.celebi.stage-110-0": "Catch a Celebi",
    "quest.celebi.desc-120": "Kurt will definitely want to hear about what you discovered deep in the forests!",
    "quest.celebi.stage-120-0": "Return to Kurt",
    "quest.celebi.desc-x": "Having used a strange golden Poké Ball on a mysterious shrine, you successfully caught the Time Travel Pokémon, Celebi.",
    "quest.celebi.npcname": "Kurt",
    "quest.celebi.start": "Hello! Would it be possible for you to aid me in some of my work for a moment?",
    "quest.celebi.startyes": "Yes, absolutely!",
    "quest.celebi.startno": "Sorry, I'm busy.",
    "quest.celebi.rejected": "That's alright. Let me know when you are able to!",
    "quest.celebi.goodbye": "Goodbye.",
    "quest.celebi.talka": "Thank you so much! So, I am a crafter of exotic Poké Balls, and I have come across something unusual in my research.",
    "quest.celebi.continuea": "I see...",
    "quest.celebi.talkb": "There's tales of a mysterious shrine, and a golden Poké Ball that attracts its guardian to it!",
    "quest.celebi.continueb": "Interesting!",
    "quest.celebi.talkc": "I would like to craft this Poké Ball, and see if the stories are true. Could you help me with this?",
    "quest.celebi.continuec": "Yes, absolutely!",
    "quest.celebi.talkd": "Fantastic! First of all, I require 5 Level Balls - could you craft these for me?",
    "quest.celebi.ok": "Sure thing.",
    "quest.celebi.sorry": "Apologies.",
    "quest.celebi.give": "(Give Poké Balls)",
    "quest.celebi.wrongitem": "Huh? These aren't the Poké Balls I'm looking for!",
    "quest.celebi.givea": "Do you have those Level Balls for me?",
    "quest.celebi.accepteda": "Great! Next, could you craft me 5 Friend Balls?",
    "quest.celebi.giveb": "Do you have those Friend Balls for me?",
    "quest.celebi.acceptedb": "Great! Next, could you craft me 5 Lure Balls?",
    "quest.celebi.givec": "Do you have those Lure Balls for me?",
    "quest.celebi.acceptedc": "Great! Next, could you craft me 5 Moon Balls?",
    "quest.celebi.gived": "Do you have those Moon Balls for me?",
    "quest.celebi.acceptedd": "Great! Next, could you craft me 5 Heavy Balls?",
    "quest.celebi.givee": "Do you have those Heavy Balls for me?",
    "quest.celebi.acceptede": "Great! Next, could you craft me 5 Fast Balls?",
    "quest.celebi.givef": "Do you have those Fast Balls for me?",
    "quest.celebi.acceptedf": "Great! Lastly, could you craft me 5 Love Balls?",
    "quest.celebi.giveg": "Do you have those Love Balls for me?",
    "quest.celebi.acceptedg": "Great! I have some work to do now with all these, return to me later once I'm done!",
    "quest.celebi.message.a": "§eYou should return these Level Balls to Kurt and find out what's next...",
    "quest.celebi.message.b": "§eYou should return these Friend Balls to Kurt and find out what's next...",
    "quest.celebi.message.c": "§eYou should return these Lure Balls to Kurt and find out what's next...",
    "quest.celebi.message.d": "§eYou should return these Moon Balls to Kurt and find out what's next...",
    "quest.celebi.message.e": "§eYou should return these Heavy Balls to Kurt and find out what's next...",
    "quest.celebi.message.f": "§eYou should return these Fast Balls to Kurt and find out what's next...",
    "quest.celebi.message.g": "§eYou should return these Love Balls to Kurt and find out what's next...",
    "quest.celebi.return": "Hello again! I've done it! Here it is, the GS Ball. Take it!",
    "quest.celebi.take": "Thank you! What is it exactly?",
    "quest.celebi.shrine": "I'm not too sure. You should try and find the mysterious shrine now, and see what happens...",
    "quest.celebi.message.h": "§eThe shrine in front of you matches the description that Kurt gave...",
    "quest.celebi.message.i": "§eYou have caught the Time Travel Pokémon, Celebi! Kurt will definitely want to know!",
    "quest.celebi.end": "I knew it was all true! Thank you for showing me! Here, take this as a reminder of this day!",
    "quest.celebi.done": "Thank you!",

    "quest.galarian_articuno": "Arctic Alter",
    "quest.galarian_articuno.desc-10": "You've been told a tale about a Galarian forme of a bird seldom seen in the arctic tundras of the land... defeating Alter Pokémon may attract it!",
    "quest.galarian_articuno.desc-20": "You've been told a tale about a Galarian forme of a bird seldom seen in the arctic tundras of the land... defeating Alter Pokémon may attract it!",
    "quest.galarian_articuno.desc-30": "You've been told a tale about a Galarian forme of a bird seldom seen in the arctic tundras of the land... defeating Alter Pokémon may attract it!",
    "quest.galarian_articuno.desc-x": "A Galarian Articuno appeared to you in admiration of your skill in finding rare Pokémon! However, the Shady Lorekeeper is nowhere to be seen...",
    "quest.galarian_articuno.npcname": "Shady Lorekeeper",
    "quest.galarian_articuno.start": "May I humor you with a tale of a legendary Pokémon seldom seen in these parts?",
    "quest.galarian_articuno.startyes": "Do tell!",
    "quest.galarian_articuno.startno": "Not right now...",
    "quest.galarian_articuno.rejected": "A shame. Should you want to hear it another time, come back to me!",
    "quest.galarian_articuno.talka": "Fantastic! So, since before history was known, the Legendary Birds have been known throughout the world.",
    "quest.galarian_articuno.continuea": "Do continue...",
    "quest.galarian_articuno.talkb": "Over time, records have dried up. Sightings are few and far between, with none having been seen in over 100 years.",
    "quest.galarian_articuno.continueb": "Interesting...",
    "quest.galarian_articuno.talkc": "However, I have found something! It seems that there are alternate forms of these Legendaries emigrating from the Galar Region. Perhaps interacting with Alter Pokémon will garner some attention!",
    "quest.galarian_articuno.continuec": "Alter Pokémon. Got it!",
    "quest.galarian_articuno.message": "§eA Galarian Articuno appears!",
    "quest.galarian_articuno.stage-10-0": "Defeat Alter Pokémon",
    "quest.galarian_articuno.stage-20-0": "Defeat Alter Pokémon",
    "quest.galarian_articuno.stage-30-0": "Defeat Alter Pokémon",
    "quest.galarian_articuno.goodbye": "Goodbye.",

    "quest.galarian_zapdos": "Enigmatic Eagle",
    "quest.galarian_zapdos.desc-10": "You've been told a tale about a Galarian forme of a bird seldom seen in the electric savannahs of the land... defeating Strike Pokémon may attract it!",
    "quest.galarian_zapdos.desc-20": "You've been told a tale about a Galarian forme of a bird seldom seen in the electric savannahs of the land... defeating Strike Pokémon may attract it!",
    "quest.galarian_zapdos.desc-30": "You've been told a tale about a Galarian forme of a bird seldom seen in the electric savannahs of the land... defeating Strike Pokémon may attract it!",
    "quest.galarian_zapdos.desc-x": "A Galarian Zapdos appeared to you in admiration of your skill in finding rare Pokémon! However, the Shady Lorekeeper is nowhere to be seen...",
    "quest.galarian_zapdos.npcname": "Shady Lorekeeper",
    "quest.galarian_zapdos.start": "May I humor you with a tale of a legendary Pokémon seldom seen in these parts?",
    "quest.galarian_zapdos.startyes": "Do tell!",
    "quest.galarian_zapdos.startno": "Not right now...",
    "quest.galarian_zapdos.rejected": "A shame. Should you want to hear it another time, come back to me!",
    "quest.galarian_zapdos.talka": "Fantastic! So, since before history was known, the Legendary Birds have been known throughout the world.",
    "quest.galarian_zapdos.continuea": "Do continue...",
    "quest.galarian_zapdos.talkb": "Over time, records have dried up. Sightings are few and far between, with none having been seen in over 100 years.",
    "quest.galarian_zapdos.continueb": "Interesting...",
    "quest.galarian_zapdos.talkc": "However, I have found something! It seems that there are alternate forms of these Legendaries emigrating from the Galar Region. Perhaps interacting with Strike Pokémon will garner some attention!",
    "quest.galarian_zapdos.continuec": "Strike Pokémon. Got it!",
    "quest.galarian_zapdos.message": "§eA Galarian Zapdos appears!",
    "quest.galarian_zapdos.stage-10-0": "Defeat Strike Pokémon",
    "quest.galarian_zapdos.stage-20-0": "Defeat Strike Pokémon",
    "quest.galarian_zapdos.stage-30-0": "Defeat Strike Pokémon",
    "quest.galarian_zapdos.goodbye": "Goodbye.",

    "quest.galarian_moltres": "Ashen Avian",
    "quest.galarian_moltres.desc-10": "You've been told a tale about a Galarian forme of a bird seldom seen in the arid mesas of the land... defeating Ashen Pokémon may attract it!",
    "quest.galarian_moltres.desc-20": "You've been told a tale about a Galarian forme of a bird seldom seen in the arid mesas of the land... defeating Ashen Pokémon may attract it!",
    "quest.galarian_moltres.desc-30": "You've been told a tale about a Galarian forme of a bird seldom seen in the arid mesas of the land... defeating Ashen Pokémon may attract it!",
    "quest.galarian_moltres.desc-x": "A Galarian Moltres appeared to you in admiration of your skill in finding rare Pokémon! However, the Shady Lorekeeper is nowhere to be seen...",
    "quest.galarian_moltres.npcname": "Shady Lorekeeper",
    "quest.galarian_moltres.start": "May I humor you with a tale of a legendary Pokémon seldom seen in these parts?",
    "quest.galarian_moltres.startyes": "Do tell!",
    "quest.galarian_moltres.startno": "Not right now...",
    "quest.galarian_moltres.rejected": "A shame. Should you want to hear it another time, come back to me!",
    "quest.galarian_moltres.talka": "Fantastic! So, since before history was known, the Legendary Birds have been known throughout the world.",
    "quest.galarian_moltres.continuea": "Do continue...",
    "quest.galarian_moltres.talkb": "Over time, records have dried up. Sightings are few and far between, with none having been seen in over 100 years.",
    "quest.galarian_moltres.continueb": "Interesting...",
    "quest.galarian_moltres.talkc": "However, I have found something! It seems that there are alternate forms of these Legendaries emigrating from the Galar Region. Perhaps interacting with Ashen Pokémon will garner some attention!",
    "quest.galarian_moltres.continuec": "Ashen Pokémon. Got it!",
    "quest.galarian_moltres.message": "§eA Galarian Moltres appears!",
    "quest.galarian_moltres.stage-10-0": "Defeat Ashen Pokémon",
    "quest.galarian_moltres.stage-20-0": "Defeat Ashen Pokémon",
    "quest.galarian_moltres.stage-30-0": "Defeat Ashen Pokémon",
    "quest.galarian_moltres.goodbye": "Goodbye.",

    "quest.dynamax": "Shooting Star",
    "quest.dynamax.desc-10": "You've been tasked to empower a fallen star found by a travelling Professor ?NAME?.",
    "quest.dynamax.desc-20": "You should return to Professor ?NAME? to find out what you should do next!",
    "quest.dynamax.desc-30": "It seems the fallen star seeks to test your strength...",
    "quest.dynamax.desc-40": "The fallen star is pulsating with energy... perhaps Professor ?NAME? will know what to do next!",
    "quest.dynamax.desc-x": "Professor ?NAME? captured the energy within the fallen star and focused it into your new Dynamax Band!",
    "quest.dynamax.npcname": "Professor ?NAME?",
    "quest.dynamax.start": "Hello! I found something quite strange, reckon you could assist me?",
    "quest.dynamax.startyes": "Certainly!",
    "quest.dynamax.startno": "Not right now...",
    "quest.dynamax.rejected": "A shame. Come find me again if you change your mind!",
    "quest.dynamax.talka": "Fantastic! Here, have a look at this. What do you think?",
    "quest.dynamax.continuea": "What is it?",
    "quest.dynamax.talkb": "I believe this to be a fallen star! Impressive right? Well, there's more...",
    "quest.dynamax.continueb": "Go on...",
    "quest.dynamax.talkc": "It appears to respond to Pokémon working in harmony with people. Reckon you could hold onto it for a bit, see what happens?",
    "quest.dynamax.continuec": "Sure thing!",
    "quest.dynamax.startquest": "Great! Come back to me once you've spent some time with it, so I can have another look!",
    "quest.dynamax.middle": "Interesting indeed! It seems it wants to see you face more of a challenge now, try fighting other Trainers!",
    "quest.dynamax.middleok": "Okay, will do!",
    "quest.dynamax.message.a": "§eThe fallen star feels warm to the touch...",
    "quest.dynamax.message.b": "§eThe fallen star pulsates with energy...",
    "quest.dynamax.enda": "Now this is extraordinary! Let me hold this for a moment...",
    "quest.dynamax.endachoice": "What is it!?",
    "quest.dynamax.endb": "Here we go! A Dynamax Band! This will allow you to infuse your Pokémon with immense power, for a short while!",
    "quest.dynamax.stage-10-2": "Defeat # Pokémon",
    "quest.dynamax.stage-10-3": "Capture # Pokémon",
    "quest.dynamax.stage-20-0": "Talk to Professor ?NAME?",
    "quest.dynamax.stage-30-1": "Defeat # Trainers",
    "quest.dynamax.stage-40-0": "Talk to Professor ?NAME?",
    "quest.dynamax.stage-41-0": "Talk to Professor ?NAME?",
    "quest.dynamax.goodbye": "Thank you!",

    "quest.enter_drowned_world": "The Water Plane",
    "quest.enter_drowned_world.desc-x": "You've visited the Plane of Water, and you now feel a connection that wasn't there before...",
    "quest.enter_drowned_world.npcname": "???",
    "quest.enter_drowned_world.start": "Would you like to enter the Plane of Water? Make sure you're prepared for it!",
    "quest.enter_drowned_world.startyes": "Yes please!",
    "quest.enter_drowned_world.startno": "Not right now...",
    "quest.enter_drowned_world.accepted": "Here we go!",
    "quest.enter_drowned_world.rejected": "Later, perhaps?",
    "quest.enter_drowned_world.goodbye": "Goodbye.",

    "quest.waterbreathing": "Water Like Air",
    "quest.waterbreathing.desc-10": "Having previously visited the Plane of Water, it would be nice to make exploration of that space easier... a Mysterious Person thinks they can do it with some samples of Water types...",
    "quest.waterbreathing.desc-20": "You've gathered the samples, and the Mysterious Person will be awaiting my return.",
    "quest.waterbreathing.desc-x": "You've been infused with a strange power, allowing you to breate water like air, and see more clearly in the dark depths.",
    "quest.waterbreathing.npcname": "???",
    "quest.waterbreathing.start": "I see you've been to the Plane of Water. Would you like to have an easier time there?",
    "quest.waterbreathing.startyes": "Yes please!",
    "quest.waterbreathing.startno": "I'm a little busy...",
    "quest.waterbreathing.accepted": "Okay! I'll need some samples of Water, could you get them for me?",
    "quest.waterbreathing.rejected": "Later, perhaps?",
    "quest.waterbreathing.accept": "Will do!",
    "quest.waterbreathing.goodbye": "Goodbye.",
    "quest.waterbreathing.end": "Thank you! Here, I'll infuse you with the power to breathe water!",
    "quest.waterbreathing.stage-10-0": "Capture # Water-type Pokémon",
    "quest.waterbreathing.stage-10-1": "Defeat # Water-type Pokémon",
    "quest.waterbreathing.stage-20-0": "Return to the Mysterious Person",

    "quest.defeat_drowned": "The Drowned",
    "quest.defeat_drowned.desc-10": "You've been told a tale about an otherworldly forme of Lugia that sleeps in the depths, waiting to be riled up...",
    "quest.defeat_drowned.desc-20": "The Lugia appears!",
    "quest.defeat_drowned.desc-30": "The Lugia dropped a fragment of itself, perhaps the Mysterious Person would like to see?",
    "quest.defeat_drowned.desc-x": "The Mysterious Person took the fragment, and turned it into a very unique Alcremie!",
    "quest.defeat_drowned.npcname": "???",
    "quest.defeat_drowned.start": "Lugia sleeps in the Plane of Water. The Drowned keep it at rest. Defeat them.",
    "quest.defeat_drowned.startyes": "Sure!",
    "quest.defeat_drowned.startno": "I'm a little busy...",
    "quest.defeat_drowned.accepted": "Good luck. Make sure to visit prepared.",
    "quest.defeat_drowned.rejected": "It will not rest forever...",
    "quest.defeat_drowned.goodbye": "Goodbye.",
    "quest.defeat_drowned.end": "You defeated it!? Could you give me a fragment of it perhaps? There's something I could do for you...",
    "quest.defeat_drowned.give": "(Give Eye of Lugia)",
    "quest.defeat_drowned.wrongitem": "This isn't a fragment of the Lugia? Come back when you're willing to share it!",
    "quest.defeat_drowned.stage-10-1": "Defeat # Drowned Pokémon",
    "quest.defeat_drowned.stage-20-0": "Defeat Lugia!",
    "quest.defeat_drowned.stage-30-0": "Give the Eye to the Mysterious Person",
    "quest.defeat_drowned.message.a": "§6You have unlocked the Drowned Robe! Use '/redeem gui' to equip it!",

    "quest.element.block_use": "Use Block",
    "quest.element.block_break": "Break Block",
    "quest.element.block_place": "Place Block",
    "quest.element.item_use": "Use Item",
    "quest.element.item_pickup": "Find Item",
    "quest.element.item_craft": "Craft Item",
    "quest.element.item_smelt": "Smelt Item",
    "quest.element.item_drop": "Drop Item",
    "quest.element.apricorn_harvest": "Pick Apricorn",
    "quest.element.pokemon_capture": "Catch Pokémon",
    "quest.element.pokemon_defeat": "Defeat Pokémon",
    "quest.element.pokemon_defeat_npc": "Defeat Pokémon (NPC)",
    "quest.element.pokemon_defeat_wild": "Defeat Pokémon (Wild)",
    "quest.element.pokemon_defeat_player": "Defeat Pokémon (Player)",
    "quest.element.pokemon_defeated_by": "Lose To Pokémon",
    "quest.element.pokemon_has": "Has Pokémon",
    "quest.element.pokemon_hatch": "Hatch Pokémon",
    "quest.element.pokemon_evolve_pre": "Evolve From",
    "quest.element.pokemon_evolve_post": "Evolve To",
    "quest.element.pokemon_trade_get": "Trade For",
    "quest.element.pokemon_trade_give": "Trade Away",
    "quest.element.battle_move_user": "Use Move",
    "quest.element.battle_move_target": "Hit By Move",
    "quest.element.trainer_defeat": "Defeat Trainer",
    "quest.element.trainer_defeated_by": "Lose To Trainer",
    "quest.element.npc_respond": "Respond to NPC",
    "quest.element.npc_talk": "Talk to NPC",
    "quest.element.npc_give": "Give to NPC",
    "quest.element.npc_show": "Show to NPC",
    "quest.element.entity_interact": "Interact With Entity",
    "quest.element.entity_vicinity": "Be Near Entity",
    "quest.element.tileentity_vicinity": "Be Near Tile Entity",
    "quest.element.dialogue": "Dialogue",
    "quest.element.world_time": "World Time",
    "quest.element.server_time": "Server Time",
    "quest.element.absolute_position": "Position",
    "quest.element.dimension": "Dimension",
    "quest.element.structure": "Structure",
    "quest.element.blocker": "Blocker",
    "quest.element.random": "Random Chance",
    "quest.element.followthrough": "Autocomplete",
    "quest.element.date": "Date",
    "quest.element.query": "Query Other Quest",
    "quest.element.flag": "Check Flag",
    "quest.element.timer": "Timer",
    "quest.element.npc_spawn_inserter": "NPC Inserter (Spawn)",
    "quest.element.npc_timed_inserter": "NPC Inserter (Timed)",
    "quest.element.dex_values_spec_inserter": "Spec Inserter (Dex)",
    "quest.element.type_values_spec_inserter": "Spec Inserter (Type)",
    "quest.element.name_inserter": "Name Inserter",
    "quest.element.boolean_inserter": "Boolean Inserter",
    "quest.element.concatenate_inserter": "Concatenation Inserter",
    "quest.element.decimal_inserter": "Decimal Inserter",
    "quest.element.integer_inserter": "Integer Inserter",
    "quest.element.item_has": "Has Item",
    "quest.element.item_has_not": "Doesn't Have Item",
    "quest.element.operation_inserter": "Operation Inserter",
    "quest.element.string_inserter": "String Inserter",
    "quest.element.test_data": "Test Data",
    "quest.element.typing_inserter": "Typing Inserter",

    "quest.element.message": "Message",
    "quest.element.localized_message": "Translated Message",
    "quest.element.set_stage": "Set Stage",
    "quest.element.complete_quest": "Complete Quest",
    "quest.element.fail_quest": "Fail Quest",
    "quest.element.teleport": "Teleport",
    "quest.element.command": "Execute Command",
    "quest.element.pokemon_give": "Give Pokémon",
    "quest.element.pokemon_spawn": "Spawn Pokémon",
    "quest.element.item_give": "Give Item",
    "quest.element.key_item": "Give Key Item",
    "quest.element.take_key_item": "Take Key Item",
    "quest.element.end_dialogue": "End Dialogue",
    "quest.element.set_flag": "Set Flag",
    "quest.element.unset_flag": "Unset Flag",
    "quest.element.potion": "Apply Potion",
    "quest.element.sound": "Play Sound",
    "quest.element.xp_give": "Give XP",
    "quest.element.abandonable": "Mark Abandonable",
    "quest.element.server_cosmetic": "Give Server Cosmetic",
    "quest.element.take_server_cosmetic": "Take Server Cosmetic",

    "quest.argument.attacks": "Attacks (CSV)",
    "quest.argument.count": "Count",
    "quest.argument.type": "Type",
    "quest.argument.category": "Category",
    "quest.argument.result": "Result",
    "quest.argument.damage": "Damage",
    "quest.argument.full_damage": "Full Damage",
    "quest.argument.accuracy": "Accuracy",
    "quest.argument.sound_based": "Sound Based",
    "quest.argument.user_spec": "User Spec",
    "quest.argument.target_spec": "Target Spec",
    "quest.argument.entity_uuid": "Entity UUID",
    "quest.argument": "Name",
    "quest.argument.dialogue": "Dialogue",
    "quest.argument.choice_1": "Choice 1",
    "quest.argument.choice_2": "Choice 2",
    "quest.argument.choice_3": "Choice 3",
    "quest.argument.choice_4": "Choice 4",
    "quest.argument.choice_5": "Choice 5",
    "quest.argument.choice_6": "Choice 6",
    "quest.argument.choice_7": "Choice 7",
    "quest.argument.choice_8": "Choice 8",
    "quest.argument.entity_uuid_class": "Entity UUID/Class",
    "quest.argument.range": "Range",
    "quest.argument.dialogue_option": "Dialogue Option",
    "quest.argument.item": "Item",
    "quest.argument.damage_metadata": "Damage/Metadata",
    "quest.argument.display_name": "Display Name",
    "quest.argument.domain_mod": "Domain/Mod",
    "quest.argument.tags": "Tags (CSV)",
    "quest.argument.spec": "Spec",
    "quest.argument.tile_entity": "Tile Entity",
    "quest.argument.pos_a_x": "Pos A X",
    "quest.argument.pos_a_y": "Pos A Y",
    "quest.argument.pos_a_z": "Pos A Z",
    "quest.argument.pos_b_x": "Pos B X",
    "quest.argument.pos_b_y": "Pos B Y",
    "quest.argument.pos_b_z": "Pos B Z",
    "quest.argument.dimension": "Dimension ID",
    "quest.argument.ignore_y": "Ignore Y",
    "quest.argument.start_date": "Start Date",
    "quest.argument.end_date": "End Date",
    "quest.argument.flag": "Flag",
    "quest.argument.quest_filename": "Quest Filename",
    "quest.argument.actions": "Actions (e.g 0,1:2:3)",
    "quest.argument.weights": "Weights (e.g 30:70:5)",
    "quest.argument.time": "Time (ms)",
    "quest.argument.time_range": "Time Range (ms)",
    "quest.argument.structure": "Structure Name",
    "quest.argument.time_ticks": "Time (ticks)",
    "quest.argument.time_range_ticks": "Time Range (ticks)",
    "quest.argument.command": "Command (@p for player)",
    "quest.argument.lore": "Lore (\\n separator)",
    "quest.argument.has_effect": "Has Effect",
    "quest.argument.hide_tooltip": "Hide Tooltip",
    "quest.argument.flags": "Flags",
    "quest.argument.key_item": "Key Item",
    "quest.argument.server_cosmetic": "Server Cosmetic",
    "quest.argument.potion": "Potion Effect",
    "quest.argument.duration": "Duration (ticks)",
    "quest.argument.amplitude": "Amplitude",
    "quest.argument.ambient": "Ambient",
    "quest.argument.particles": "Particles",
    "quest.argument.message": "Message",
    "quest.argument.lang_key": "Lang Key",
    "quest.argument.stage": "Stage",
    "quest.argument.x": "X",
    "quest.argument.y": "Y",
    "quest.argument.z": "Z",
    "quest.argument.alignment": "Alignment",
    "quest.argument.sound": "Sound",
    "quest.argument.volume": "Volume",
    "quest.argument.pitch": "Pitch",
    "quest.argument.sound_category": "Category",
    "quest.argument.engage": "Engage",
    "quest.argument.yawangle": "Yaw",
    "quest.argument.pitchangle": "Pitch",
    "quest.argument.success": "Is Successful",
    "quest.argument.levels": "Levels",
    "quest.argument.experience": "Experience",
    "quest.argument.key": "Value ID",
    "quest.argument.chance": "Chance",
    "quest.argument.world_time": "World Time",
    "quest.argument.world_time_optional": "World Time (Optional)",
    "quest.argument.dex_values": "Dex Values (CSV + ranges)",
    "quest.argument.type_values": "Types (CSV)",
    "quest.argument.natures": "Natures (CSV)",
    "quest.argument.growths": "Growths (CSV)",
    "quest.argument.abandonable": "Is Abandonable",
    "quest.argument.gender": "Gender",
    "quest.argument.true_weight": "True (Weight)",
    "quest.argument.false_weight": "False (Weight)",
    "quest.argument.nbt": "NBT",
    "quest.argument.other_key": "Other Value ID",
    "quest.argument.spacer": "Spacer",
    "quest.argument.values": "Values (x;y list or x-y range)",
    "quest.argument.operator": "Operator",
    "quest.argument.mode": "Mode",
    "quest.argument.pos_A_X": "X (A)",
    "quest.argument.pos_A_Y": "Y (A)",
    "quest.argument.pos_A_Z": "Z (A)",
    "quest.argument.pos_B_X": "X (B)",
    "quest.argument.pos_B_Y": "Y (B)",
    "quest.argument.pos_B_Z": "Z (B)",
    "quest.argument.strings": "Strings (x;y list)",
    "quest.argument.value": "Value",
    "quest.argument.typings": "Typings (x;y list)",
    "quest.argument.relative_x": "Relative X",
    "quest.argument.relative_y": "Relative Y",
    "quest.argument.relative_z": "Relative Z",
    "quest.argument.relative_yaw": "Relative Yaw",
    "quest.argument.relative_pitch": "Relative Pitch",
    "quest.argument.relative_dimension": "Relative Dimension",
    "quest.argument.x_alignment": "X Alignment",
    "quest.argument.y_alignment": "Y Alignment",
    "quest.argument.z_alignment": "Z Alignment",
    "gui.pixelmonspawner.pokemonspec": "Pokemon Specs",
    "gui.pixelmonspawner.shinyratio": "Shiny Ratio",
    "gui.pixelmonspawner.gmaxratio": "G-Max Ratio",
    "gui.pixelmonspawner.uncatchable": "Uncatchable",
    "gui.pixelmonspawner.unbattleable": "Unbattleable",
    "gui.pixelmonspawner.unbreedable": "Unbreedable",
    "gui.pixelmonspawner.select": "Select a pokemon",
    "gui.pixelmonspawner.weight": "Weight",
    "gui.pixelmonspawner.chance": "Chance",
    "gui.axis_on.text": "On",
    "gui.model.palette": "Palette",
    "gui.texture.bounding_box_mode": "BB Mode",
    "gui.texture.can_move": "Movement",
    "pokemon.uncatchable": "Uncatchable",

    "item.pixelmon.adamant_crystal": "Adamant Crystal",
    "item.pixelmon.lustrous_globe": "Lustrous Globe",
    "item.pixelmon.griseous_core": "Griseous Core"
}
